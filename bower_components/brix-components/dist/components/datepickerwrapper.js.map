{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/datepickerwrapper.js","webpack:///webpack/bootstrap 19a023b50e8cd3f19176","webpack:///./src/datepickerwrapper/index.js","webpack:///./src/datepickerwrapper/datepickerwrapper.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"moment\"","webpack:///external \"brix/loader\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\"","webpack:///external \"components/datepicker\"","webpack:///./src/dialog/position.js","webpack:///./src/datepickerwrapper/datepickerwrapper.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","moment","Loader","Brix","EventManager","DatePicker","position","template","DatePickerWrapper","RE_INPUT","NAMESPACE","DATE_PATTERN","TIME_PATTERN","DATE_TIME_PATTERN","SHORTCUTS","now","nowDate","get","shortcuts","今天","startOf","昨天","subtract","过去 7 天","本月","上月","最近 15 天","STATE","PENDING","ACTIVE","INACTIVE","extend","prototype","options","placement","align","offset","mode","type","dates","ranges","excludeds","unlimits","init","typeMap","length","format","each","date","index","isString","range","flatten","_ranges","map","join","excluded","_excludeds","css","window","render","that","$element","element","$relatedElement","insertAfter","defer","Deferred","clientId","off","on","event","toggle","$manager","delegate","_autoHide","promise","val","value","pickerComponents","query","item","isArray","submit","_signal","boot","pickerComponent","preventDefault","stopPropagation","undefined","time","hide","validate","Event","trigger","isDefaultPrevented","_unlimitFilter","items","$item","test","nodeName","triggerHandler","resolve","_multiple","inputWrapper","inputs","pickerWrapper","pickers","shortcutWrapper","values","same","optionDate","isSame","eq","addClass","siblings","removeClass","unlimit","pattern","text","_inputToggleDatePicker","inputWrapperOffset","left","top","outerHeight","parseInt","pickerLeft","$picker","$target","target","targetOffset","outerWidth","_hideDatePicker","show","_offset","toggleClass","relatedMarginLeft","relatedMarginTop","from","attr","shortcutText","shortcutDates","key","shortcutDate","_change","split","isValid","_state","document","body","contains","inactiveEvent","destroy","undelegate","remove","apply","overlay","$trigger","center","triggerOffset","triggerLeft","triggerTop","triggerWidth","triggerHeight","$overlay","visible","overlayWidth","overlayHeight","leftDiff","topDiff","RE_TOP_OR_BOTTOM","RE_LEFT_OR_RIGHT","width","height","parseFloat","$window","windowWidth","windowHeight","scrollLeft","scrollTop","start","result","opacity","end"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,UAAAA,QAAA,cAAAA,QAAA,UAAAA,QAAA,eAAAA,QAAA,mBAAAA,QAAA,cAAAA,QAAA,0BACA,kBAAAC,gBAAAC,IACAD,QAAA,qGAAAJ,GACA,gBAAAC,SACAA,QAAA,gCAAAD,EAAAG,QAAA,UAAAA,QAAA,cAAAA,QAAA,UAAAA,QAAA,eAAAA,QAAA,mBAAAA,QAAA,cAAAA,QAAA,0BAEAJ,EAAA,gCAAAC,EAAAD,EAAA,OAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,eAAAA,EAAA,mBAAAA,EAAA,cAAAA,EAAA,2BACCO,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAf,OAGA,IAAAC,GAAAe,EAAAD,IACAf,WACAiB,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAlB,EAAAD,QAAAC,IAAAD,QAAAc,GAGAb,EAAAiB,QAAA,EAGAjB,EAAAD,QAvBA,GAAAgB,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASb,EAAQD,EAASc,GEtDhCb,EAAAD,QAAAc,EAAA,IF4DM,SAASb,EAAQD,EAASc,GG5DhC,GAAAS,GAAAC,CACAD,IAEAT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,KACAU,EACA,SACAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EACAC,EACAC,EACAC,GAwDA,QAAAC,MA3CA,GAAAC,GAAA,oBACAC,EAAA,qBAEAC,EAAAN,EAAAM,aACAC,EAAAP,EAAAO,aACAC,EAAAR,EAAAQ,kBACAC,EAAA,WACA,GAAAC,GAAAd,IACAe,EAAAD,EAAAE,IAAA,QACAC,GACAC,MACAlB,IAAAmB,QAAA,OACAnB,IAAAmB,QAAA,QAEAC,MACApB,IAAAmB,QAAA,OAAAE,SAAA,UACArB,IAAAmB,QAAA,OAAAE,SAAA,WAEAC,UACAtB,IAAAmB,QAAA,OAAAE,SAAA,UACArB,IAAAmB,QAAA,OAAAE,SAAA,WAEAE,MACAvB,IAAAmB,QAAA,OAAAE,SAAAN,EAAA,UACAf,IAAAmB,QAAA,QAEAK,MACAxB,IAAAmB,QAAA,OAAAA,QAAA,SAAAE,SAAA,WACArB,IAAAmB,QAAA,OAAAA,QAAA,SAAAE,SAAA,WAEAI,WACAzB,IAAAmB,QAAA,OAAAE,SAAA,WACArB,IAAAmB,QAAA,OAAAE,SAAA,WAGA,OAAAJ,MAEAS,GACAC,QAAA,UACAC,OAAA,SACAC,SAAA,WAofA,OA/eAtB,GAAAG,eACAH,EAAAI,eACAJ,EAAAK,oBACAL,EAAAM,YAEAd,EAAA+B,OAAAvB,EAAAwB,UAAA7B,EAAA6B,WACAC,SACAC,UAAA,SACAC,MAAA,OACAC,UAEAC,KAAA,SACAnB,UAAAJ,EACAwB,KAAA,OACAC,SACAC,UACAC,aACAC,aAEAC,KAAA,WAEAhE,KAAAsD,QAAAW,QAAAvC,EAAAuC,QAAAjE,KAAAsD,QAAAK,MACA3D,KAAAsD,QAAAM,MAAAM,OAAA,IAAAlE,KAAAsD,QAAAI,KAAA,YACA1D,KAAAsD,QAAAM,MAAAM,SAAAlE,KAAAsD,QAAAM,OAAAtC,IAAAmB,QAAA,OAAA0B,OAAAnC,KACAhC,KAAAsD,QAAAf,WACAlB,EAAA+C,KAAApE,KAAAsD,QAAAf,UAAA,SAAAqB,GACAvC,EAAA+C,KAAAR,EAAA,SAAAS,EAAAC,GACAV,EAAAU,GAAAhD,EACA+C,EACAhD,EAAAkD,SAAAF,IAAAnC,OAOAlC,KAAAsD,QAAAkB,OAAAxE,KAAAsD,QAAAkB,MAAAN,SAAAlE,KAAAsD,QAAAO,OAAA7D,KAAAsD,QAAAkB,OACAxE,KAAAsD,QAAAO,OAAAxC,EAAAoD,QAAAzE,KAAAsD,QAAAO,QAAA7D,KAAAsD,QAAAkB,OACAnD,EAAA+C,KAAApE,KAAAsD,QAAAO,OAAA,SAAAQ,EAAAC,EAAAT,GACAQ,IAAAR,EAAAS,GAAAhD,EACA+C,EACAhD,EAAAkD,SAAAF,IAAAnC,MAGAlC,KAAAsD,QAAAoB,QAAArD,EAAAsD,IAAA3E,KAAAsD,QAAAO,OAAA,SAAAQ,GACA,GAAAA,EAAA,MAAAA,GAAAF,OAAAnC,KAEAhC,KAAAsD,QAAAoB,QAAA,KAAA1E,KAAAsD,QAAAoB,QAAAE,KAAA,YAGA5E,KAAAsD,QAAAuB,UAAA7E,KAAAsD,QAAAuB,SAAAX,SAAAlE,KAAAsD,QAAAQ,UAAA9D,KAAAsD,QAAAuB,UACA7E,KAAAsD,QAAAQ,UAAAzC,EAAAoD,QAAAzE,KAAAsD,QAAAQ,WAAA9D,KAAAsD,QAAAuB,UACAxD,EAAA+C,KAAApE,KAAAsD,QAAAQ,UAAA,SAAAO,EAAAC,EAAAR,GACAO,IAAAP,EAAAQ,GAAAhD,EACA+C,EACAhD,EAAAkD,SAAAF,IAAAnC,MAGAlC,KAAAsD,QAAAwB,WAAAzD,EAAAsD,IAAA3E,KAAAsD,QAAAQ,UAAA,SAAAO,GACA,GAAAA,EAAA,MAAAA,GAAAF,OAAAnC,KAEAhC,KAAAsD,QAAAwB,WAAA9E,KAAAsD,QAAAwB,WAAAZ,OACA,KAAAlE,KAAAsD,QAAAwB,WAAAF,KAAA,YACA,KAUAhD,EAAA5B,KAAAsD,QAAA1B,YAGA5B,KAAAsD,QAAAyB,KAAAC,OAAAnF,QAAA,OAAAG,KAAAsD,QAAAyB,MAEAE,OAAA,WACA,GAAAC,GAAAlF,IACAA,MAAAmF,SAAA/D,EAAApB,KAAAoF,SACApF,KAAAqF,gBAAAjE,EACAC,EAAAO,YAAA5B,KAAAsD,UACAgC,YAAAtF,KAAAmF,SAEA,IAAAI,GAAAnE,EAAAoE,UACAxF,MAAA,IAAAA,KAAAsD,QAAAI,MAAA6B,EAEA,IAAA5B,GAAA,kCAAA3D,KAAAyF,QACAzF,MAAAmF,SAAAO,IAAA/B,GACAgC,GAAAhC,EAAA,SAAAiC,GACAV,EAAAW,OAAAD,IAGA,IAAAE,GAAA9F,KAAA8F,SAAA,GAAArE,GAAA,MAMA,OALAqE,GAAAC,SAAA/F,KAAAmF,SAAAnF,MACA8F,EAAAC,SAAA/F,KAAAqF,gBAAArF,MAEAA,KAAAgG,YAEAT,EAAAU,WAEAC,IAAA,SAAAC,GACA,GAAAC,GAAA7E,EAAA8E,MAAA,wBAAArG,KAAAqF,gBACA,OAAAc,IACA9E,EAAA+C,KAAAgC,EAAA,SAAAE,EAAAhC,GACAgC,EAAAJ,IACA7E,EAAAkF,QAAAJ,KAAA7B,GAAA6B,KAIAnG,KAAAwG,SACAxG,MAEAqB,EAAAsD,IAAAyB,EAAA,SAAAE,GACA,MAAAA,GAAAJ,SAGA1B,MAAA,SAAA2B,GACA,GAAAC,GAAA7E,EAAA8E,MAAA,wBAAArG,KAAAqF,gBACA,OAAAc,IACAnG,KAAAsD,QAAAO,OAAAsC,EAAA9E,EAAAoD,QAAA0B,GACA9E,EAAA+C,KAAAgC,EAAA,SAAAE,GACAA,EAAA9B,MAAA2B,KAEAnG,MAEAA,KAAAsD,QAAAO,QAEAgB,SAAA,SAAAsB,GACA,GAAAC,GAAA7E,EAAA8E,MAAA,wBAAArG,KAAAqF,gBACA,OAAAc,IACAnG,KAAAsD,QAAAQ,UAAAqC,EAAA9E,EAAAoD,QAAA0B,GACA9E,EAAA+C,KAAAgC,EAAA,SAAAE,GACAA,EAAAzB,SAAAsB,KAEAnG,MAEAA,KAAAsD,QAAAQ,WAEA2C,QAAA,SAAAlB,GACA,GAAAL,GAAAlF,IACAuB,GAAAmF,MAAA,EAAA1G,KAAAqF,gBAAA,WACA,GAAAsB,GAAApF,EAAA8E,MAAA,wBAAAnB,EAAAG,iBAAA,EAEAsB,GAAAhB,GAAA,iDAAAC,EAAAvB,EAAAV,GAEA,IAAAU,EAGA,MAFAuB,GAAAgB,qBACAhB,GAAAiB,iBAGA,MAAAC,SAAAnD,GAAA,SAAAA,GAAA,SAAAA,GACAuB,EAAA5B,QAAAW,QAAA8C,MAAA,SAAApD,GAAA,CAEAuB,EAAA8B,MAEA,IAAAC,GAAA7F,EAAA8F,MAAA,SAAAnF,EAIA,IAHAmD,EAAAiC,QAAAF,IACA5C,GAAAV,KAEAsD,EAAAG,qBAAA,CACA,GAAAjB,GAAAjB,EAAAmC,eAAAhD,EAAAa,EAAA5B,QAAAS,SAAA,IACAuD,EAAAlG,EAAA,eAAA8D,EAAAC,SACAmC,GAAApD,OACA7C,EAAA+C,KAAAkD,EAAA,SAAAhB,EAAAhC,GACA,GAAAiD,GAAAnG,EAAAkF,EACAiB,GACAzF,EAAA0F,KAAAlB,EAAAmB,UAAA,cACAtB,KAGAjB,EAAAC,SACArD,EAAA0F,KAAAtC,EAAAE,QAAAqC,UAAA,cACAtB,GAKAjB,EAAAC,SAAAuC,eAAA,UACA5F,EAAA0F,KAAAtC,EAAAE,QAAAqC,WACArG,EAAA,sBAAA8D,EAAAC,UACAe,IAAAC,GACAuB,eAAA,cAIAf,EAAAxB,SAAAQ,GAAA,4DACAT,EAAA8B,SAGAzB,KAAAoC,aAGAC,UAAA,SAAArC,GACA,GAAAL,GAAAlF,IACAuB,GAAAmF,MAAA,EAAA1G,KAAAqF,gBAAA,WACA,GAAAwC,GAAAzG,EAAA,4BAAA8D,EAAAG,iBACAyC,EAAA1G,EAAA,QAAAyG,GAEAE,EAAA3G,EAAA,6BAAA8D,EAAAG,iBACA2C,EAAA5G,EAAA,UAAA2G,GAEA3B,EAAA7E,EAAA8E,MAAA,wBAAAnB,EAAAG,iBAEA4C,EAAA7G,EAAA,+BAAA8D,EAAAG,iBACA9C,EAAAnB,EAAA,YAAA6G,EAEA/C,GAAA5B,QAAAf,WACAlB,EAAA+C,KAAA/C,EAAA6G,OAAAhD,EAAA5B,QAAAf,WAAA,SAAAqB,EAAAU,GACA,GAAA6D,IAAA,CACA9G,GAAA+C,KAAAR,EAAA,SAAAS,EAAAC,GACA,GAAA8D,GAAA9G,EACA4D,EAAA5B,QAAAM,MAAAU,GACAjD,EAAAkD,SAAAW,EAAA5B,QAAAM,MAAAU,KAAApC,EAEAmC,GAAAgE,OAAAD,EAAA,UAAAD,GAAA,KAEAA,GACA5F,EAAA+F,GAAAhE,GAAAiE,SAAA,UACAC,WAAAC,YAAA,YAKApH,EAAA+C,KAAA0D,EAAA,SAAAxB,EAAAhC,GACAlD,EAAAkF,GACAJ,IACA5E,EACA4D,EAAA5B,QAAAM,MAAAU,GACAjD,EAAAkD,SAAAW,EAAA5B,QAAAM,MAAAU,KAAApC,GAEAiC,OAAAnC,MAIAX,EAAA+C,KAAAgC,EAAA,SAAAE,EAAAhC,GAEAgC,EAAAJ,IAAAhB,EAAA5B,QAAAM,MAAAU,IACAqB,GAAA,kDAAAC,EAAAvB,EAAAV,GACA,KAAAmD,SAAAnD,GAAA,SAAAA,GAAA,SAAAA,GACAuB,EAAA5B,QAAAW,QAAA8C,MAAA,SAAApD,GAAA,CAEA,GAAAwC,GAAAjB,EAAAmC,eAAAhD,EAAAa,EAAA5B,QAAAS,SAAAO,GACAwD,GAAAQ,GAAAhE,GAAA4B,IAAAC,GACA6B,EAAAM,GAAAhE,GAAA0C,SAEA,IAAAb,GAAAjB,EAAAmC,eACA/F,EACA4D,EAAA5B,QAAAM,MAAAU,GACAjD,EAAAkD,SAAAW,EAAA5B,QAAAM,MAAAU,KAAApC,GAEAgD,EAAA5B,QAAAS,SAAAO,GAEAwD,GAAAQ,GAAAhE,GAAA4B,IAAAC,GACAG,EAAAnB,SAAAQ,GAAA,4DACAqC,EAAAM,GAAAhE,GAAA0C,WAIAzB,KAAAoC,aAGAN,eAAA,SAAAhD,EAAAqE,GACA,GAAAzE,GAAAjE,KAAAsD,QAAAW,QACA0E,EAAA1E,EAAAI,MAAAJ,EAAA8C,MAAA7E,GACA+B,EAAAI,MAAArC,GACAiC,EAAA8C,MAAA9E,EACA2G,EAAAvE,EAAAF,OAAAwE,EAKA,OAJAD,IAAAE,IAAAtH,EACAoH,EACArH,EAAAkD,SAAAmE,IAAAxG,GACAiC,OAAAwE,KAAAC,EAAA,MACAA,GAEAC,uBAAA,SAAAjD,EAAAtB,EAAAX,GACA,GAAAkE,GAAAzG,EAAA,4BAAApB,KAAAqF,iBACA0C,EAAA3G,EAAA,6BAAApB,KAAAqF,iBACA2C,EAAA5G,EAAA,UAAA2G,GAEAe,EAAAjB,EAAApE,QACAsE,GAAAtE,QACAsF,KAAAD,EAAAC,KACAC,IAAAF,EAAAE,IAAAnB,EAAAoB,eACAC,SAAAnB,EAAAhD,IAAA,mBACA,IAIA,IAGAoE,GAHAC,EAAApB,EAAAM,GAAAhE,GACA+E,EAAAjI,EAAAwE,EAAA0D,QACAC,EAAAF,EAAA5F,QAEA,QAAAzD,KAAAsD,QAAAE,OACA,WACA2F,EAAAI,EAAAR,IACA,MACA,aACAI,EAAAI,EAAAR,MAAAK,EAAAI,aAAAH,EAAAG,cAEAJ,EAAAzF,IAAA,YACAF,QACAsF,KAAAI,IAEAX,WAAAxB,QAEAyC,gBAAA,WACA,GAAA1B,GAAA3G,EAAA,6BAAApB,KAAAqF,iBACA2C,EAAA5G,EAAA,UAAA2G,EACAC,GAAAhB,QAEA0C,KAAA,WACA1J,KAAAmF,SAAAoD,SAAA,0BACAvI,KAAAqF,gBAAAqE,OACAjG,OAAAzD,KAAA2J,YAEA3C,KAAA,WACAhH,KAAAmF,SAAAsD,YAAA,0BACAzI,KAAAyJ,kBACAzJ,KAAAqF,gBAAA2B,QAEAnB,OAAA,WACA7F,KAAAmF,SAAAyE,YAAA,0BACA5J,KAAAqF,gBAAAQ,SACApC,OAAAzD,KAAA2J,YAEAA,QAAA,WACA,GAAAlG,GAAA9B,EAAA3B,KAAAmF,SAAAnF,KAAAqF,gBAAArF,KAAAsD,QAAAC,UAAAvD,KAAAsD,QAAAE,OACAqG,EAAAX,SAAAlJ,KAAAqF,gBAAAN,IAAA,sBACA+E,EAAAZ,SAAAlJ,KAAAqF,gBAAAN,IAAA,oBACA,QACAgE,KAAAtF,EAAAsF,KAAAc,GAAA7J,KAAAsD,QAAAG,OAAAsF,MAAA,GACAC,IAAAvF,EAAAuF,IAAAc,GAAA9J,KAAAsD,QAAAG,OAAAuF,KAAA,KAGAxC,OAAA,SAAAZ,EAAAmE,GACA,GAAA7E,GAAAlF,IAEA,QAAA+J,GACA,eACA,KACA,SACA,GAAA9B,GAAA7G,EAAA,+BAAA8D,EAAAG,iBACA9C,EAAAnB,EAAA,YAAA6G,EACA1F,GAAAkG,YAAA,UAGA,GAAArC,GAAA7E,EAAA8E,MAAA,wBAAArG,KAAAqF,iBACAzB,EAAAvC,EAAAsD,IAAAyB,EAAA,SAAAE,GACA,MAAAA,GAAAJ,OAGAlG,MAAAgH,MAEA,IAAAC,GAAA7F,EAAA8F,MAAA,SAAAnF,EAGA,IAFA/B,KAAAmH,QAAAF,GAAArD,KAEAqD,EAAAG,qBAAA,CACA,GAAAE,GAAAlG,EAAA,eAAApB,KAAAmF,SACAmC,GAAApD,OACA7C,EAAA+C,KAAAkD,EAAA,SAAAhB,EAAAhC,GACA,GAAAiD,GAAAnG,EAAAkF,EACAhC,IAAAiD,EAAAyC,KAAA,cACAzC,EACAzF,EAAA0F,KAAAlB,EAAAmB,UAAA,cAEAvC,EAAAmC,eAAAzD,EAAAU,GAAAY,EAAA5B,QAAAS,SAAAO,OAKAtE,KAAAmF,SACArD,EAAA0F,KAAAxH,KAAAoF,QAAAqC,UAAA,cAEApG,EAAAsD,IAAAf,EAAA,SAAA0C,EAAAhC,GACA,MAAAY,GAAAmC,eAAAf,EAAApB,EAAA5B,QAAAS,SAAAO,MAC6BM,KAAA,OAK7B0C,EAAAlG,EAAA,sBAAApB,KAAAmF,UACA9D,EAAA+C,KAAAkD,EAAA,SAAAhB,EAAAhC,GACA,GAAAiD,GAAAnG,EAAAkF,EACAhC,IAAAiD,EAAAyC,KAAA,oBACA,IAAA7D,GAAAjB,EAAAmC,eAAAzD,EAAAU,GAAAwC,OACAS,GAAArB,IAAAC,GAAAgB,QAAA,cAIA8C,aAAA,SAAArG,GACA,GAAAqG,EAUA,OATA5I,GAAA+C,KAAApE,KAAAsD,QAAAf,UAAA,SAAA2H,EAAAC,GACA,IAAAF,EAAA,CAEA,GAAA9B,IAAA,CACA9G,GAAA+C,KAAA8F,EAAA,SAAAE,EAAA9F,GACA8F,EAAA/B,OAAAzE,EAAAU,GAAA,UAAA6D,GAAA,KAEAA,IAAA8B,EAAAE,MAEAF,GAEAI,QAAA,SAAAzE,EAAAjC,EAAAW,GACA,GAAAY,GAAAlF,KACAqJ,EAAAjI,EAAAwE,EAAA0D,QACAlD,EAAA7E,EAAA8E,MAAA,wBAAArG,KAAAqF,gBAEA,QAAA1B,GACA,eACA,GAAAC,GAAAyF,EAAAW,KAAA,cAAAM,MAAA,IACAjJ,GAAA+C,KAAAR,EAAA,SAAA0C,EAAAhC,GACAY,EAAA5B,QAAAM,MAAAU,GAAAgC,EACAF,EAAA9B,GAAA4B,IAAAI,KAGA+C,EAAAd,SAAA,UACAC,WAAAC,YAAA,UAEAzI,KAAAwG,OAAAZ,EAAAjC,EACA,MACA,YACA,GAAAU,GAAA/C,EAAA+H,EAAAnD,MACA,KAAA7B,EAAAkG,UAAA,KACAnE,GAAA9B,GAAA4B,IAAA7B,KAIA2B,UAAA,WACA,GAAAd,GAAAlF,KACA2D,EAAA,QAAA5B,EAAA,IAAA/B,KAAAyF,QACAzF,MAAAwK,OAAAxH,EAAAG,SACA/B,EAAAqJ,SAAAC,MAAAhF,IAAA/B,GACAgC,GAAAhC,EAAA,SAAAiC,GAEA,GAAAxE,EAAAuJ,SAAAF,SAAAC,KAAA9E,EAAA0D,QAAA,CACA,GACA1D,EAAA0D,SAAApE,EAAAE,SACAhE,EAAAuJ,SAAAzF,EAAAE,QAAAQ,EAAA0D,SACA1D,EAAA0D,SAAApE,EAAAG,gBAAA,IACAjE,EAAAuJ,SAAAzF,EAAAG,gBAAA,GAAAO,EAAA0D,QACA,CACA,GAAApE,EAAAsF,SAAAxH,EAAAE,OAAA,MAOA,OANAgC,GAAAiC,QACA/F,EAAA8F,MAAA,SAAAnF,GACAuH,OAAA1D,EAAA0D,eAGApE,EAAAsF,OAAAxH,EAAAE,QAIA,GAAAgC,EAAAsF,SAAAxH,EAAAG,SAAA,CACA,GAAAyH,GAAAxJ,EAAA8F,MAAA,WAAAnF,GACAuH,OAAA1D,EAAA0D,QAEApE,GAAAiC,QAAAyD,GACA1F,EAAAsF,OAAAxH,EAAAG,SAEAyH,EAAAxD,sBAEAlC,EAAA8B,WAEArB,GAAAhC,EAAA,SAAAiC,GACA,GAAAiC,GAAAzG,EAAA,iCAAA8D,EAAAG,iBACA0C,EAAA3G,EAAA,6BAAA8D,EAAAG,gBAGAO,GAAA0D,SAAApE,EAAAG,gBAAA,KACAjE,EAAAuJ,SAAAzF,EAAAG,gBAAA,GAAAO,EAAA0D,UAGAzB,EAAA3D,SAAA6D,EAAA7D,QACA9C,EAAAuJ,SAAA9C,EAAA,GAAAjC,EAAA0D,SACAlI,EAAAuJ,SAAA5C,EAAA,GAAAnC,EAAA0D,SAGApE,EAAAuE,qBAIAoB,QAAA,WACA,GAAAlH,GAAA,kCAAA3D,KAAAyF,QACAzF,MAAAmF,SAAAO,IAAA/B,GAEA3D,KAAA8F,SAAAgF,WAAA9K,KAAAmF,SAAAnF,MACAA,KAAA8F,SAAAgF,WAAA9K,KAAAqF,gBAAArF,MAEAA,KAAAqF,gBAAA0F,SAEApH,EAAA,QAAA5B,EAAA,IAAA/B,KAAAyF,SACArE,EAAAqJ,SAAAC,MAAAhF,IAAA/B,MAIA9B,GAEAmJ,MAAArL,EAAAuB,KAAA4F,SAAA3F,IAAAvB,EAAAD,QAAAwB,KHgEM,SAASvB,EAAQD,GIznBvBC,EAAAD,QAAAM,GJ+nBM,SAASL,EAAQD,GK/nBvBC,EAAAD,QAAAO,GLqoBM,SAASN,EAAQD,GMroBvBC,EAAAD,QAAAQ,GN2oBM,SAASP,EAAQD,GO3oBvBC,EAAAD,QAAAS,GPipBM,SAASR,EAAQD,GQjpBvBC,EAAAD,QAAAU,GRupBM,SAAST,EAAQD,GSvpBvBC,EAAAD,QAAAW,GT6pBM,SAASV,EAAQD,GU7pBvBC,EAAAD,QAAAY,GVmqBM,SAASX,EAAQD,EAASc,GWnqBhC,GAAAS,GAAAC,CACAD,IAEAT,EAAA,IACAU,EACA,SACAC,GAaA,QAAAO,GAAAwF,EAAA8D,EAAA1H,EAAAC,GACA,GAAA0H,GAAA9J,EAAA+F,EAEA,KAAA+D,EAAAhH,OAAA,MAAAiH,GAAAF,EAEA,IAAAG,GAAAF,EAAAzH,SACA4H,EAAAD,EAAArC,KACAuC,EAAAF,EAAApC,IACAuC,EAAAL,EAAA1B,aACAgC,EAAAN,EAAAjC,cAEAwC,EAAArK,EAAA6J,GACAS,EAAA,SAAAD,EAAA1G,IAAA,UACA0G,GAAA/B,MACA,IAAAiC,GAAAF,EAAAjC,aACAoC,EAAAH,EAAAxC,aAIAyC,IAAAD,EAAAzE,MAEA,IAAA+B,GAAAC,EACA6C,EAAAN,EAAA,EAAAI,EAAA,EACAG,EAAAN,EAAA,EAAAI,EAAA,CACA,QAAArI,GACA,UACAwF,EAAAsC,EAAAQ,EACA7C,EAAAsC,EAAAM,CACA,MACA,cACA7C,EAAAsC,EAAAQ,EACA7C,EAAAsC,EAAAE,CACA,MACA,YACAzC,EAAAsC,EAAAM,EACA3C,EAAAsC,EAAAQ,CACA,MACA,aACA/C,EAAAsC,EAAAE,EACAvC,EAAAsC,EAAAQ,EAKA,GACAC,EAAAvE,KAAAjE,KAAAwI,EAAAvE,KAAAhE,IACAwI,EAAAxE,KAAAjE,KAAAyI,EAAAxE,KAAAhE,GAEA,OAAAA,GACA,UACAwF,EAAAsC,CACA,MACA,cACAtC,EAAAsC,EAAAE,EAAAI,CACA,MACA,YACA7C,EAAAsC,CACA,MACA,aACAtC,EAAAsC,EAAAE,EAAAI,EAKA,OACA5C,OACAC,OAIA,QAAAmC,GAAAc,EAAAC,GACA,GAAAP,GAAAC,CAGA,IAAAM,EAWAP,EAAAQ,WAAAF,EAAA,IACAL,EAAAO,WAAAD,EAAA,QAZA,CACA,GAAAT,GAAArK,EAAA6K,GACAP,EAAA,SAAAD,EAAA1G,IAAA,UACA0G,GAAA/B,OACAiC,EAAAF,EAAAjC,aACAoC,EAAAH,EAAAxC,cAEAyC,GAAAD,EAAAzE,OAQA,GAAAoF,GAAAhL,EAAA4D,QACAqH,EAAAD,EAAAH,QACAK,EAAAF,EAAAF,SACAK,EAAAH,EAAAG,aACAC,EAAAJ,EAAAI,WAEA,QACAzD,KAAAsD,EAAA,EAAAV,EAAA,EAAAY,EACAvD,IAAAsD,EAAA,EAAAV,EAAA,EAAAY,GAIA,QAAAC,GAAAxB,EAAAxH,EAAAF,GACA,GAAAkI,GAAArK,EAAA6J,GACAS,EAAA,SAAAD,EAAA1G,IAAA,UACA0G,GAAA/B,MACA,IAAAuC,GAAAR,EAAAjC,aACA0C,EAAAT,EAAAxC,aAEAyC,IAAAD,EAAAzE,MAEA,IAAA0F,IACAC,QAAA,EACA5D,KAAAtF,EAAAsF,KACAC,IAAAvF,EAAAuF,IAEA,QAAAzF,GACA,UACAmJ,EAAA1D,IAAA0D,EAAA1D,IAAA,GAAAkD,CACA,MACA,cACAQ,EAAA1D,IAAA0D,EAAA1D,IAAA,GAAAkD,CACA,MACA,YACAQ,EAAA3D,KAAA2D,EAAA3D,KAAA,GAAAkD,CACA,MACA,aAGA,QACAS,EAAA3D,KAAA2D,EAAA3D,KAAA,GAAAkD,EAIA,MAAAS,GAIA,QAAAE,GAAA3B,EAAAxH,GAEA,OACAkJ,QAAA,EACA5D,KAAAtF,EAAAsF,KACAC,IAAAvF,EAAAuF,KAzJA,GAAA+C,GAAA,aACAC,EAAA,YAgKA,OAJArK,GAAAwJ,SACAxJ,EAAA8K,QACA9K,EAAAiL,MAEAjL,GACAqJ,MAAArL,EAAAuB,KAAA4F,SAAA3F,IAAAvB,EAAAD,QAAAwB,KXuqBM,SAASvB,EAAQD,EAASc,GYj1BhC,GAAAU,EACAA,GAAA,WACA,kJAGA,2sEA0CCL,KAAAnB,EAAAc,EAAAd,EAAAC,KAAAkH,SAAA3F,IAAAvB,EAAAD,QAAAwB","file":"components/datepickerwrapper.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"moment\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"), require(\"components/datepicker\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"moment\", \"brix/loader\", \"components/base\", \"brix/event\", \"components/datepicker\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/datepickerwrapper\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"moment\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"), require(\"components/datepicker\"));\n\telse\n\t\troot[\"components/datepickerwrapper\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"moment\"], root[\"brix/loader\"], root[\"components/base\"], root[\"brix/event\"], root[\"components/datepicker\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"moment\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"), require(\"components/datepicker\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"moment\", \"brix/loader\", \"components/base\", \"brix/event\", \"components/datepicker\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/datepickerwrapper\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"moment\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"), require(\"components/datepicker\"));\n\telse\n\t\troot[\"components/datepickerwrapper\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"moment\"], root[\"brix/loader\"], root[\"components/base\"], root[\"brix/event\"], root[\"components/datepicker\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, document */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3), __webpack_require__(4),\n\t        __webpack_require__(5), __webpack_require__(6), __webpack_require__(7),\n\t        __webpack_require__(8),\n\t        __webpack_require__(9),\n\t        __webpack_require__(10)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _, moment,\n\t        Loader, Brix, EventManager,\n\t        DatePicker,\n\t        position,\n\t        template\n\t    ) {\n\t        /*\n\t            shortcut\n\t            dates\n\t\n\t            TODO\n\t            √ 一个日期\n\t            √ 多个日期\n\t            input trigger\n\t            输入回调，输出回调\n\t         */\n\t\n\t        var RE_INPUT = /^input|textarea$/i\n\t        var NAMESPACE = '.datepickerwrapper'\n\t            // var NAMESPACE_ORIGINAL = '.original'\n\t        var DATE_PATTERN = DatePicker.DATE_PATTERN\n\t        var TIME_PATTERN = DatePicker.TIME_PATTERN\n\t        var DATE_TIME_PATTERN = DatePicker.DATE_TIME_PATTERN\n\t        var SHORTCUTS = function() {\n\t            var now = moment()\n\t            var nowDate = now.get('date')\n\t            var shortcuts = {\n\t                '今天': [\n\t                    moment().startOf('day'),\n\t                    moment().startOf('day')\n\t                ],\n\t                '昨天': [\n\t                    moment().startOf('day').subtract(1, 'days'),\n\t                    moment().startOf('day').subtract(1, 'days')\n\t                ],\n\t                '过去 7 天': [\n\t                    moment().startOf('day').subtract(7, 'days'),\n\t                    moment().startOf('day').subtract(1, 'days')\n\t                ],\n\t                '本月': [\n\t                    moment().startOf('day').subtract(nowDate - 1, 'days'),\n\t                    moment().startOf('day')\n\t                ],\n\t                '上月': [\n\t                    moment().startOf('day').startOf('month').subtract(1, 'month'),\n\t                    moment().startOf('day').startOf('month').subtract(1, 'days')\n\t                ],\n\t                '最近 15 天': [\n\t                    moment().startOf('day').subtract(15, 'days'),\n\t                    moment().startOf('day').subtract(1, 'days')\n\t                ]\n\t            }\n\t            return shortcuts\n\t        }()\n\t        var STATE = {\n\t            PENDING: 'pending',\n\t            ACTIVE: 'active',\n\t            INACTIVE: 'inactive'\n\t        }\n\t\n\t        function DatePickerWrapper() {}\n\t\n\t        DatePickerWrapper.DATE_PATTERN = DATE_PATTERN\n\t        DatePickerWrapper.TIME_PATTERN = TIME_PATTERN\n\t        DatePickerWrapper.DATE_TIME_PATTERN = DATE_TIME_PATTERN\n\t        DatePickerWrapper.SHORTCUTS = SHORTCUTS\n\t\n\t        _.extend(DatePickerWrapper.prototype, Brix.prototype, {\n\t            options: {\n\t                placement: 'bottom', // top bottom left right\n\t                align: 'left', // left right top bottom\n\t                offset: {},\n\t\n\t                mode: 'signal', // signal multiple\n\t                shortcuts: SHORTCUTS,\n\t                type: 'date', // all date year month time\n\t                dates: [],\n\t                ranges: [],\n\t                excludeds: [],\n\t                unlimits: []\n\t            },\n\t            init: function() {\n\t                // 修正选项\n\t                this.options.typeMap = DatePicker.typeMap(this.options.type)\n\t                if (this.options.dates.length > 1) this.options.mode = 'multiple'\n\t                if (!this.options.dates.length) this.options.dates = [moment().startOf('day').format(DATE_PATTERN)]\n\t                if (this.options.shortcuts) {\n\t                    _.each(this.options.shortcuts, function(dates /*, title*/ ) {\n\t                        _.each(dates, function(date, index) {\n\t                            dates[index] = moment(\n\t                                date,\n\t                                _.isString(date) && DATE_TIME_PATTERN\n\t                            )\n\t                        })\n\t                    })\n\t                }\n\t\n\t                // ranges\n\t                if (this.options.range && this.options.range.length) this.options.ranges = this.options.range\n\t                this.options.ranges = _.flatten(this.options.ranges || this.options.range)\n\t                _.each(this.options.ranges, function(date, index, ranges) {\n\t                    if (date) ranges[index] = moment(\n\t                        date,\n\t                        _.isString(date) && DATE_TIME_PATTERN\n\t                    )\n\t                })\n\t                this.options._ranges = _.map(this.options.ranges, function(date) {\n\t                    if (date) return date.format(DATE_PATTERN)\n\t                })\n\t                this.options._ranges = \"['\" + this.options._ranges.join(\"','\") + \"']\"\n\t\n\t                // excludeds\n\t                if (this.options.excluded && this.options.excluded.length) this.options.excludeds = this.options.excluded\n\t                this.options.excludeds = _.flatten(this.options.excludeds || this.options.excluded)\n\t                _.each(this.options.excludeds, function(date, index, excludeds) {\n\t                    if (date) excludeds[index] = moment(\n\t                        date,\n\t                        _.isString(date) && DATE_TIME_PATTERN\n\t                    )\n\t                })\n\t                this.options._excludeds = _.map(this.options.excludeds, function(date) {\n\t                    if (date) return date.format(DATE_PATTERN)\n\t                })\n\t                this.options._excludeds = this.options._excludeds.length ?\n\t                    \"['\" + this.options._excludeds.join(\"','\") + \"']\" :\n\t                    \"[]\"\n\t\n\t\n\t                // if (this.options.unlimits.length) {\n\t                //     _.each(this.options.unlimits, function(date, index, unlimits) {\n\t                //         if (date) unlimits[index] = moment(date)\n\t                //     })\n\t                // }\n\t\n\t                // 支持自定义 HTML 模板 template\n\t                template = this.options.template || template\n\t\n\t                // 支持自定义 CSS 样式\n\t                if (this.options.css) window.require('css!' + this.options.css)\n\t            },\n\t            render: function() {\n\t                var that = this\n\t                this.$element = $(this.element)\n\t                this.$relatedElement = $(\n\t                    _.template(template)(this.options)\n\t                ).insertAfter(this.$element)\n\t\n\t                var defer = $.Deferred()\n\t                this['_' + this.options.mode](defer)\n\t\n\t                var type = 'click.datepickerwrapper_toggle_' + this.clientId\n\t                this.$element.off(type)\n\t                    .on(type, function(event) {\n\t                        that.toggle(event)\n\t                    })\n\t\n\t                var $manager = this.$manager = new EventManager('bx-')\n\t                $manager.delegate(this.$element, this)\n\t                $manager.delegate(this.$relatedElement, this)\n\t\n\t                this._autoHide()\n\t\n\t                return defer.promise()\n\t            },\n\t            val: function(value) {\n\t                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n\t                if (value) {\n\t                    _.each(pickerComponents, function(item, index) {\n\t                        item.val(\n\t                            _.isArray(value) ? value[index] : value\n\t                        )\n\t                    })\n\t\n\t                    this.submit() // #44 #50\n\t                    return this\n\t                }\n\t                return _.map(pickerComponents, function(item /*, index*/ ) {\n\t                    return item.val()\n\t                })\n\t            },\n\t            range: function(value) {\n\t                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n\t                if (value) {\n\t                    this.options.ranges = value = _.flatten(value)\n\t                    _.each(pickerComponents, function(item /*, index*/ ) {\n\t                        item.range(value)\n\t                    })\n\t                    return this\n\t                }\n\t                return this.options.ranges\n\t            },\n\t            excluded: function(value) {\n\t                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n\t                if (value) {\n\t                    this.options.excludeds = value = _.flatten(value)\n\t                    _.each(pickerComponents, function(item /*, index*/ ) {\n\t                        item.excluded(value)\n\t                    })\n\t                    return this\n\t                }\n\t                return this.options.excludeds\n\t            },\n\t            _signal: function(defer) {\n\t                var that = this\n\t                Loader.boot(true, this.$relatedElement, function( /*records*/ ) {\n\t                    var pickerComponent = Loader.query('components/datepicker', that.$relatedElement)[0]\n\t                        /* jshint unused:false */\n\t                    pickerComponent.on('change.datepicker unchange.datepicker', function(event, date, type) {\n\t                        // 过滤 timepicker 中的 input 触发的原生 change 事件\n\t                        if (!date) {\n\t                            event.preventDefault()\n\t                            event.stopPropagation()\n\t                            return\n\t                        }\n\t                        if (type !== undefined && type !== 'date' && type !== 'time') return\n\t                        if (that.options.typeMap.time && type === 'date') return\n\t\n\t                        that.hide()\n\t\n\t                        var validate = $.Event('change' + NAMESPACE)\n\t                        that.trigger(validate, [\n\t                            [date], type\n\t                        ])\n\t                        if (!validate.isDefaultPrevented()) {\n\t                            var value = that._unlimitFilter(date, that.options.unlimits[0])\n\t                            var items = $('[data-index]', that.$element)\n\t                            if (items.length) {\n\t                                _.each(items, function(item, index) {\n\t                                    var $item = $(item)\n\t                                    $item[\n\t                                        RE_INPUT.test(item.nodeName) ? 'val' : 'html'\n\t                                    ](value)\n\t                                })\n\t                            } else {\n\t                                that.$element[\n\t                                    RE_INPUT.test(that.element.nodeName) ? 'val' : 'html'\n\t                                ](value)\n\t                            }\n\t\n\t                            // 单个日期选择器：自动触发 input 元素的 change 事件。</h4>\n\t                            // 单个日期选择器：自动同步至隐藏域，并触发隐藏域的 change 事件。</h4>\n\t                            that.$element.triggerHandler('change') //  + NAMESPACE + NAMESPACE_ORIGINAL, date\n\t                            if (!RE_INPUT.test(that.element.nodeName)) {\n\t                                $('[data-hidden-index]', that.$element)\n\t                                    .val(value)\n\t                                    .triggerHandler('change')\n\t                            }\n\t                        }\n\t                    })\n\t                    pickerComponent.$element.on('click', '.timepicker .timepicker-footer .cancel', function() {\n\t                        that.hide()\n\t                    })\n\t\n\t                    if (defer) defer.resolve()\n\t                })\n\t            },\n\t            _multiple: function(defer) {\n\t                var that = this\n\t                Loader.boot(true, this.$relatedElement, function() {\n\t                    var inputWrapper = $('.datepickerwrapper-inputs', that.$relatedElement)\n\t                    var inputs = $('input', inputWrapper)\n\t\n\t                    var pickerWrapper = $('.datepickerwrapper-pickers', that.$relatedElement)\n\t                    var pickers = $('.picker', pickerWrapper)\n\t\n\t                    var pickerComponents = Loader.query('components/datepicker', that.$relatedElement)\n\t\n\t                    var shortcutWrapper = $('.datepickerwrapper-shortcuts', that.$relatedElement)\n\t                    var shortcuts = $('.shortcut', shortcutWrapper)\n\t\n\t                    if (that.options.shortcuts) {\n\t                        _.each(_.values(that.options.shortcuts), function(dates, index) {\n\t                            var same = true\n\t                            _.each(dates, function(date, index) {\n\t                                var optionDate = moment(\n\t                                    that.options.dates[index],\n\t                                    _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n\t                                )\n\t                                if (!date.isSame(optionDate, 'days')) same = false\n\t                            })\n\t                            if (same) {\n\t                                shortcuts.eq(index).addClass('active')\n\t                                    .siblings().removeClass('active')\n\t                            }\n\t                        })\n\t                    }\n\t\n\t                    _.each(inputs, function(item, index) {\n\t                        $(item)\n\t                            .val(\n\t                                moment(\n\t                                    that.options.dates[index],\n\t                                    _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n\t                                )\n\t                                .format(DATE_PATTERN)\n\t                            ) // 初始值\n\t                    })\n\t\n\t                    _.each(pickerComponents, function(item, index) {\n\t                        /* jshint unused:false */\n\t                        item.val(that.options.dates[index])\n\t                            .on('change.datepicker unchange.datepicker ', function(event, date, type) {\n\t                                if (type !== undefined && type !== 'date' && type !== 'time') return\n\t                                if (that.options.typeMap.time && type === 'date') return\n\t\n\t                                var value = that._unlimitFilter(date, that.options.unlimits[index])\n\t                                inputs.eq(index).val(value)\n\t                                pickers.eq(index).hide()\n\t                            })\n\t                        var value = that._unlimitFilter(\n\t                            moment(\n\t                                that.options.dates[index],\n\t                                _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n\t                            ),\n\t                            that.options.unlimits[index]\n\t                        )\n\t                        inputs.eq(index).val(value)\n\t                        item.$element.on('click', '.timepicker .timepicker-footer .cancel', function() {\n\t                            pickers.eq(index).hide()\n\t                        })\n\t                    })\n\t\n\t                    if (defer) defer.resolve()\n\t                })\n\t            },\n\t            _unlimitFilter: function(date, unlimit) {\n\t                var typeMap = this.options.typeMap\n\t                var pattern = typeMap.date && typeMap.time && DATE_TIME_PATTERN ||\n\t                    typeMap.date && DATE_PATTERN ||\n\t                    typeMap.time && TIME_PATTERN\n\t                var text = date.format(pattern)\n\t                if (unlimit && text === moment(\n\t                        unlimit,\n\t                        _.isString(unlimit) && DATE_TIME_PATTERN\n\t                    ).format(pattern)) text = '不限'\n\t                return text\n\t            },\n\t            _inputToggleDatePicker: function(event, index, type) {\n\t                var inputWrapper = $('.datepickerwrapper-inputs', this.$relatedElement)\n\t                var pickerWrapper = $('.datepickerwrapper-pickers', this.$relatedElement)\n\t                var pickers = $('.picker', pickerWrapper)\n\t\n\t                var inputWrapperOffset = inputWrapper.offset()\n\t                pickerWrapper.offset({ // 修正日期组件容器的位置\n\t                    left: inputWrapperOffset.left,\n\t                    top: inputWrapperOffset.top + inputWrapper.outerHeight() + (\n\t                        parseInt(pickerWrapper.css('margin-top'), 10) ||\n\t                        0\n\t                    )\n\t                })\n\t\n\t                var $picker = pickers.eq(index)\n\t                var $target = $(event.target)\n\t                var targetOffset = $target.offset()\n\t                var pickerLeft\n\t                switch (this.options.align) {\n\t                    case 'left':\n\t                        pickerLeft = targetOffset.left\n\t                        break\n\t                    case 'right':\n\t                        pickerLeft = targetOffset.left - ($picker.outerWidth() - $target.outerWidth())\n\t                }\n\t                $picker[type ? type : 'toggle']()\n\t                    .offset({ // 修正单个日期组件的位置\n\t                        left: pickerLeft\n\t                    })\n\t                    .siblings().hide()\n\t            },\n\t            _hideDatePicker: function( /*event*/ ) {\n\t                var pickerWrapper = $('.datepickerwrapper-pickers', this.$relatedElement)\n\t                var pickers = $('.picker', pickerWrapper)\n\t                pickers.hide()\n\t            },\n\t            show: function( /*event*/ ) {\n\t                this.$element.addClass('datepickerwrapper-open')\n\t                this.$relatedElement.show()\n\t                    .offset(this._offset())\n\t            },\n\t            hide: function( /*event*/ ) {\n\t                this.$element.removeClass('datepickerwrapper-open')\n\t                this._hideDatePicker()\n\t                this.$relatedElement.hide()\n\t            },\n\t            toggle: function( /*event*/ ) {\n\t                this.$element.toggleClass('datepickerwrapper-open')\n\t                this.$relatedElement.toggle()\n\t                    .offset(this._offset())\n\t            },\n\t            _offset: function() {\n\t                var offset = position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n\t                var relatedMarginLeft = parseInt(this.$relatedElement.css('margin-left'), 10) || 0\n\t                var relatedMarginTop = parseInt(this.$relatedElement.css('margin-top'), 10) || 0\n\t                return {\n\t                    left: offset.left + relatedMarginLeft + (this.options.offset.left || 0),\n\t                    top: offset.top + relatedMarginTop + (this.options.offset.top || 0)\n\t                }\n\t            },\n\t            submit: function(event /* jshint unused:false */ , from) {\n\t                var that = this\n\t\n\t                switch (from) {\n\t                    case 'shortcut':\n\t                        break\n\t                    default:\n\t                        var shortcutWrapper = $('.datepickerwrapper-shortcuts', that.$relatedElement)\n\t                        var shortcuts = $('.shortcut', shortcutWrapper)\n\t                        shortcuts.removeClass('active')\n\t                }\n\t\n\t                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n\t                var dates = _.map(pickerComponents, function(item /*, index*/ ) {\n\t                    return item.val()\n\t                })\n\t\n\t                this.hide()\n\t\n\t                var validate = $.Event('change' + NAMESPACE)\n\t                this.trigger(validate, [dates])\n\t\n\t                if (!validate.isDefaultPrevented()) {\n\t                    var items = $('[data-index]', this.$element)\n\t                    if (items.length) {\n\t                        _.each(items, function(item, index) {\n\t                            var $item = $(item)\n\t                            index = +$item.attr('data-index')\n\t                            $item[\n\t                                RE_INPUT.test(item.nodeName) ? 'val' : 'html'\n\t                            ](\n\t                                that._unlimitFilter(dates[index], that.options.unlimits[index])\n\t                            )\n\t\n\t                        })\n\t                    } else {\n\t                        this.$element[\n\t                            RE_INPUT.test(this.element.nodeName) ? 'val' : 'html'\n\t                        ](\n\t                            _.map(dates, function(item, index) {\n\t                                return that._unlimitFilter(item, that.options.unlimits[index])\n\t                            }).join(', ')\n\t                        )\n\t                    }\n\t\n\t                    // 多个日期选择器：自动同步至隐藏域，并触发隐藏域的 change 事件。\n\t                    items = $('[data-hidden-index]', this.$element)\n\t                    _.each(items, function(item, index) {\n\t                        var $item = $(item)\n\t                        index = +$item.attr('data-hidden-index')\n\t                        var value = that._unlimitFilter(dates[index], undefined)\n\t                        $item.val(value).trigger('change')\n\t                    })\n\t                }\n\t            },\n\t            shortcutText: function(dates) {\n\t                var shortcutText\n\t                _.each(this.options.shortcuts, function(shortcutDates, key) {\n\t                    if (shortcutText) return\n\t\n\t                    var same = true\n\t                    _.each(shortcutDates, function(shortcutDate, index) {\n\t                        if (!shortcutDate.isSame(dates[index], 'days')) same = false\n\t                    })\n\t                    if (same) shortcutText = key\n\t                })\n\t                return shortcutText\n\t            },\n\t            _change: function(event, type, index) {\n\t                var that = this\n\t                var $target = $(event.target)\n\t                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n\t\n\t                switch (type) {\n\t                    case 'shortcut':\n\t                        var dates = $target.attr('data-value').split(',')\n\t                        _.each(dates, function(item, index) {\n\t                            that.options.dates[index] = item\n\t                            pickerComponents[index].val(item)\n\t                        })\n\t\n\t                        $target.addClass('active')\n\t                            .siblings().removeClass('active')\n\t\n\t                        this.submit(event, type)\n\t                        break\n\t                    case 'date':\n\t                        var date = moment($target.val())\n\t                        if (!date.isValid()) break\n\t                        pickerComponents[index].val(date)\n\t                        break\n\t                }\n\t            },\n\t            _autoHide: function() {\n\t                var that = this\n\t                var type = 'click' + NAMESPACE + '_' + this.clientId\n\t                this._state = STATE.INACTIVE\n\t                $(document.body).off(type)\n\t                    .on(type, function(event) {\n\t                        // 点击不存在节点\n\t                        if (!$.contains(document.body, event.target)) return\n\t                        if (\n\t                            event.target === that.element || // 点击组件节点\n\t                            $.contains(that.element, event.target) || // 点击组件子节点\n\t                            event.target === that.$relatedElement[0] || // 点击关联节点\n\t                            $.contains(that.$relatedElement[0], event.target) // 点击组件关联子节点\n\t                        ) {\n\t                            if (that._state === STATE.ACTIVE) return\n\t                            that.trigger(\n\t                                $.Event('active' + NAMESPACE, {\n\t                                    target: event.target\n\t                                })\n\t                            )\n\t                            that._state = STATE.ACTIVE\n\t                            return\n\t                        }\n\t\n\t                        if (that._state === STATE.INACTIVE) return\n\t                        var inactiveEvent = $.Event('inactive' + NAMESPACE, {\n\t                            target: event.target\n\t                        })\n\t                        that.trigger(inactiveEvent)\n\t                        that._state = STATE.INACTIVE\n\t\n\t                        if (inactiveEvent.isDefaultPrevented()) return\n\t\n\t                        that.hide()\n\t                    })\n\t                    .on(type, function(event) {\n\t                        var inputWrapper = $('.datepickerwrapper-inputs-body', that.$relatedElement)\n\t                        var pickerWrapper = $('.datepickerwrapper-pickers', that.$relatedElement)\n\t                        if (\n\t                            ( // 点击关联节点，点击组件关联子节点\n\t                                event.target === that.$relatedElement[0] ||\n\t                                $.contains(that.$relatedElement[0], event.target)\n\t                            ) &&\n\t                            ( // 但不在 inputs 和 pickers 之内\n\t                                (inputWrapper.length && pickerWrapper.length) &&\n\t                                !$.contains(inputWrapper[0], event.target) &&\n\t                                !$.contains(pickerWrapper[0], event.target)\n\t                            )\n\t                        ) {\n\t                            that._hideDatePicker()\n\t                        }\n\t                    })\n\t            },\n\t            destroy: function() {\n\t                var type = 'click.datepickerwrapper_toggle_' + this.clientId\n\t                this.$element.off(type)\n\t\n\t                this.$manager.undelegate(this.$element, this)\n\t                this.$manager.undelegate(this.$relatedElement, this)\n\t\n\t                this.$relatedElement.remove()\n\t\n\t                type = 'click' + NAMESPACE + '_' + this.clientId\n\t                $(document.body).off(type)\n\t            }\n\t        })\n\t\n\t        return DatePickerWrapper\n\t            // return Brix.extend({})\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, window */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $\n\t    ) {\n\t        var RE_TOP_OR_BOTTOM = /top|bottom/\n\t        var RE_LEFT_OR_RIGHT = /left|right/\n\t\n\t        /**\n\t         * 计算浮层位置的工具函数\n\t         * @param  {[type]} trigger    参照节点\n\t         * @param  {[type]} dialog     浮层节点\n\t         * @param  {[type]} placement  浮层相对于参照的位置\n\t         * @param  {[type]} align      浮层相对于参照的对齐方式\n\t         * @return {[type]}            { left: left, top: top }\n\t         */\n\t        function position(trigger, overlay, placement, align) {\n\t            var $trigger = $(trigger)\n\t\n\t            if (!$trigger.length) return center(overlay)\n\t\n\t            var triggerOffset = $trigger.offset()\n\t            var triggerLeft = triggerOffset.left\n\t            var triggerTop = triggerOffset.top\n\t            var triggerWidth = $trigger.outerWidth()\n\t            var triggerHeight = $trigger.outerHeight()\n\t\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var overlayWidth = $overlay.outerWidth()\n\t            var overlayHeight = $overlay.outerHeight()\n\t                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n\t                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var left, top\n\t            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n\t            var topDiff = triggerHeight / 2 - overlayHeight / 2\n\t            switch (placement) {\n\t                case 'top': // 上方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop - overlayHeight\n\t                    break\n\t                case 'bottom': // 下方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop + triggerHeight\n\t                    break\n\t                case 'left': // 左侧，垂直局中\n\t                    left = triggerLeft - overlayWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t                case 'right': // 右侧，垂直局中\n\t                    left = triggerLeft + triggerWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t            }\n\t\n\t            // 浮层节点不能覆盖参照节点\n\t            if (\n\t                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n\t                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n\t            ) {\n\t                switch (align) {\n\t                    case 'top': // 上边框对齐\n\t                        top = triggerTop\n\t                        break\n\t                    case 'bottom': // 下边框对齐\n\t                        top = triggerTop + triggerHeight - overlayHeight\n\t                        break\n\t                    case 'left': // 做边框对齐\n\t                        left = triggerLeft\n\t                        break\n\t                    case 'right': // 右边框对齐\n\t                        left = triggerLeft + triggerWidth - overlayWidth\n\t                        break\n\t                }\n\t            }\n\t\n\t            return {\n\t                left: left, //  + overlayMarginLeft\n\t                top: top //  + overlayMarginTop\n\t            }\n\t        }\n\t\n\t        function center(width, height) {\n\t            var overlayWidth, overlayHeight\n\t\n\t            // center(overlay) {\n\t            if (!height) {\n\t                var $overlay = $(width) // .show()\n\t                var visible = $overlay.css('display') !== 'none'\n\t                $overlay.show()\n\t                overlayWidth = $overlay.outerWidth()\n\t                overlayHeight = $overlay.outerHeight()\n\t\n\t                if (!visible) $overlay.hide()\n\t\n\t            } else {\n\t                // center(width, height)\n\t                overlayWidth = parseFloat(width, 12)\n\t                overlayHeight = parseFloat(height, 12)\n\t            }\n\t\n\t            var $window = $(window)\n\t            var windowWidth = $window.width()\n\t            var windowHeight = $window.height()\n\t            var scrollLeft = $window.scrollLeft()\n\t            var scrollTop = $window.scrollTop()\n\t\n\t            return {\n\t                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n\t                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n\t            }\n\t        }\n\t\n\t        function start(overlay, offset, placement) {\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var width = $overlay.outerWidth()\n\t            var height = $overlay.outerHeight()\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var result = {\n\t                opacity: 0,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t            switch (placement) {\n\t                case 'top': // 上方\n\t                    result.top = result.top - height * 0.5\n\t                    break\n\t                case 'bottom': // 下方\n\t                    result.top = result.top + height * 0.5\n\t                    break\n\t                case 'left': // 左侧\n\t                    result.left = result.left - width * 0.5\n\t                    break\n\t                case 'right': // 右侧\n\t                    /* Expected a 'break' statement before 'default'. */\n\t                    /* falls through */\n\t                default:\n\t                    result.left = result.left + width * 0.5\n\t                    break\n\t            }\n\t\n\t            return result\n\t        }\n\t\n\t        /* exported overlay */\n\t        function end(overlay, offset) {\n\t            if (!overlay) { /* TODO */ }\n\t            return {\n\t                opacity: 1,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t        }\n\t\n\t        position.center = center\n\t        position.start = start\n\t        position.end = end\n\t\n\t        return position\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<div class=\\\"datepickerwrapper <%= mode === 'multiple' ? 'multiple' : 'single' %>\\\">\\n\" +\n\t        \"    <!--  -->\\n\" +\n\t        \"    <% if (mode === 'signal') { %>\\n\" +\n\t        \"    <div bx-name=\\\"components/datepicker\\\" data-type=\\\"<%= type %>\\\" data-date=\\\"<%= dates[0] %>\\\" data-range=\\\"<%= _ranges %>\\\" data-excluded=\\\"<%= _excludeds %>\\\" data-unlimit=\\\"<%= unlimits[0] %>\\\" class=\\\"picker\\\"></div>\\n\" +\n\t        \"    <% } %>\\n\" +\n\t        \"    <!--  -->\\n\" +\n\t        \"    <% if (mode === 'multiple') { %>\\n\" +\n\t        \"    <% if( shortcuts ) { %>\\n\" +\n\t        \"    <div class=\\\"datepickerwrapper-shortcuts form-inline form-group\\\">\\n\" +\n\t        \"        <div class=\\\"datepickerwrapper-shortcuts-header\\\">\\n\" +\n\t        \"            <div class=\\\"datepickerwrapper-shortcuts-header-title\\\">快捷日期</div>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <div class=\\\"datepickerwrapper-shortcuts-body clearfix\\\">\\n\" +\n\t        \"            <% for (var title in shortcuts) { %>\\n\" +\n\t        \"                <span bx-click=\\\"_change('shortcut')\\\" data-value=\\\"<%= \\n\" +\n\t        \"                    _.map(shortcuts[title], function(item) {\\n\" +\n\t        \"                        return item.format('YYYY-MM-DD HH:mm:ss')\\n\" +\n\t        \"                    }).join(',')\\n\" +\n\t        \"                %>\\\" class=\\\"shortcut\\\"><%= title %></span>\\n\" +\n\t        \"            <% } %>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <% } %>\\n\" +\n\t        \"    <div class=\\\"datepickerwrapper-inputs form-inline form-group\\\">\\n\" +\n\t        \"        <div class=\\\"datepickerwrapper-inputs-header\\\">\\n\" +\n\t        \"            <div class=\\\"datepickerwrapper-inputs-header-title\\\">日期范围</div>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <div class=\\\"datepickerwrapper-inputs-body <%= typeMap.time ? 'time' : '' %>\\\">\\n\" +\n\t        \"            <% for (var i = 0; i < dates.length; i++ ) { %>\\n\" +\n\t        \"                <input bx-click=\\\"_inputToggleDatePicker(<%= i %>)\\\" bx-change=\\\"_change('date', <%= i %>)\\\" value=\\\"<%= dates[i] %>\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n\" +\n\t        \"                <%= i < dates.length -1 ? '-' : '' %>\\n\" +\n\t        \"            <% } %>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <div class=\\\"datepickerwrapper-pickers\\\">\\n\" +\n\t        \"        <% for (var i = 0; i < dates.length; i++ ) { %>\\n\" +\n\t        \"            <div bx-name=\\\"components/datepicker\\\" data-date=\\\"<%= dates[i] %>\\\" data-range=\\\"<%= _ranges %>\\\" data-excluded=\\\"<%= _excludeds %>\\\" data-unlimit=\\\"<%= unlimits[i] %>\\\" data-type=\\\"<%= type %>\\\" class=\\\"picker\\\"></div>\\n\" +\n\t        \"        <% } %>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <div class=\\\"datepickerwrapper-footer\\\">\\n\" +\n\t        \"        <button class=\\\"btn btn-default submit\\\" bx-click=\\\"submit\\\">确认</button>\\n\" +\n\t        \"        <a href=\\\"javascript: void(0);\\\" bx-click=\\\"hide\\\" class=\\\"btn btn-default cancel ml5\\\">取消</a>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"    <% } %>\\n\" +\n\t        \"</div>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** components/datepickerwrapper.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 19a023b50e8cd3f19176\n **/","module.exports = require('./datepickerwrapper')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/datepickerwrapper/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/* global define, document */\ndefine(\n    [\n        'jquery', 'underscore', 'moment',\n        'brix/loader', 'components/base', 'brix/event',\n        'components/datepicker',\n        '../dialog/position.js',\n        './datepickerwrapper.tpl.js'\n    ],\n    function(\n        $, _, moment,\n        Loader, Brix, EventManager,\n        DatePicker,\n        position,\n        template\n    ) {\n        /*\n            shortcut\n            dates\n\n            TODO\n            √ 一个日期\n            √ 多个日期\n            input trigger\n            输入回调，输出回调\n         */\n\n        var RE_INPUT = /^input|textarea$/i\n        var NAMESPACE = '.datepickerwrapper'\n            // var NAMESPACE_ORIGINAL = '.original'\n        var DATE_PATTERN = DatePicker.DATE_PATTERN\n        var TIME_PATTERN = DatePicker.TIME_PATTERN\n        var DATE_TIME_PATTERN = DatePicker.DATE_TIME_PATTERN\n        var SHORTCUTS = function() {\n            var now = moment()\n            var nowDate = now.get('date')\n            var shortcuts = {\n                '今天': [\n                    moment().startOf('day'),\n                    moment().startOf('day')\n                ],\n                '昨天': [\n                    moment().startOf('day').subtract(1, 'days'),\n                    moment().startOf('day').subtract(1, 'days')\n                ],\n                '过去 7 天': [\n                    moment().startOf('day').subtract(7, 'days'),\n                    moment().startOf('day').subtract(1, 'days')\n                ],\n                '本月': [\n                    moment().startOf('day').subtract(nowDate - 1, 'days'),\n                    moment().startOf('day')\n                ],\n                '上月': [\n                    moment().startOf('day').startOf('month').subtract(1, 'month'),\n                    moment().startOf('day').startOf('month').subtract(1, 'days')\n                ],\n                '最近 15 天': [\n                    moment().startOf('day').subtract(15, 'days'),\n                    moment().startOf('day').subtract(1, 'days')\n                ]\n            }\n            return shortcuts\n        }()\n        var STATE = {\n            PENDING: 'pending',\n            ACTIVE: 'active',\n            INACTIVE: 'inactive'\n        }\n\n        function DatePickerWrapper() {}\n\n        DatePickerWrapper.DATE_PATTERN = DATE_PATTERN\n        DatePickerWrapper.TIME_PATTERN = TIME_PATTERN\n        DatePickerWrapper.DATE_TIME_PATTERN = DATE_TIME_PATTERN\n        DatePickerWrapper.SHORTCUTS = SHORTCUTS\n\n        _.extend(DatePickerWrapper.prototype, Brix.prototype, {\n            options: {\n                placement: 'bottom', // top bottom left right\n                align: 'left', // left right top bottom\n                offset: {},\n\n                mode: 'signal', // signal multiple\n                shortcuts: SHORTCUTS,\n                type: 'date', // all date year month time\n                dates: [],\n                ranges: [],\n                excludeds: [],\n                unlimits: []\n            },\n            init: function() {\n                // 修正选项\n                this.options.typeMap = DatePicker.typeMap(this.options.type)\n                if (this.options.dates.length > 1) this.options.mode = 'multiple'\n                if (!this.options.dates.length) this.options.dates = [moment().startOf('day').format(DATE_PATTERN)]\n                if (this.options.shortcuts) {\n                    _.each(this.options.shortcuts, function(dates /*, title*/ ) {\n                        _.each(dates, function(date, index) {\n                            dates[index] = moment(\n                                date,\n                                _.isString(date) && DATE_TIME_PATTERN\n                            )\n                        })\n                    })\n                }\n\n                // ranges\n                if (this.options.range && this.options.range.length) this.options.ranges = this.options.range\n                this.options.ranges = _.flatten(this.options.ranges || this.options.range)\n                _.each(this.options.ranges, function(date, index, ranges) {\n                    if (date) ranges[index] = moment(\n                        date,\n                        _.isString(date) && DATE_TIME_PATTERN\n                    )\n                })\n                this.options._ranges = _.map(this.options.ranges, function(date) {\n                    if (date) return date.format(DATE_PATTERN)\n                })\n                this.options._ranges = \"['\" + this.options._ranges.join(\"','\") + \"']\"\n\n                // excludeds\n                if (this.options.excluded && this.options.excluded.length) this.options.excludeds = this.options.excluded\n                this.options.excludeds = _.flatten(this.options.excludeds || this.options.excluded)\n                _.each(this.options.excludeds, function(date, index, excludeds) {\n                    if (date) excludeds[index] = moment(\n                        date,\n                        _.isString(date) && DATE_TIME_PATTERN\n                    )\n                })\n                this.options._excludeds = _.map(this.options.excludeds, function(date) {\n                    if (date) return date.format(DATE_PATTERN)\n                })\n                this.options._excludeds = this.options._excludeds.length ?\n                    \"['\" + this.options._excludeds.join(\"','\") + \"']\" :\n                    \"[]\"\n\n\n                // if (this.options.unlimits.length) {\n                //     _.each(this.options.unlimits, function(date, index, unlimits) {\n                //         if (date) unlimits[index] = moment(date)\n                //     })\n                // }\n\n                // 支持自定义 HTML 模板 template\n                template = this.options.template || template\n\n                // 支持自定义 CSS 样式\n                if (this.options.css) window.require('css!' + this.options.css)\n            },\n            render: function() {\n                var that = this\n                this.$element = $(this.element)\n                this.$relatedElement = $(\n                    _.template(template)(this.options)\n                ).insertAfter(this.$element)\n\n                var defer = $.Deferred()\n                this['_' + this.options.mode](defer)\n\n                var type = 'click.datepickerwrapper_toggle_' + this.clientId\n                this.$element.off(type)\n                    .on(type, function(event) {\n                        that.toggle(event)\n                    })\n\n                var $manager = this.$manager = new EventManager('bx-')\n                $manager.delegate(this.$element, this)\n                $manager.delegate(this.$relatedElement, this)\n\n                this._autoHide()\n\n                return defer.promise()\n            },\n            val: function(value) {\n                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n                if (value) {\n                    _.each(pickerComponents, function(item, index) {\n                        item.val(\n                            _.isArray(value) ? value[index] : value\n                        )\n                    })\n\n                    this.submit() // #44 #50\n                    return this\n                }\n                return _.map(pickerComponents, function(item /*, index*/ ) {\n                    return item.val()\n                })\n            },\n            range: function(value) {\n                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n                if (value) {\n                    this.options.ranges = value = _.flatten(value)\n                    _.each(pickerComponents, function(item /*, index*/ ) {\n                        item.range(value)\n                    })\n                    return this\n                }\n                return this.options.ranges\n            },\n            excluded: function(value) {\n                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n                if (value) {\n                    this.options.excludeds = value = _.flatten(value)\n                    _.each(pickerComponents, function(item /*, index*/ ) {\n                        item.excluded(value)\n                    })\n                    return this\n                }\n                return this.options.excludeds\n            },\n            _signal: function(defer) {\n                var that = this\n                Loader.boot(true, this.$relatedElement, function( /*records*/ ) {\n                    var pickerComponent = Loader.query('components/datepicker', that.$relatedElement)[0]\n                        /* jshint unused:false */\n                    pickerComponent.on('change.datepicker unchange.datepicker', function(event, date, type) {\n                        // 过滤 timepicker 中的 input 触发的原生 change 事件\n                        if (!date) {\n                            event.preventDefault()\n                            event.stopPropagation()\n                            return\n                        }\n                        if (type !== undefined && type !== 'date' && type !== 'time') return\n                        if (that.options.typeMap.time && type === 'date') return\n\n                        that.hide()\n\n                        var validate = $.Event('change' + NAMESPACE)\n                        that.trigger(validate, [\n                            [date], type\n                        ])\n                        if (!validate.isDefaultPrevented()) {\n                            var value = that._unlimitFilter(date, that.options.unlimits[0])\n                            var items = $('[data-index]', that.$element)\n                            if (items.length) {\n                                _.each(items, function(item, index) {\n                                    var $item = $(item)\n                                    $item[\n                                        RE_INPUT.test(item.nodeName) ? 'val' : 'html'\n                                    ](value)\n                                })\n                            } else {\n                                that.$element[\n                                    RE_INPUT.test(that.element.nodeName) ? 'val' : 'html'\n                                ](value)\n                            }\n\n                            // 单个日期选择器：自动触发 input 元素的 change 事件。</h4>\n                            // 单个日期选择器：自动同步至隐藏域，并触发隐藏域的 change 事件。</h4>\n                            that.$element.triggerHandler('change') //  + NAMESPACE + NAMESPACE_ORIGINAL, date\n                            if (!RE_INPUT.test(that.element.nodeName)) {\n                                $('[data-hidden-index]', that.$element)\n                                    .val(value)\n                                    .triggerHandler('change')\n                            }\n                        }\n                    })\n                    pickerComponent.$element.on('click', '.timepicker .timepicker-footer .cancel', function() {\n                        that.hide()\n                    })\n\n                    if (defer) defer.resolve()\n                })\n            },\n            _multiple: function(defer) {\n                var that = this\n                Loader.boot(true, this.$relatedElement, function() {\n                    var inputWrapper = $('.datepickerwrapper-inputs', that.$relatedElement)\n                    var inputs = $('input', inputWrapper)\n\n                    var pickerWrapper = $('.datepickerwrapper-pickers', that.$relatedElement)\n                    var pickers = $('.picker', pickerWrapper)\n\n                    var pickerComponents = Loader.query('components/datepicker', that.$relatedElement)\n\n                    var shortcutWrapper = $('.datepickerwrapper-shortcuts', that.$relatedElement)\n                    var shortcuts = $('.shortcut', shortcutWrapper)\n\n                    if (that.options.shortcuts) {\n                        _.each(_.values(that.options.shortcuts), function(dates, index) {\n                            var same = true\n                            _.each(dates, function(date, index) {\n                                var optionDate = moment(\n                                    that.options.dates[index],\n                                    _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n                                )\n                                if (!date.isSame(optionDate, 'days')) same = false\n                            })\n                            if (same) {\n                                shortcuts.eq(index).addClass('active')\n                                    .siblings().removeClass('active')\n                            }\n                        })\n                    }\n\n                    _.each(inputs, function(item, index) {\n                        $(item)\n                            .val(\n                                moment(\n                                    that.options.dates[index],\n                                    _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n                                )\n                                .format(DATE_PATTERN)\n                            ) // 初始值\n                    })\n\n                    _.each(pickerComponents, function(item, index) {\n                        /* jshint unused:false */\n                        item.val(that.options.dates[index])\n                            .on('change.datepicker unchange.datepicker ', function(event, date, type) {\n                                if (type !== undefined && type !== 'date' && type !== 'time') return\n                                if (that.options.typeMap.time && type === 'date') return\n\n                                var value = that._unlimitFilter(date, that.options.unlimits[index])\n                                inputs.eq(index).val(value)\n                                pickers.eq(index).hide()\n                            })\n                        var value = that._unlimitFilter(\n                            moment(\n                                that.options.dates[index],\n                                _.isString(that.options.dates[index]) && DATE_TIME_PATTERN\n                            ),\n                            that.options.unlimits[index]\n                        )\n                        inputs.eq(index).val(value)\n                        item.$element.on('click', '.timepicker .timepicker-footer .cancel', function() {\n                            pickers.eq(index).hide()\n                        })\n                    })\n\n                    if (defer) defer.resolve()\n                })\n            },\n            _unlimitFilter: function(date, unlimit) {\n                var typeMap = this.options.typeMap\n                var pattern = typeMap.date && typeMap.time && DATE_TIME_PATTERN ||\n                    typeMap.date && DATE_PATTERN ||\n                    typeMap.time && TIME_PATTERN\n                var text = date.format(pattern)\n                if (unlimit && text === moment(\n                        unlimit,\n                        _.isString(unlimit) && DATE_TIME_PATTERN\n                    ).format(pattern)) text = '不限'\n                return text\n            },\n            _inputToggleDatePicker: function(event, index, type) {\n                var inputWrapper = $('.datepickerwrapper-inputs', this.$relatedElement)\n                var pickerWrapper = $('.datepickerwrapper-pickers', this.$relatedElement)\n                var pickers = $('.picker', pickerWrapper)\n\n                var inputWrapperOffset = inputWrapper.offset()\n                pickerWrapper.offset({ // 修正日期组件容器的位置\n                    left: inputWrapperOffset.left,\n                    top: inputWrapperOffset.top + inputWrapper.outerHeight() + (\n                        parseInt(pickerWrapper.css('margin-top'), 10) ||\n                        0\n                    )\n                })\n\n                var $picker = pickers.eq(index)\n                var $target = $(event.target)\n                var targetOffset = $target.offset()\n                var pickerLeft\n                switch (this.options.align) {\n                    case 'left':\n                        pickerLeft = targetOffset.left\n                        break\n                    case 'right':\n                        pickerLeft = targetOffset.left - ($picker.outerWidth() - $target.outerWidth())\n                }\n                $picker[type ? type : 'toggle']()\n                    .offset({ // 修正单个日期组件的位置\n                        left: pickerLeft\n                    })\n                    .siblings().hide()\n            },\n            _hideDatePicker: function( /*event*/ ) {\n                var pickerWrapper = $('.datepickerwrapper-pickers', this.$relatedElement)\n                var pickers = $('.picker', pickerWrapper)\n                pickers.hide()\n            },\n            show: function( /*event*/ ) {\n                this.$element.addClass('datepickerwrapper-open')\n                this.$relatedElement.show()\n                    .offset(this._offset())\n            },\n            hide: function( /*event*/ ) {\n                this.$element.removeClass('datepickerwrapper-open')\n                this._hideDatePicker()\n                this.$relatedElement.hide()\n            },\n            toggle: function( /*event*/ ) {\n                this.$element.toggleClass('datepickerwrapper-open')\n                this.$relatedElement.toggle()\n                    .offset(this._offset())\n            },\n            _offset: function() {\n                var offset = position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n                var relatedMarginLeft = parseInt(this.$relatedElement.css('margin-left'), 10) || 0\n                var relatedMarginTop = parseInt(this.$relatedElement.css('margin-top'), 10) || 0\n                return {\n                    left: offset.left + relatedMarginLeft + (this.options.offset.left || 0),\n                    top: offset.top + relatedMarginTop + (this.options.offset.top || 0)\n                }\n            },\n            submit: function(event /* jshint unused:false */ , from) {\n                var that = this\n\n                switch (from) {\n                    case 'shortcut':\n                        break\n                    default:\n                        var shortcutWrapper = $('.datepickerwrapper-shortcuts', that.$relatedElement)\n                        var shortcuts = $('.shortcut', shortcutWrapper)\n                        shortcuts.removeClass('active')\n                }\n\n                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n                var dates = _.map(pickerComponents, function(item /*, index*/ ) {\n                    return item.val()\n                })\n\n                this.hide()\n\n                var validate = $.Event('change' + NAMESPACE)\n                this.trigger(validate, [dates])\n\n                if (!validate.isDefaultPrevented()) {\n                    var items = $('[data-index]', this.$element)\n                    if (items.length) {\n                        _.each(items, function(item, index) {\n                            var $item = $(item)\n                            index = +$item.attr('data-index')\n                            $item[\n                                RE_INPUT.test(item.nodeName) ? 'val' : 'html'\n                            ](\n                                that._unlimitFilter(dates[index], that.options.unlimits[index])\n                            )\n\n                        })\n                    } else {\n                        this.$element[\n                            RE_INPUT.test(this.element.nodeName) ? 'val' : 'html'\n                        ](\n                            _.map(dates, function(item, index) {\n                                return that._unlimitFilter(item, that.options.unlimits[index])\n                            }).join(', ')\n                        )\n                    }\n\n                    // 多个日期选择器：自动同步至隐藏域，并触发隐藏域的 change 事件。\n                    items = $('[data-hidden-index]', this.$element)\n                    _.each(items, function(item, index) {\n                        var $item = $(item)\n                        index = +$item.attr('data-hidden-index')\n                        var value = that._unlimitFilter(dates[index], undefined)\n                        $item.val(value).trigger('change')\n                    })\n                }\n            },\n            shortcutText: function(dates) {\n                var shortcutText\n                _.each(this.options.shortcuts, function(shortcutDates, key) {\n                    if (shortcutText) return\n\n                    var same = true\n                    _.each(shortcutDates, function(shortcutDate, index) {\n                        if (!shortcutDate.isSame(dates[index], 'days')) same = false\n                    })\n                    if (same) shortcutText = key\n                })\n                return shortcutText\n            },\n            _change: function(event, type, index) {\n                var that = this\n                var $target = $(event.target)\n                var pickerComponents = Loader.query('components/datepicker', this.$relatedElement)\n\n                switch (type) {\n                    case 'shortcut':\n                        var dates = $target.attr('data-value').split(',')\n                        _.each(dates, function(item, index) {\n                            that.options.dates[index] = item\n                            pickerComponents[index].val(item)\n                        })\n\n                        $target.addClass('active')\n                            .siblings().removeClass('active')\n\n                        this.submit(event, type)\n                        break\n                    case 'date':\n                        var date = moment($target.val())\n                        if (!date.isValid()) break\n                        pickerComponents[index].val(date)\n                        break\n                }\n            },\n            _autoHide: function() {\n                var that = this\n                var type = 'click' + NAMESPACE + '_' + this.clientId\n                this._state = STATE.INACTIVE\n                $(document.body).off(type)\n                    .on(type, function(event) {\n                        // 点击不存在节点\n                        if (!$.contains(document.body, event.target)) return\n                        if (\n                            event.target === that.element || // 点击组件节点\n                            $.contains(that.element, event.target) || // 点击组件子节点\n                            event.target === that.$relatedElement[0] || // 点击关联节点\n                            $.contains(that.$relatedElement[0], event.target) // 点击组件关联子节点\n                        ) {\n                            if (that._state === STATE.ACTIVE) return\n                            that.trigger(\n                                $.Event('active' + NAMESPACE, {\n                                    target: event.target\n                                })\n                            )\n                            that._state = STATE.ACTIVE\n                            return\n                        }\n\n                        if (that._state === STATE.INACTIVE) return\n                        var inactiveEvent = $.Event('inactive' + NAMESPACE, {\n                            target: event.target\n                        })\n                        that.trigger(inactiveEvent)\n                        that._state = STATE.INACTIVE\n\n                        if (inactiveEvent.isDefaultPrevented()) return\n\n                        that.hide()\n                    })\n                    .on(type, function(event) {\n                        var inputWrapper = $('.datepickerwrapper-inputs-body', that.$relatedElement)\n                        var pickerWrapper = $('.datepickerwrapper-pickers', that.$relatedElement)\n                        if (\n                            ( // 点击关联节点，点击组件关联子节点\n                                event.target === that.$relatedElement[0] ||\n                                $.contains(that.$relatedElement[0], event.target)\n                            ) &&\n                            ( // 但不在 inputs 和 pickers 之内\n                                (inputWrapper.length && pickerWrapper.length) &&\n                                !$.contains(inputWrapper[0], event.target) &&\n                                !$.contains(pickerWrapper[0], event.target)\n                            )\n                        ) {\n                            that._hideDatePicker()\n                        }\n                    })\n            },\n            destroy: function() {\n                var type = 'click.datepickerwrapper_toggle_' + this.clientId\n                this.$element.off(type)\n\n                this.$manager.undelegate(this.$element, this)\n                this.$manager.undelegate(this.$relatedElement, this)\n\n                this.$relatedElement.remove()\n\n                type = 'click' + NAMESPACE + '_' + this.clientId\n                $(document.body).off(type)\n            }\n        })\n\n        return DatePickerWrapper\n            // return Brix.extend({})\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/datepickerwrapper/datepickerwrapper.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"moment\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/loader\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"components/base\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/event\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"components/datepicker\"\n ** module id = 8\n ** module chunks = 0\n **/","/* global define, window */\ndefine(\n    [\n        'jquery'\n    ],\n    function(\n        $\n    ) {\n        var RE_TOP_OR_BOTTOM = /top|bottom/\n        var RE_LEFT_OR_RIGHT = /left|right/\n\n        /**\n         * 计算浮层位置的工具函数\n         * @param  {[type]} trigger    参照节点\n         * @param  {[type]} dialog     浮层节点\n         * @param  {[type]} placement  浮层相对于参照的位置\n         * @param  {[type]} align      浮层相对于参照的对齐方式\n         * @return {[type]}            { left: left, top: top }\n         */\n        function position(trigger, overlay, placement, align) {\n            var $trigger = $(trigger)\n\n            if (!$trigger.length) return center(overlay)\n\n            var triggerOffset = $trigger.offset()\n            var triggerLeft = triggerOffset.left\n            var triggerTop = triggerOffset.top\n            var triggerWidth = $trigger.outerWidth()\n            var triggerHeight = $trigger.outerHeight()\n\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var overlayWidth = $overlay.outerWidth()\n            var overlayHeight = $overlay.outerHeight()\n                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\n            if (!visible) $overlay.hide()\n\n            var left, top\n            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n            var topDiff = triggerHeight / 2 - overlayHeight / 2\n            switch (placement) {\n                case 'top': // 上方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop - overlayHeight\n                    break\n                case 'bottom': // 下方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop + triggerHeight\n                    break\n                case 'left': // 左侧，垂直局中\n                    left = triggerLeft - overlayWidth\n                    top = triggerTop + topDiff\n                    break\n                case 'right': // 右侧，垂直局中\n                    left = triggerLeft + triggerWidth\n                    top = triggerTop + topDiff\n                    break\n            }\n\n            // 浮层节点不能覆盖参照节点\n            if (\n                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n            ) {\n                switch (align) {\n                    case 'top': // 上边框对齐\n                        top = triggerTop\n                        break\n                    case 'bottom': // 下边框对齐\n                        top = triggerTop + triggerHeight - overlayHeight\n                        break\n                    case 'left': // 做边框对齐\n                        left = triggerLeft\n                        break\n                    case 'right': // 右边框对齐\n                        left = triggerLeft + triggerWidth - overlayWidth\n                        break\n                }\n            }\n\n            return {\n                left: left, //  + overlayMarginLeft\n                top: top //  + overlayMarginTop\n            }\n        }\n\n        function center(width, height) {\n            var overlayWidth, overlayHeight\n\n            // center(overlay) {\n            if (!height) {\n                var $overlay = $(width) // .show()\n                var visible = $overlay.css('display') !== 'none'\n                $overlay.show()\n                overlayWidth = $overlay.outerWidth()\n                overlayHeight = $overlay.outerHeight()\n\n                if (!visible) $overlay.hide()\n\n            } else {\n                // center(width, height)\n                overlayWidth = parseFloat(width, 12)\n                overlayHeight = parseFloat(height, 12)\n            }\n\n            var $window = $(window)\n            var windowWidth = $window.width()\n            var windowHeight = $window.height()\n            var scrollLeft = $window.scrollLeft()\n            var scrollTop = $window.scrollTop()\n\n            return {\n                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n            }\n        }\n\n        function start(overlay, offset, placement) {\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var width = $overlay.outerWidth()\n            var height = $overlay.outerHeight()\n\n            if (!visible) $overlay.hide()\n\n            var result = {\n                opacity: 0,\n                left: offset.left,\n                top: offset.top\n            }\n            switch (placement) {\n                case 'top': // 上方\n                    result.top = result.top - height * 0.5\n                    break\n                case 'bottom': // 下方\n                    result.top = result.top + height * 0.5\n                    break\n                case 'left': // 左侧\n                    result.left = result.left - width * 0.5\n                    break\n                case 'right': // 右侧\n                    /* Expected a 'break' statement before 'default'. */\n                    /* falls through */\n                default:\n                    result.left = result.left + width * 0.5\n                    break\n            }\n\n            return result\n        }\n\n        /* exported overlay */\n        function end(overlay, offset) {\n            if (!overlay) { /* TODO */ }\n            return {\n                opacity: 1,\n                left: offset.left,\n                top: offset.top\n            }\n        }\n\n        position.center = center\n        position.start = start\n        position.end = end\n\n        return position\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dialog/position.js\n ** module id = 9\n ** module chunks = 0\n **/","/* global define */\ndefine(function() {\n    return \"<div class=\\\"datepickerwrapper <%= mode === 'multiple' ? 'multiple' : 'single' %>\\\">\\n\" +\n        \"    <!--  -->\\n\" +\n        \"    <% if (mode === 'signal') { %>\\n\" +\n        \"    <div bx-name=\\\"components/datepicker\\\" data-type=\\\"<%= type %>\\\" data-date=\\\"<%= dates[0] %>\\\" data-range=\\\"<%= _ranges %>\\\" data-excluded=\\\"<%= _excludeds %>\\\" data-unlimit=\\\"<%= unlimits[0] %>\\\" class=\\\"picker\\\"></div>\\n\" +\n        \"    <% } %>\\n\" +\n        \"    <!--  -->\\n\" +\n        \"    <% if (mode === 'multiple') { %>\\n\" +\n        \"    <% if( shortcuts ) { %>\\n\" +\n        \"    <div class=\\\"datepickerwrapper-shortcuts form-inline form-group\\\">\\n\" +\n        \"        <div class=\\\"datepickerwrapper-shortcuts-header\\\">\\n\" +\n        \"            <div class=\\\"datepickerwrapper-shortcuts-header-title\\\">快捷日期</div>\\n\" +\n        \"        </div>\\n\" +\n        \"        <div class=\\\"datepickerwrapper-shortcuts-body clearfix\\\">\\n\" +\n        \"            <% for (var title in shortcuts) { %>\\n\" +\n        \"                <span bx-click=\\\"_change('shortcut')\\\" data-value=\\\"<%= \\n\" +\n        \"                    _.map(shortcuts[title], function(item) {\\n\" +\n        \"                        return item.format('YYYY-MM-DD HH:mm:ss')\\n\" +\n        \"                    }).join(',')\\n\" +\n        \"                %>\\\" class=\\\"shortcut\\\"><%= title %></span>\\n\" +\n        \"            <% } %>\\n\" +\n        \"        </div>\\n\" +\n        \"    </div>\\n\" +\n        \"    <% } %>\\n\" +\n        \"    <div class=\\\"datepickerwrapper-inputs form-inline form-group\\\">\\n\" +\n        \"        <div class=\\\"datepickerwrapper-inputs-header\\\">\\n\" +\n        \"            <div class=\\\"datepickerwrapper-inputs-header-title\\\">日期范围</div>\\n\" +\n        \"        </div>\\n\" +\n        \"        <div class=\\\"datepickerwrapper-inputs-body <%= typeMap.time ? 'time' : '' %>\\\">\\n\" +\n        \"            <% for (var i = 0; i < dates.length; i++ ) { %>\\n\" +\n        \"                <input bx-click=\\\"_inputToggleDatePicker(<%= i %>)\\\" bx-change=\\\"_change('date', <%= i %>)\\\" value=\\\"<%= dates[i] %>\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n\" +\n        \"                <%= i < dates.length -1 ? '-' : '' %>\\n\" +\n        \"            <% } %>\\n\" +\n        \"        </div>\\n\" +\n        \"    </div>\\n\" +\n        \"    <div class=\\\"datepickerwrapper-pickers\\\">\\n\" +\n        \"        <% for (var i = 0; i < dates.length; i++ ) { %>\\n\" +\n        \"            <div bx-name=\\\"components/datepicker\\\" data-date=\\\"<%= dates[i] %>\\\" data-range=\\\"<%= _ranges %>\\\" data-excluded=\\\"<%= _excludeds %>\\\" data-unlimit=\\\"<%= unlimits[i] %>\\\" data-type=\\\"<%= type %>\\\" class=\\\"picker\\\"></div>\\n\" +\n        \"        <% } %>\\n\" +\n        \"    </div>\\n\" +\n        \"    <div class=\\\"datepickerwrapper-footer\\\">\\n\" +\n        \"        <button class=\\\"btn btn-default submit\\\" bx-click=\\\"submit\\\">确认</button>\\n\" +\n        \"        <a href=\\\"javascript: void(0);\\\" bx-click=\\\"hide\\\" class=\\\"btn btn-default cancel ml5\\\">取消</a>\\n\" +\n        \"    </div>\\n\" +\n        \"    <% } %>\\n\" +\n        \"</div>\"\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/datepickerwrapper/datepickerwrapper.tpl.js\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}
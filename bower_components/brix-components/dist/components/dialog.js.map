{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/dialog.js","webpack:///webpack/bootstrap 096ddc298a4b8089b47b","webpack:///./src/dialog/index.js","webpack:///./src/dialog/dialog.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\"","webpack:///./src/dialog/position.js","webpack:///./src/dialog/dialog.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","Brix","EventManager","position","template","Dialog","arguments","length","options","extend","init","render","DIALOG_ALL_CACHE","push","TRANSITION_DURATION","EASING","NAMESPACE","DIALOG_OPENED_CACHE","STATE","PENDING","OPENED","CLOSED","prototype","placement","align","left","undefined","top","width","height","offset","className","content","closable","movable","modal","singleton","state","$element","element","$manager","css","isString","window","indexOf","fill","delegate","destroy","close","without","type","clientId","document","body","off","undelegate","$relatedElement","remove","$backdropElement","html","appendTo","hide","removeClass","find","addClass","isObject","open","each","item","_zIndex","_topmost","_move","show","_offset","stop","start","animate","end","_autoHide","trigger","closeEvent","Event","isDefaultPrevented","that","isHasOpenedModal","filter","on","event","keyCode","dialog","when","target","topmost","max","zIndex","mousedown","mousemove","mouseup","$body","$dialogHeader","diff","pageX","pageY","pop","closeAll","apply","overlay","$trigger","center","triggerOffset","triggerLeft","triggerTop","triggerWidth","outerWidth","triggerHeight","outerHeight","$overlay","visible","overlayWidth","overlayHeight","leftDiff","topDiff","RE_TOP_OR_BOTTOM","test","RE_LEFT_OR_RIGHT","parseFloat","$window","windowWidth","windowHeight","scrollLeft","scrollTop","result","opacity"],"mappings":"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","file":"components/dialog.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/dialog\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/dialog\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/dialog\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/dialog\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t/*\n\t    http://jqueryui.com/dialog\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3),\n\t        __webpack_require__(4), __webpack_require__(5),\n\t        __webpack_require__(6),\n\t        __webpack_require__(7)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _,\n\t        Brix, EventManager,\n\t        position,\n\t        template\n\t    ) {\n\t        /*\n\t            var Dialog = require('components/dialog')\n\t            var content = '\\\n\t                <div class=\"dialog-header\">\\\n\t                    <h4 class=\"dialog-title\">abc</h4>\\\n\t                </div>\\\n\t            '\n\t            var dialog = new Dialog({\n\t                content: content,\n\t                modal: true,\n\t                left: 100,\n\t                top: 100\n\t            })\n\t            dialog.on('open.dialog',function(){\n\t                debugger\n\t            })\n\t            dialog.open()\n\t\n\t            // 多个浮层\n\t            var Dialog = require('components/dialog')\n\t            var _ = require('underscore')\n\t            var options = {\n\t                modal: true,\n\t                singleton: false,\n\t                top: 400\n\t            }\n\t\n\t            new Dialog(_.extend({\n\t                content: Math.random(),\n\t                left: 100\n\t            }, options)).open()\n\t\n\t            new Dialog(_.extend({\n\t                content: Math.random(),\n\t                left: 200\n\t            }, options)).open()\n\t\n\t            new Dialog(_.extend({\n\t                content: Math.random(),\n\t                left: 300\n\t            }, options)).open()\n\t         */\n\t\n\t        var TRANSITION_DURATION = 150\n\t        var EASING = 'swing'\n\t        var NAMESPACE = '.dialog'\n\t        var DIALOG_OPENED_CACHE = []\n\t        var DIALOG_ALL_CACHE = []\n\t        var STATE = {\n\t            PENDING: 'pending',\n\t            OPENED: 'opened',\n\t            CLOSED: 'closed'\n\t        }\n\t\n\t        function Dialog() {\n\t            // 支持构造函数\n\t            if (arguments.length) {\n\t                this.options = _.extend({}, this.options, arguments[0])\n\t                this.init()\n\t                this.render()\n\t            }\n\t\n\t            // 压入缓存 DIALOG_ALL_CACHE\n\t            DIALOG_ALL_CACHE.push(this)\n\t        }\n\t\n\t        _.extend(Dialog.prototype, Brix.prototype, {\n\t            options: {\n\t                placement: 'right', // top bottom left right\n\t                align: 'top', // left right top bottom\n\t\n\t                left: undefined,\n\t                top: undefined,\n\t                width: 'auto',\n\t                height: 'auto',\n\t                offset: {\n\t                    left: 0,\n\t                    top: 0\n\t                },\n\t\n\t                // { data-class | data-className | className: ''}\n\t                className: '',\n\t\n\t                content: '',\n\t\n\t                closable: true, // 是否可关闭\n\t                movable: false, // 是否可移动\n\t                modal: false, // 是否模态对话框 http://baike.baidu.com/view/3148035.htm\n\t                singleton: true // 是否单例模式\n\t            },\n\t            state: STATE.PENDING, // pending opened closed\n\t            init: function() {\n\t                this.$element = $(this.element || this.options.element)\n\t                this.$manager = new EventManager('bx-')\n\t\n\t                // 支持自定义外联 CSS 样式，data-css=\"dialog.css\"\n\t                if (this.options.css && _.isString(this.options.css)) window.require(['css!' + this.options.css])\n\t\n\t                // data-class => data-className\n\t                if (this.options.class) this.options.className = this.options.class\n\t\n\t                // 为文本内容自动加上样式 dialog-body\n\t                if (('' + this.options.content).indexOf('<') === -1) {\n\t                    this.options.content =\n\t                        '<div class=\"dialog-body\">' +\n\t                        this.options.content +\n\t                        '<div>'\n\t                }\n\t            },\n\t            render: function() {\n\t                this.fill()\n\t                this.$manager.delegate(this.$element, this)\n\t            },\n\t            destroy: function() {\n\t                // 先关闭，把当前实例从缓存 DIALOG_OPENED_CACHE 中移除\n\t                this.close()\n\t\n\t                // 从缓存 DIALOG_ALL_CACHE 中移除\n\t                DIALOG_ALL_CACHE = _.without(DIALOG_ALL_CACHE, this)\n\t\n\t                var type = 'keyup.dialog_autohide_' + this.clientId\n\t                if (!DIALOG_OPENED_CACHE.length) $(document.body).off(type) // 只有当窗口全部关闭后，才能移除\n\t\n\t                this.$manager.undelegate(this.$element)\n\t                this.$manager.undelegate(this.$relatedElement)\n\t\n\t                this.$relatedElement.remove()\n\t                this.$relatedElement = null\n\t                this.$backdropElement = null\n\t            },\n\t            fill: function() {\n\t                var html = _.template(template)(this.options)\n\t\n\t                // 初始化节点\n\t                if (!this.$relatedElement) {\n\t                    this.$relatedElement = $(html).appendTo(document.body).hide()\n\t                }\n\t\n\t                // 单例模式 data-singleton\n\t                // 不共用浮层 div.dialog.dialog-singleton，但是会关闭其他单例浮层\n\t                if (!this.options.singleton) {\n\t                    this.$relatedElement.removeClass('dialog-singleton')\n\t                }\n\t\n\t                // data-content\n\t                this.$relatedElement\n\t                    .find('.dialog-content')\n\t                    .html(this.options.content)\n\t\n\t                // 宽高 width height\n\t                this.$relatedElement.css({\n\t                    width: this.options.width,\n\t                    height: this.options.height\n\t                })\n\t\n\t                // 总是初始化遮罩层\n\t                this.$backdropElement = $('.dialog-backdrop')\n\t                if (!this.$backdropElement.length) {\n\t                    this.$backdropElement = $('<div class=\"dialog-backdrop\"></div>').hide()\n\t                        .appendTo(document.body)\n\t                }\n\t\n\t                // 是否模态对话框 modal\n\t                if (this.options.modal) {}\n\t\n\t                // 类样式 data-className\n\t                if (this.options.className) {\n\t                    this.$relatedElement.addClass(this.options.className)\n\t                }\n\t\n\t                // 内联 CSS 样式，data-css=\"{ position: 'fixed' }\"\n\t                if (this.options.css && _.isObject(this.options.css)) {\n\t                    this.$relatedElement.css(this.options.css)\n\t                }\n\t\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t                return this\n\t            },\n\t            open: function() {\n\t                // 触发浮层的节点被修改\n\t                if (!this.element &&\n\t                    this.options.element &&\n\t                    (this.options.element !== this.$element[0])\n\t                ) this.$element = $(this.options.element)\n\t\n\t                // 单例模式：先关闭其他所有单例模式的浮层\n\t                if (this.options.singleton) {\n\t                    _.each(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n\t                        if (item.options.singleton) item.close()\n\t                    })\n\t                }\n\t\n\t                this.fill()\n\t                this._zIndex('open')\n\t                this._topmost()\n\t                this._move()\n\t\n\t                // 模态模式：用户必须先操作模态对话框\n\t                if (this.options.modal) {\n\t                    $(document.body).addClass('modal-open')\n\t                    this.$backdropElement\n\t                        .show()\n\t                        .css(\n\t                            'z-index', +this.$relatedElement.css('z-index') - 1\n\t                        )\n\t                }\n\t\n\t                // 从右侧移入\n\t                var offset = this._offset()\n\t                this.$relatedElement.show()\n\t                    .stop()\n\t                    .css(\n\t                        position.start(this.$relatedElement, offset /*, this.options.placement*/ )\n\t                    )\n\t                    .animate(\n\t                        position.end(this.$relatedElement, offset),\n\t                        TRANSITION_DURATION,\n\t                        EASING\n\t                    )\n\t\n\t                this._autoHide()\n\t\n\t                // 记录打开的浮层\n\t                DIALOG_OPENED_CACHE.push(this)\n\t\n\t                this.trigger('open' + NAMESPACE)\n\t\n\t                this.state = STATE.OPENED\n\t\n\t                return this\n\t            },\n\t            close: function() {\n\t                if (!this.$relatedElement || !this.$relatedElement.length) return this\n\t\n\t                if (this.state === STATE.CLOSED) return this\n\t\n\t                var closeEvent = $.Event('close' + NAMESPACE)\n\t                this.trigger(closeEvent)\n\t                if (closeEvent.isDefaultPrevented()) return\n\t\n\t                var that = this\n\t                var offset = this._offset()\n\t                this.$relatedElement\n\t                    .stop()\n\t                    .animate(\n\t                        position.start(this.$relatedElement, offset),\n\t                        TRANSITION_DURATION,\n\t                        EASING,\n\t                        function() {\n\t                            if (that.$relatedElement) that.$relatedElement.hide()\n\t                        }\n\t                    )\n\t\n\t                // 从缓存中移除当前实例，包括多次打开的实例\n\t                DIALOG_OPENED_CACHE = _.without(DIALOG_OPENED_CACHE, this)\n\t\n\t                if (this.options.modal) {\n\t                    // 是否还有模态浮层：只有当前全部模态浮层都关闭后，才能关闭 .dialog-backdrop\n\t                    var isHasOpenedModal = _.filter(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n\t                        if (item.options.modal) return item\n\t                    }).length\n\t                    if (!isHasOpenedModal) {\n\t                        $(document.body).removeClass('modal-open')\n\t                        this.$backdropElement.hide()\n\t                    }\n\t                }\n\t\n\t                this._zIndex('close')\n\t\n\t                this.state = STATE.CLOSED\n\t\n\t                return this\n\t            },\n\t            _offset: function() {\n\t                var offset = this.options.left !== undefined && this.options.top !== undefined ? {\n\t                    left: this.options.left,\n\t                    top: this.options.top\n\t                } : position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n\t                offset = {\n\t                    left: offset.left + (this.options.offset.left || 0),\n\t                    top: offset.top + (this.options.offset.top || 0)\n\t                }\n\t                return offset\n\t            },\n\t            _autoHide: function() {\n\t                var type = 'keyup.dialog_autohide_' + this.clientId\n\t                $(document.body).off(type)\n\t                    .on(type, function(event) {\n\t                        if (event.keyCode === 27) {\n\t                            // 优先关闭最后打开的、可关闭的浮层\n\t                            // X DIALOG_OPENED_CACHE.pop() 不在这里移除，而是在 close() 中移除。\n\t                            var dialog = DIALOG_OPENED_CACHE[DIALOG_OPENED_CACHE.length - 1]\n\t                            if (dialog && dialog.options.closable) dialog.close()\n\t                        }\n\t                    })\n\t\n\t                return this\n\t            },\n\t            // 修正 z-index\n\t            _zIndex: function(when) {\n\t                if (!DIALOG_OPENED_CACHE.length) return\n\t\n\t                // 最顶层的浮层\n\t                var topmost = _.max(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n\t                    return +item.$relatedElement.css('z-index')\n\t                })\n\t                var zIndex = +topmost.$relatedElement.css('z-index')\n\t                var target\n\t\n\t                switch (when) {\n\t                    case 'open':\n\t                        target = this\n\t                        if (target === topmost) return\n\t                        break\n\t                    case 'close':\n\t                        // 最后弹出的浮层\n\t                        target = DIALOG_OPENED_CACHE[DIALOG_OPENED_CACHE.length - 1]\n\t                        break\n\t                }\n\t\n\t                if (target.$backdropElement) {\n\t                    target.$backdropElement.css('z-index', zIndex + 1)\n\t                }\n\t                target.$relatedElement.css('z-index', zIndex + 2)\n\t\n\t                return this\n\t            },\n\t            _topmost: function() {\n\t                var that = this\n\t                var type = 'mousedown.dialog_topmost_' + this.clientId\n\t                this.$relatedElement.off(type)\n\t                    .on(type, function( /*event*/ ) {\n\t                        that._zIndex('open')\n\t                        DIALOG_OPENED_CACHE.push(that)\n\t                    })\n\t\n\t                return this\n\t            },\n\t            _move: function() {\n\t                if (!this.options.movable) return this\n\t\n\t                var that = this\n\t                var mousedown = 'mousedown.dialog_move_' + this.clientId\n\t                var mousemove = 'mousemove.dialog_move_' + this.clientId\n\t                var mouseup = 'mouseup.dialog_move_' + this.clientId\n\t                var $body = $(document.body)\n\t                var $dialogHeader = this.$relatedElement.find('.dialog-header')\n\t\n\t                $dialogHeader.addClass('cursor-move')\n\t\n\t                $dialogHeader.off(mousedown)\n\t                    .on(mousedown, function(event) {\n\t                        var offset = $dialogHeader.offset()\n\t                        var diff = {\n\t                            left: event.pageX - offset.left,\n\t                            top: event.pageY - offset.top\n\t                        }\n\t                        $body.on(mousemove, function(event) {\n\t                            that.$relatedElement.offset({\n\t                                left: event.pageX - diff.left,\n\t                                top: event.pageY - diff.top\n\t                            })\n\t                            return false\n\t                        })\n\t                        $body.on(mouseup, function( /*event*/ ) {\n\t                            $body.off(mousemove)\n\t                            $body.off(mouseup)\n\t                            return false\n\t                        })\n\t                    })\n\t\n\t                return this\n\t            }\n\t        })\n\t\n\t        // 便捷方法。新建一个浮层。\n\t        Dialog.open = function(options) {\n\t            return (new Dialog(options)).open()\n\t        }\n\t\n\t        // 便捷方法。关闭最近打开的浮层。\n\t        Dialog.close = function() {\n\t            var dialog = DIALOG_OPENED_CACHE.pop()\n\t            if (dialog) dialog.close()\n\t        }\n\t\n\t        // 便捷方法。关闭所有打开的浮层\n\t        Dialog.closeAll = function() {\n\t            _.each(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n\t                item.close()\n\t            })\n\t            return this\n\t        }\n\t\n\t        // 便捷方法。销毁所有浮层。\n\t        Dialog.destroy = function() {\n\t            _.each(DIALOG_ALL_CACHE, function(item /*, index*/ ) {\n\t                item.destroy()\n\t            })\n\t            return this\n\t        }\n\t\n\t        return Dialog\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, window */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $\n\t    ) {\n\t        var RE_TOP_OR_BOTTOM = /top|bottom/\n\t        var RE_LEFT_OR_RIGHT = /left|right/\n\t\n\t        /**\n\t         * 计算浮层位置的工具函数\n\t         * @param  {[type]} trigger    参照节点\n\t         * @param  {[type]} dialog     浮层节点\n\t         * @param  {[type]} placement  浮层相对于参照的位置\n\t         * @param  {[type]} align      浮层相对于参照的对齐方式\n\t         * @return {[type]}            { left: left, top: top }\n\t         */\n\t        function position(trigger, overlay, placement, align) {\n\t            var $trigger = $(trigger)\n\t\n\t            if (!$trigger.length) return center(overlay)\n\t\n\t            var triggerOffset = $trigger.offset()\n\t            var triggerLeft = triggerOffset.left\n\t            var triggerTop = triggerOffset.top\n\t            var triggerWidth = $trigger.outerWidth()\n\t            var triggerHeight = $trigger.outerHeight()\n\t\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var overlayWidth = $overlay.outerWidth()\n\t            var overlayHeight = $overlay.outerHeight()\n\t                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n\t                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var left, top\n\t            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n\t            var topDiff = triggerHeight / 2 - overlayHeight / 2\n\t            switch (placement) {\n\t                case 'top': // 上方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop - overlayHeight\n\t                    break\n\t                case 'bottom': // 下方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop + triggerHeight\n\t                    break\n\t                case 'left': // 左侧，垂直局中\n\t                    left = triggerLeft - overlayWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t                case 'right': // 右侧，垂直局中\n\t                    left = triggerLeft + triggerWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t            }\n\t\n\t            // 浮层节点不能覆盖参照节点\n\t            if (\n\t                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n\t                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n\t            ) {\n\t                switch (align) {\n\t                    case 'top': // 上边框对齐\n\t                        top = triggerTop\n\t                        break\n\t                    case 'bottom': // 下边框对齐\n\t                        top = triggerTop + triggerHeight - overlayHeight\n\t                        break\n\t                    case 'left': // 做边框对齐\n\t                        left = triggerLeft\n\t                        break\n\t                    case 'right': // 右边框对齐\n\t                        left = triggerLeft + triggerWidth - overlayWidth\n\t                        break\n\t                }\n\t            }\n\t\n\t            return {\n\t                left: left, //  + overlayMarginLeft\n\t                top: top //  + overlayMarginTop\n\t            }\n\t        }\n\t\n\t        function center(width, height) {\n\t            var overlayWidth, overlayHeight\n\t\n\t            // center(overlay) {\n\t            if (!height) {\n\t                var $overlay = $(width) // .show()\n\t                var visible = $overlay.css('display') !== 'none'\n\t                $overlay.show()\n\t                overlayWidth = $overlay.outerWidth()\n\t                overlayHeight = $overlay.outerHeight()\n\t\n\t                if (!visible) $overlay.hide()\n\t\n\t            } else {\n\t                // center(width, height)\n\t                overlayWidth = parseFloat(width, 12)\n\t                overlayHeight = parseFloat(height, 12)\n\t            }\n\t\n\t            var $window = $(window)\n\t            var windowWidth = $window.width()\n\t            var windowHeight = $window.height()\n\t            var scrollLeft = $window.scrollLeft()\n\t            var scrollTop = $window.scrollTop()\n\t\n\t            return {\n\t                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n\t                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n\t            }\n\t        }\n\t\n\t        function start(overlay, offset, placement) {\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var width = $overlay.outerWidth()\n\t            var height = $overlay.outerHeight()\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var result = {\n\t                opacity: 0,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t            switch (placement) {\n\t                case 'top': // 上方\n\t                    result.top = result.top - height * 0.5\n\t                    break\n\t                case 'bottom': // 下方\n\t                    result.top = result.top + height * 0.5\n\t                    break\n\t                case 'left': // 左侧\n\t                    result.left = result.left - width * 0.5\n\t                    break\n\t                case 'right': // 右侧\n\t                    /* Expected a 'break' statement before 'default'. */\n\t                    /* falls through */\n\t                default:\n\t                    result.left = result.left + width * 0.5\n\t                    break\n\t            }\n\t\n\t            return result\n\t        }\n\t\n\t        /* exported overlay */\n\t        function end(overlay, offset) {\n\t            if (!overlay) { /* TODO */ }\n\t            return {\n\t                opacity: 1,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t        }\n\t\n\t        position.center = center\n\t        position.start = start\n\t        position.end = end\n\t\n\t        return position\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<div class=\\\"dialog dialog-singleton dialog-<%= placement %>\\\">\\n\" +\n\t        \"    <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"dialog-close <%= closable ? '' : 'hide' %>\\\"><span class=\\\"brixfont\\\">&#xe62d;</span><!-- &times; --></button>\\n\" +\n\t        \"    <div class=\\\"dialog-content\\\">\\n\" +\n\t        \"        <%= content %>\\n\" +\n\t        \"        <!-- \\n\" +\n\t        \"        <div class=\\\"dialog-header\\\">\\n\" +\n\t        \"            <h4 class=\\\"dialog-title\\\">Title</h4>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <div class=\\\"dialog-body\\\">Body</div>\\n\" +\n\t        \"        <div class=\\\"dialog-footer\\\">\\n\" +\n\t        \"            <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\">Close</button>\\n\" +\n\t        \"            <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save</button>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"         -->\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"</div>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** components/dialog.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 096ddc298a4b8089b47b\n **/","module.exports = require('./dialog')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dialog/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/* global define */\n/*\n    http://jqueryui.com/dialog\n */\ndefine(\n    [\n        'jquery', 'underscore',\n        'components/base', 'brix/event',\n        './position.js',\n        './dialog.tpl.js'\n    ],\n    function(\n        $, _,\n        Brix, EventManager,\n        position,\n        template\n    ) {\n        /*\n            var Dialog = require('components/dialog')\n            var content = '\\\n                <div class=\"dialog-header\">\\\n                    <h4 class=\"dialog-title\">abc</h4>\\\n                </div>\\\n            '\n            var dialog = new Dialog({\n                content: content,\n                modal: true,\n                left: 100,\n                top: 100\n            })\n            dialog.on('open.dialog',function(){\n                debugger\n            })\n            dialog.open()\n\n            // 多个浮层\n            var Dialog = require('components/dialog')\n            var _ = require('underscore')\n            var options = {\n                modal: true,\n                singleton: false,\n                top: 400\n            }\n\n            new Dialog(_.extend({\n                content: Math.random(),\n                left: 100\n            }, options)).open()\n\n            new Dialog(_.extend({\n                content: Math.random(),\n                left: 200\n            }, options)).open()\n\n            new Dialog(_.extend({\n                content: Math.random(),\n                left: 300\n            }, options)).open()\n         */\n\n        var TRANSITION_DURATION = 150\n        var EASING = 'swing'\n        var NAMESPACE = '.dialog'\n        var DIALOG_OPENED_CACHE = []\n        var DIALOG_ALL_CACHE = []\n        var STATE = {\n            PENDING: 'pending',\n            OPENED: 'opened',\n            CLOSED: 'closed'\n        }\n\n        function Dialog() {\n            // 支持构造函数\n            if (arguments.length) {\n                this.options = _.extend({}, this.options, arguments[0])\n                this.init()\n                this.render()\n            }\n\n            // 压入缓存 DIALOG_ALL_CACHE\n            DIALOG_ALL_CACHE.push(this)\n        }\n\n        _.extend(Dialog.prototype, Brix.prototype, {\n            options: {\n                placement: 'right', // top bottom left right\n                align: 'top', // left right top bottom\n\n                left: undefined,\n                top: undefined,\n                width: 'auto',\n                height: 'auto',\n                offset: {\n                    left: 0,\n                    top: 0\n                },\n\n                // { data-class | data-className | className: ''}\n                className: '',\n\n                content: '',\n\n                closable: true, // 是否可关闭\n                movable: false, // 是否可移动\n                modal: false, // 是否模态对话框 http://baike.baidu.com/view/3148035.htm\n                singleton: true // 是否单例模式\n            },\n            state: STATE.PENDING, // pending opened closed\n            init: function() {\n                this.$element = $(this.element || this.options.element)\n                this.$manager = new EventManager('bx-')\n\n                // 支持自定义外联 CSS 样式，data-css=\"dialog.css\"\n                if (this.options.css && _.isString(this.options.css)) window.require(['css!' + this.options.css])\n\n                // data-class => data-className\n                if (this.options.class) this.options.className = this.options.class\n\n                // 为文本内容自动加上样式 dialog-body\n                if (('' + this.options.content).indexOf('<') === -1) {\n                    this.options.content =\n                        '<div class=\"dialog-body\">' +\n                        this.options.content +\n                        '<div>'\n                }\n            },\n            render: function() {\n                this.fill()\n                this.$manager.delegate(this.$element, this)\n            },\n            destroy: function() {\n                // 先关闭，把当前实例从缓存 DIALOG_OPENED_CACHE 中移除\n                this.close()\n\n                // 从缓存 DIALOG_ALL_CACHE 中移除\n                DIALOG_ALL_CACHE = _.without(DIALOG_ALL_CACHE, this)\n\n                var type = 'keyup.dialog_autohide_' + this.clientId\n                if (!DIALOG_OPENED_CACHE.length) $(document.body).off(type) // 只有当窗口全部关闭后，才能移除\n\n                this.$manager.undelegate(this.$element)\n                this.$manager.undelegate(this.$relatedElement)\n\n                this.$relatedElement.remove()\n                this.$relatedElement = null\n                this.$backdropElement = null\n            },\n            fill: function() {\n                var html = _.template(template)(this.options)\n\n                // 初始化节点\n                if (!this.$relatedElement) {\n                    this.$relatedElement = $(html).appendTo(document.body).hide()\n                }\n\n                // 单例模式 data-singleton\n                // 不共用浮层 div.dialog.dialog-singleton，但是会关闭其他单例浮层\n                if (!this.options.singleton) {\n                    this.$relatedElement.removeClass('dialog-singleton')\n                }\n\n                // data-content\n                this.$relatedElement\n                    .find('.dialog-content')\n                    .html(this.options.content)\n\n                // 宽高 width height\n                this.$relatedElement.css({\n                    width: this.options.width,\n                    height: this.options.height\n                })\n\n                // 总是初始化遮罩层\n                this.$backdropElement = $('.dialog-backdrop')\n                if (!this.$backdropElement.length) {\n                    this.$backdropElement = $('<div class=\"dialog-backdrop\"></div>').hide()\n                        .appendTo(document.body)\n                }\n\n                // 是否模态对话框 modal\n                if (this.options.modal) {}\n\n                // 类样式 data-className\n                if (this.options.className) {\n                    this.$relatedElement.addClass(this.options.className)\n                }\n\n                // 内联 CSS 样式，data-css=\"{ position: 'fixed' }\"\n                if (this.options.css && _.isObject(this.options.css)) {\n                    this.$relatedElement.css(this.options.css)\n                }\n\n                this.$manager.delegate(this.$relatedElement, this)\n                return this\n            },\n            open: function() {\n                // 触发浮层的节点被修改\n                if (!this.element &&\n                    this.options.element &&\n                    (this.options.element !== this.$element[0])\n                ) this.$element = $(this.options.element)\n\n                // 单例模式：先关闭其他所有单例模式的浮层\n                if (this.options.singleton) {\n                    _.each(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n                        if (item.options.singleton) item.close()\n                    })\n                }\n\n                this.fill()\n                this._zIndex('open')\n                this._topmost()\n                this._move()\n\n                // 模态模式：用户必须先操作模态对话框\n                if (this.options.modal) {\n                    $(document.body).addClass('modal-open')\n                    this.$backdropElement\n                        .show()\n                        .css(\n                            'z-index', +this.$relatedElement.css('z-index') - 1\n                        )\n                }\n\n                // 从右侧移入\n                var offset = this._offset()\n                this.$relatedElement.show()\n                    .stop()\n                    .css(\n                        position.start(this.$relatedElement, offset /*, this.options.placement*/ )\n                    )\n                    .animate(\n                        position.end(this.$relatedElement, offset),\n                        TRANSITION_DURATION,\n                        EASING\n                    )\n\n                this._autoHide()\n\n                // 记录打开的浮层\n                DIALOG_OPENED_CACHE.push(this)\n\n                this.trigger('open' + NAMESPACE)\n\n                this.state = STATE.OPENED\n\n                return this\n            },\n            close: function() {\n                if (!this.$relatedElement || !this.$relatedElement.length) return this\n\n                if (this.state === STATE.CLOSED) return this\n\n                var closeEvent = $.Event('close' + NAMESPACE)\n                this.trigger(closeEvent)\n                if (closeEvent.isDefaultPrevented()) return\n\n                var that = this\n                var offset = this._offset()\n                this.$relatedElement\n                    .stop()\n                    .animate(\n                        position.start(this.$relatedElement, offset),\n                        TRANSITION_DURATION,\n                        EASING,\n                        function() {\n                            if (that.$relatedElement) that.$relatedElement.hide()\n                        }\n                    )\n\n                // 从缓存中移除当前实例，包括多次打开的实例\n                DIALOG_OPENED_CACHE = _.without(DIALOG_OPENED_CACHE, this)\n\n                if (this.options.modal) {\n                    // 是否还有模态浮层：只有当前全部模态浮层都关闭后，才能关闭 .dialog-backdrop\n                    var isHasOpenedModal = _.filter(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n                        if (item.options.modal) return item\n                    }).length\n                    if (!isHasOpenedModal) {\n                        $(document.body).removeClass('modal-open')\n                        this.$backdropElement.hide()\n                    }\n                }\n\n                this._zIndex('close')\n\n                this.state = STATE.CLOSED\n\n                return this\n            },\n            _offset: function() {\n                var offset = this.options.left !== undefined && this.options.top !== undefined ? {\n                    left: this.options.left,\n                    top: this.options.top\n                } : position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n                offset = {\n                    left: offset.left + (this.options.offset.left || 0),\n                    top: offset.top + (this.options.offset.top || 0)\n                }\n                return offset\n            },\n            _autoHide: function() {\n                var type = 'keyup.dialog_autohide_' + this.clientId\n                $(document.body).off(type)\n                    .on(type, function(event) {\n                        if (event.keyCode === 27) {\n                            // 优先关闭最后打开的、可关闭的浮层\n                            // X DIALOG_OPENED_CACHE.pop() 不在这里移除，而是在 close() 中移除。\n                            var dialog = DIALOG_OPENED_CACHE[DIALOG_OPENED_CACHE.length - 1]\n                            if (dialog && dialog.options.closable) dialog.close()\n                        }\n                    })\n\n                return this\n            },\n            // 修正 z-index\n            _zIndex: function(when) {\n                if (!DIALOG_OPENED_CACHE.length) return\n\n                // 最顶层的浮层\n                var topmost = _.max(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n                    return +item.$relatedElement.css('z-index')\n                })\n                var zIndex = +topmost.$relatedElement.css('z-index')\n                var target\n\n                switch (when) {\n                    case 'open':\n                        target = this\n                        if (target === topmost) return\n                        break\n                    case 'close':\n                        // 最后弹出的浮层\n                        target = DIALOG_OPENED_CACHE[DIALOG_OPENED_CACHE.length - 1]\n                        break\n                }\n\n                if (target.$backdropElement) {\n                    target.$backdropElement.css('z-index', zIndex + 1)\n                }\n                target.$relatedElement.css('z-index', zIndex + 2)\n\n                return this\n            },\n            _topmost: function() {\n                var that = this\n                var type = 'mousedown.dialog_topmost_' + this.clientId\n                this.$relatedElement.off(type)\n                    .on(type, function( /*event*/ ) {\n                        that._zIndex('open')\n                        DIALOG_OPENED_CACHE.push(that)\n                    })\n\n                return this\n            },\n            _move: function() {\n                if (!this.options.movable) return this\n\n                var that = this\n                var mousedown = 'mousedown.dialog_move_' + this.clientId\n                var mousemove = 'mousemove.dialog_move_' + this.clientId\n                var mouseup = 'mouseup.dialog_move_' + this.clientId\n                var $body = $(document.body)\n                var $dialogHeader = this.$relatedElement.find('.dialog-header')\n\n                $dialogHeader.addClass('cursor-move')\n\n                $dialogHeader.off(mousedown)\n                    .on(mousedown, function(event) {\n                        var offset = $dialogHeader.offset()\n                        var diff = {\n                            left: event.pageX - offset.left,\n                            top: event.pageY - offset.top\n                        }\n                        $body.on(mousemove, function(event) {\n                            that.$relatedElement.offset({\n                                left: event.pageX - diff.left,\n                                top: event.pageY - diff.top\n                            })\n                            return false\n                        })\n                        $body.on(mouseup, function( /*event*/ ) {\n                            $body.off(mousemove)\n                            $body.off(mouseup)\n                            return false\n                        })\n                    })\n\n                return this\n            }\n        })\n\n        // 便捷方法。新建一个浮层。\n        Dialog.open = function(options) {\n            return (new Dialog(options)).open()\n        }\n\n        // 便捷方法。关闭最近打开的浮层。\n        Dialog.close = function() {\n            var dialog = DIALOG_OPENED_CACHE.pop()\n            if (dialog) dialog.close()\n        }\n\n        // 便捷方法。关闭所有打开的浮层\n        Dialog.closeAll = function() {\n            _.each(DIALOG_OPENED_CACHE, function(item /*, index*/ ) {\n                item.close()\n            })\n            return this\n        }\n\n        // 便捷方法。销毁所有浮层。\n        Dialog.destroy = function() {\n            _.each(DIALOG_ALL_CACHE, function(item /*, index*/ ) {\n                item.destroy()\n            })\n            return this\n        }\n\n        return Dialog\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dialog/dialog.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"components/base\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/event\"\n ** module id = 5\n ** module chunks = 0\n **/","/* global define, window */\ndefine(\n    [\n        'jquery'\n    ],\n    function(\n        $\n    ) {\n        var RE_TOP_OR_BOTTOM = /top|bottom/\n        var RE_LEFT_OR_RIGHT = /left|right/\n\n        /**\n         * 计算浮层位置的工具函数\n         * @param  {[type]} trigger    参照节点\n         * @param  {[type]} dialog     浮层节点\n         * @param  {[type]} placement  浮层相对于参照的位置\n         * @param  {[type]} align      浮层相对于参照的对齐方式\n         * @return {[type]}            { left: left, top: top }\n         */\n        function position(trigger, overlay, placement, align) {\n            var $trigger = $(trigger)\n\n            if (!$trigger.length) return center(overlay)\n\n            var triggerOffset = $trigger.offset()\n            var triggerLeft = triggerOffset.left\n            var triggerTop = triggerOffset.top\n            var triggerWidth = $trigger.outerWidth()\n            var triggerHeight = $trigger.outerHeight()\n\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var overlayWidth = $overlay.outerWidth()\n            var overlayHeight = $overlay.outerHeight()\n                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\n            if (!visible) $overlay.hide()\n\n            var left, top\n            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n            var topDiff = triggerHeight / 2 - overlayHeight / 2\n            switch (placement) {\n                case 'top': // 上方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop - overlayHeight\n                    break\n                case 'bottom': // 下方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop + triggerHeight\n                    break\n                case 'left': // 左侧，垂直局中\n                    left = triggerLeft - overlayWidth\n                    top = triggerTop + topDiff\n                    break\n                case 'right': // 右侧，垂直局中\n                    left = triggerLeft + triggerWidth\n                    top = triggerTop + topDiff\n                    break\n            }\n\n            // 浮层节点不能覆盖参照节点\n            if (\n                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n            ) {\n                switch (align) {\n                    case 'top': // 上边框对齐\n                        top = triggerTop\n                        break\n                    case 'bottom': // 下边框对齐\n                        top = triggerTop + triggerHeight - overlayHeight\n                        break\n                    case 'left': // 做边框对齐\n                        left = triggerLeft\n                        break\n                    case 'right': // 右边框对齐\n                        left = triggerLeft + triggerWidth - overlayWidth\n                        break\n                }\n            }\n\n            return {\n                left: left, //  + overlayMarginLeft\n                top: top //  + overlayMarginTop\n            }\n        }\n\n        function center(width, height) {\n            var overlayWidth, overlayHeight\n\n            // center(overlay) {\n            if (!height) {\n                var $overlay = $(width) // .show()\n                var visible = $overlay.css('display') !== 'none'\n                $overlay.show()\n                overlayWidth = $overlay.outerWidth()\n                overlayHeight = $overlay.outerHeight()\n\n                if (!visible) $overlay.hide()\n\n            } else {\n                // center(width, height)\n                overlayWidth = parseFloat(width, 12)\n                overlayHeight = parseFloat(height, 12)\n            }\n\n            var $window = $(window)\n            var windowWidth = $window.width()\n            var windowHeight = $window.height()\n            var scrollLeft = $window.scrollLeft()\n            var scrollTop = $window.scrollTop()\n\n            return {\n                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n            }\n        }\n\n        function start(overlay, offset, placement) {\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var width = $overlay.outerWidth()\n            var height = $overlay.outerHeight()\n\n            if (!visible) $overlay.hide()\n\n            var result = {\n                opacity: 0,\n                left: offset.left,\n                top: offset.top\n            }\n            switch (placement) {\n                case 'top': // 上方\n                    result.top = result.top - height * 0.5\n                    break\n                case 'bottom': // 下方\n                    result.top = result.top + height * 0.5\n                    break\n                case 'left': // 左侧\n                    result.left = result.left - width * 0.5\n                    break\n                case 'right': // 右侧\n                    /* Expected a 'break' statement before 'default'. */\n                    /* falls through */\n                default:\n                    result.left = result.left + width * 0.5\n                    break\n            }\n\n            return result\n        }\n\n        /* exported overlay */\n        function end(overlay, offset) {\n            if (!overlay) { /* TODO */ }\n            return {\n                opacity: 1,\n                left: offset.left,\n                top: offset.top\n            }\n        }\n\n        position.center = center\n        position.start = start\n        position.end = end\n\n        return position\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dialog/position.js\n ** module id = 6\n ** module chunks = 0\n **/","/* global define */\ndefine(function() {\n    return \"<div class=\\\"dialog dialog-singleton dialog-<%= placement %>\\\">\\n\" +\n        \"    <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"dialog-close <%= closable ? '' : 'hide' %>\\\"><span class=\\\"brixfont\\\">&#xe62d;</span><!-- &times; --></button>\\n\" +\n        \"    <div class=\\\"dialog-content\\\">\\n\" +\n        \"        <%= content %>\\n\" +\n        \"        <!-- \\n\" +\n        \"        <div class=\\\"dialog-header\\\">\\n\" +\n        \"            <h4 class=\\\"dialog-title\\\">Title</h4>\\n\" +\n        \"        </div>\\n\" +\n        \"        <div class=\\\"dialog-body\\\">Body</div>\\n\" +\n        \"        <div class=\\\"dialog-footer\\\">\\n\" +\n        \"            <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\">Close</button>\\n\" +\n        \"            <button bx-click=\\\"close\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save</button>\\n\" +\n        \"        </div>\\n\" +\n        \"         -->\\n\" +\n        \"    </div>\\n\" +\n        \"</div>\"\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dialog/dialog.tpl.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/dropdown.js","webpack:///webpack/bootstrap ff9c326c3bd56baffde8","webpack:///./src/dropdown/index.js","webpack:///./src/dropdown/dropdown.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"brix/loader\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\"","webpack:///./src/dropdown/dropdown.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","Loader","Brix","EventManager","template","Dropdown","options","element","nodeName","toLowerCase","CustomDropdown","NAMESPACE","compiledTemplate","extend","prototype","name","undefined","label","value","data","disabled","width","className","justify","searchbox","placeholder","_searchboxEvent","popover","_popoverWidth","init","$element","hide","$manager","length","_fixFlattenData","_fillSelect","_parseDataFromSelect","prop","val","$selectedOption","find","trim","text","attr","render","$relatedElement","insertBefore","parseInt","css","min-width","addClass","delegate","boot","_autoHide","toggle","toggleClass","show","removeClass","that","oldValue","$target","isObject","each","item","children","childItem","selected","end","event","Event","trigger","triggerHandler","$menu","$newMenu","replaceWith","select","currentTarget","search","type","key","keyCode","seed","target","filter","all","$lis","has","$select","_parseOptions","map","option","_parseOption","$option","hasClass","child","test","$child","index","context","_genOption","empty","$optgroup","appendTo","_responsive","$window","window","on","offset","top","scrollTop","button","height","outerHeight","placement","clientId","document","body","off","destroy","undelegate","remove","$item","targetValue","targetText","apply"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,UAAAA,QAAA,cAAAA,QAAA,eAAAA,QAAA,mBAAAA,QAAA,eACA,kBAAAC,gBAAAC,IACAD,QAAA,oEAAAJ,GACA,gBAAAC,SACAA,QAAA,uBAAAD,EAAAG,QAAA,UAAAA,QAAA,cAAAA,QAAA,eAAAA,QAAA,mBAAAA,QAAA,eAEAJ,EAAA,uBAAAC,EAAAD,EAAA,OAAAA,EAAA,WAAAA,EAAA,eAAAA,EAAA,mBAAAA,EAAA,gBACCO,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAb,OAGA,IAAAC,GAAAa,EAAAD,IACAb,WACAe,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAhB,EAAAD,QAAAC,IAAAD,QAAAY,GAGAX,EAAAe,QAAA,EAGAf,EAAAD,QAvBA,GAAAc,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASX,EAAQD,EAASY,GEtDhCX,EAAAD,QAAAY,EAAA,IF4DM,SAASX,EAAQD,EAASY,GG5DhC,GAAAS,GAAAC,CAKAD,IAEAT,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,EAAA,IACAU,EACA,SACAC,EAAAC,EACAC,EAAAC,EAAAC,EACAC,GAqFA,QAAAC,GAAAC,GACA,GAAAA,KAAAC,SACA,WAAAD,EAAAC,QAAAC,SAAAC,cACA,UAAAC,GAAAJ,GAmXA,QAAAI,MAzXA,GAAAC,GAAA,YACAC,EAAAZ,EAAAI,WAudA,OA7cAJ,GAAAa,OAAAR,EAAAS,UAAAZ,EAAAY,WACAR,SACAS,KAAAC,OACAC,MAAAD,OACAE,MAAAF,OACAG,QACAC,SAAAJ,OAEAK,MAAAL,OACAM,UAAAN,OACAO,SAAA,EAEAC,WAAA,EACAC,YAAA,QACAC,gBAAA,QAEAC,SAAA,EACAC,cAAA,IAEAC,KAAA,WACAhD,KAAAiD,SAAA/B,EAAAlB,KAAA0B,SAAAwB,OACAlD,KAAAmD,SAAA,GAAA7B,GAAA,MAEA,IAAAG,GAAAzB,KAAAyB,OAGAA,GAAAa,KAAAc,QAKApD,KAAAqD,gBAAArD,KAAAyB,QAAAa,MACAtC,KAAAsD,eALA7B,EAAAa,KAAAtC,KAAAuD,qBAAAvD,KAAAiD,UASAxB,EAAAc,SAAAvC,KAAAiD,SAAAO,KAAA,YAGArB,SAAAV,EAAAY,OAAArC,KAAAiD,SAAAQ,IAAAhC,EAAAY,MAAA,GAGA,IAAAqB,GAAA1D,KAAAiD,SAAAU,KAAA,kBACAlC,GAAAW,MAAAlB,EAAA0C,KAAAF,EAAAG,QACApC,EAAAY,MAAAqB,EAAAI,KAAA,SAGArC,EAAAS,KAAAlC,KAAAiD,SAAAa,KAAA,QAGArC,EAAAkB,YACAlB,EAAAkB,aAAA,EACAlB,EAAAoB,gBAAA,SAEApB,EAAAoB,gBAAApB,EAAAkB,UACAlB,EAAAkB,WAAA,IAKAlB,EAAAqB,SACArB,EAAAqB,WAAA,IACArB,EAAAsB,cAAAtB,EAAAqB,QACArB,EAAAqB,SAAA,GAKA9C,KAAAyB,QAAAzB,gBAAAyB,QAAAgB,UAAAzC,KAAAyB,QAAAzB,WAEA+D,OAAA,WACA/D,KAAAgE,gBAAA9C,EACAa,EAAA/B,KAAAyB,UACAwC,aAAAjE,KAAAiD,SAEA,IAAAT,GAAAxC,KAAAyB,QAAAe,KACAA,KACA0B,SAAA1B,WAAA,MACAxC,KAAAgE,gBAAAG,KACA3B,QACA4B,YAAA5B,KAKAxC,KAAAyB,QAAAgB,WACAzC,KAAAgE,gBAAAK,SAAArE,KAAAyB,QAAAgB,WAIAzC,KAAAyB,QAAAiB,SACA1C,KAAAgE,gBAAAK,SAAA,oBAGArE,KAAAmD,SAAAmB,SAAAtE,KAAAiD,SAAAjD,MACAA,KAAAmD,SAAAmB,SAAAtE,KAAAgE,gBAAAhE,MAEAA,KAAAyB,QAAAqB,SAAA1B,EAAAmD,KAAAvE,KAAAgE,iBAGAhE,KAAAwE,aAEAC,OAAA,WAEA,MADAzE,MAAAgE,gBAAAU,YAAA,QACA1E,MAEA2E,KAAA,WAEA,MADA3E,MAAAgE,gBAAAK,SAAA,QACArE,MAEAkD,KAAA,WAEA,MADAlD,MAAAgE,gBAAAY,YAAA,QACA5E,MAMAyD,IAAA,SAAApB,GAEA,GAAAwC,GAAA7E,KACA8E,EAAA,WACA,GAAAC,GAAAF,EAAAb,gBAAAL,KAAA,oCACAmB,EAAAC,EAAAjB,KAAA,QAEA,OADA3B,UAAA2C,MAAA5D,EAAA0C,KAAAmB,EAAAlB,SACAiB,IAIA,IAAA3C,SAAAE,EAAA,MAAAyC,EAGA,IAAAxC,EAeA,IAdAnB,EAAA6D,SAAA3C,GAAAC,EAAAD,EACAlB,EAAA8D,KAAAjF,KAAAyB,QAAAa,KAAA,SAAA4C,GACAA,EAAAC,SACAhE,EAAA8D,KAAAC,EAAAC,SAAA,SAAAC,GACAA,EAAA/C,WAAAC,EAAA8C,GACAA,EAAAC,SAAAD,EAAA/C,YAGA6C,EAAA7C,WAAAC,EAAA4C,GACAA,EAAAG,SAAAH,EAAA7C,YAKAC,EAAA,CAmBA,GAhBAtC,KAAAgE,gBAAAL,KAAA,uDACAE,KAAAvB,EAAAF,OAGApC,KAAAiD,SACAQ,IAAAnB,EAAAD,OAGArC,KAAAgE,gBAAAL,KAAA,oBACAA,KAAA,kBAAAmB,EAAA,OACAF,YAAA,UACAU,MACA3B,KAAA,kBAAArB,EAAAD,MAAA,OACAgC,SAAA,UAGA,GAAA/B,EAAAD,QAAAyC,EAAA,MAAA9E,KAKA,IAAAuF,GAAArE,EAAAsE,MAAA,SAAA1D,EAUA,OATA9B,MAAAyF,QAAAF,GACArD,KAAAlC,KAAAyB,QAAAS,KACAE,MAAAE,EAAAF,MACAC,MAAAC,EAAAD,QAGArC,KAAAiD,SACAyC,eAAA,UAEA1F,OAEAsC,KAAA,SAAAA,GAEA,GAAAH,SAAAG,EAAA,MAAAtC,MAAAyB,QAAAa,IAGAtC,MAAAyB,QAAAa,KAAAtC,KAAAqD,gBAAAf,GACAtC,KAAAsD,aAEA,IAAAqC,GAAA3F,KAAAgE,gBAAAL,KAAA,oBACAiC,EAAA1E,EACAa,EAAA/B,KAAAyB,UACAkC,KAAA,mBAQA,OANAgC,GAAAE,YAAAD,GAEA5F,KAAAmD,SAAAmB,SAAAtE,KAAAgE,gBAAAhE,MAEAA,KAAAyB,QAAAqB,SAAA1B,EAAAmD,KAAAvE,KAAAgE,iBAEAhE,MAEA8F,OAAA,SAAAP,GACA,GAAAR,GAAA7D,EAAAqE,EAAAQ,eACA1D,EAAA0C,EAAAjB,KAAA,SACA1B,EAAAlB,EAAA0C,KAAAmB,EAAAlB,OACA7D,MAAAyD,IAAAtB,SAAAE,IAAAD,GACApC,KAAAyE,UAMAuB,OAAA,SAAAT,GACA,aAAAA,EAAAU,KAAA,CACA,GAAAC,GAAAX,EAAAY,OAIA,SAAAD,GAAA,GAAAA,KAAA,QAAAA,MAAA,SAGA,cAAAlG,KAAAyB,QAAAoB,iBAAA,KAAAqD,EAAA,OAGA,GAAAE,GAAAlF,EAAAqE,EAAAc,QAAA5C,KACAzD,MAAAyF,QAAA,SAAA3D,EAAAsE,IAEAE,OAAA,SAAAF,EAAAG,GAEAH,EAAAH,OACAG,EAAAG,EACAA,GAAA,EASA,IAAAC,GAAAxG,KAAAgE,gBAAAL,KAAA,sBACAyC,IAGAI,EAAArC,IAAA,kBACAqC,EAAAF,OAAA,cAAAF,EAAA,MAAAzB,OACAR,IAAA,wBAJAqC,EAAArC,IAAA,uBAOAoC,GAAAC,EAAAC,IAAA,eAAAL,EAAA,MAAAzB,QAEApC,SAAA,SAAAA,GAEA,MAAAJ,UAAAI,EAAAvC,KAAAyB,QAAAc,UAGAvC,KAAAyB,QAAAc,WACAvC,KAAAiD,SAAAO,KAAA,WAAAjB,GACAvC,KAAAgE,gBAAAzB,EAAA,sCACAvC,OAEAuD,qBAAA,SAAAmD,GAaA,QAAAC,GAAAlF,GACA,MAAAN,GAAAyF,IAAAnF,EAAA,SAAAoF,GACA,MAAAC,GAAAD,KAIA,QAAAC,GAAAD,GACA,GAAAE,GAAA7F,EAAA2F,EACA,OAAAE,GAAAC,SAAA,sBACA5E,MAAAlB,EAAA0C,KAAAmD,EAAAlD,QACAxB,MAAA0E,EAAAjD,KAAA,SACAuB,SAAA0B,EAAAvD,KAAA,aAvBA,GAAA2B,GAAAhE,EAAAmF,OAAAI,EAAAvB,WAAA,SAAA8B,GAEA,yBAAAC,KAAAD,EAAAtF,WAEA,OAAAR,GAAAyF,IAAAzB,EAAA,SAAA8B,GACA,GAAAE,GAAAjG,EAAA+F,EACA,mBAAAC,KAAAD,EAAAtF,WACAS,MAAA+E,EAAArD,KAAA,SACAqB,SAAAwB,EAAAQ,EAAAhC,aACqB2B,EAAAG,MAkBrB5D,gBAAA,SAAAf,GACA,MAAAnB,GAAAyF,IAAAtE,EAAA,SAAA4C,EAAAkC,EAAAC,GACA,MAAAA,GAAAD,GAAAjG,EAAA6D,SAAAE,MACA9C,MAAA8C,EACA7C,MAAA6C,MAIA5B,YAAA,WAeA,QAAAgE,GAAApC,GAEA,MAAAhE,GAAA,YACA4C,KAAA,QAAAoB,EAAA7C,OACAmB,KAAA,WAAA0B,EAAAG,UACAxB,KAAAqB,EAAA9C,OAnBA,GAAAsE,GAAA1G,KAAAiD,SAAAsE,OACApG,GAAA8D,KAAAjF,KAAAyB,QAAAa,KAAA,SAAA4C,GACA,GAAAA,EAAAC,UAAAD,EAAAC,SAAA/B,OAAA,CACA,GAAAoE,GAAAtG,EAAA,cAAA4C,KAAA,QAAAoB,EAAA9C,MACAjB,GAAA8D,KAAAC,EAAAC,SAAA,SAAAD,GACAoC,EAAApC,GAAAuC,SAAAD,KAEAA,EAAAC,SAAAf,OAGAY,GAAApC,GAAAuC,SAAAf,MAYAgB,YAAA,WACA,GAAAC,GAAAzG,EAAA0G,QACA5D,EAAAhE,KAAAgE,gBACA2B,EAAA3B,EAAAL,KAAA,mBACAzC,GAAA0G,QAAAC,GAAA,oBACA,GAAAC,GAAA9D,EAAA8D,SACAC,EAAAD,EAAAC,IAAAJ,EAAAK,YACAC,EAAAN,EAAAK,YAAAL,EAAAO,SAAAJ,EAAAC,IAAA/D,EAAAmE,cACAC,EAAAH,GAAAF,EAAA,cACA,QAAAK,GACA,aACAzC,EAAAxB,IAAA,aAAA4D,EAAA,GACA,MACA,WACApC,EAAAxB,IAAA,aAAA8D,EAAA,QAKAzD,UAAA,WACA,GAAAK,GAAA7E,KACAiG,EAAA,2BAAAjG,KAAAqI,QACAnH,GAAAoH,SAAAC,MAAAC,IAAAvC,GACA4B,GAAA5B,EAAA,SAAAV,GACAV,EAAAb,gBAAAyC,IAAAlB,EAAAc,QAAAjD,QACAyB,EAAA3B,UAGAuF,QAAA,WACAzI,KAAAmD,SAAAuF,WAAA1I,KAAAiD,UACAjD,KAAAmD,SAAAuF,WAAA1I,KAAAgE,iBAEAhE,KAAAgE,gBAAA2E,QAEA,IAAA1C,GAAA,2BAAAjG,KAAAqI,QACAnH,GAAAoH,SAAAC,MAAAC,IAAAvC,MAUA9E,EAAAa,OAAAH,EAAAI,UAAAT,EAAAS,WACAe,KAAA,WACAhD,KAAAiD,SAAA/B,EAAAlB,KAAA0B,SACA1B,KAAAgE,gBAAAhE,KAAAiD,SACAjD,KAAAmD,SAAA,GAAA7B,GAAA,OAEAtB,KAAAqD,gBAAArD,KAAAyB,QAAAa,MAGAtC,KAAAyB,QAAAS,KAAAlC,KAAAiD,SAAAa,KAAA,SAEAC,OAAA,WACA5B,SAAAnC,KAAAyB,QAAAY,OAAArC,KAAAyD,IAAAzD,KAAAyB,QAAAY,OAEArC,KAAAmD,SAAAmB,SAAAtE,KAAAgE,gBAAAhE,MAGAA,KAAAwE,aAEAf,IAAA,SAAApB,GACA,GAAAwC,GAAA7E,KACA8E,EAAA,WACA,GAAAC,GAAAF,EAAA5B,SAAAU,KAAA,oCACAmB,EAAAC,EAAAjB,KAAA,QAEA,OADA3B,UAAA2C,MAAA5D,EAAA0C,KAAAmB,EAAAlB,SACAiB,IAIA,IAAA3C,SAAAE,EAAA,MAAAyC,EAGA,IAAAxC,EAoBA,OAnBAnB,GAAA6D,SAAA3C,GAAAC,EAAAD,EACAlB,EAAA8D,KAAAJ,EAAA5B,SAAAU,KAAA,kCAAAuB,GACA,GAAA0D,GAAA1H,EAAAgE,GACAH,EAAA6D,EAAAjF,KAAA,OACAkF,EAAA9D,EAAAjB,KAAA,SACAgF,EAAA5H,EAAA0C,KAAAmB,EAAAlB,SAEA1B,SAAA0G,MAAAxG,GACAF,SAAA0G,GAAAC,GAAAzG,KAEAC,GACAJ,KAAA2C,EAAApD,QAAAS,KACAE,MAAA0G,EACAzG,MAAAF,SAAA0G,IAAAC,MAMAxG,GAGAtC,KAAAgE,gBAAAL,KAAA,uDACAE,KAAAvB,EAAAF,OAGA,GAAAE,EAAAD,QAAAyC,EAAA9E,MAGAA,KAAAgE,gBAAAL,KAAA,oBACAA,KAAA,kBAAAmB,EAAA,OACAF,YAAA,UACAU,MACA3B,KAAA,kBAAArB,EAAAD,MAAA,OACAgC,SAAA,UAEArE,KAAAyF,QAAA,SAAA3D,EAAAQ,GAEAtC,OAnBA,QAqBAsC,KAAA,SAAAA,GAEA,GAAAH,SAAAG,EAAA,MAAAtC,MAAAyB,QAAAa,IAGAtC,MAAAyB,QAAAa,KAAAtC,KAAAqD,gBAAAf,EAEA,IAAAqD,GAAA3F,KAAAgE,gBAAAL,KAAA,oBACAiC,EAAA1E,EACAa,EAAA/B,KAAAyB,UACAkC,KAAA,mBAMA,OAJAgC,GAAAE,YAAAD,GAEA5F,KAAAmD,SAAAmB,SAAAtE,KAAAgE,gBAAAhE,MAEAA,QAIAwB,GACAuH,MAAApJ,EAAAqB,KAAAmB,SAAAlB,IAAArB,EAAAD,QAAAsB,KHgEM,SAASrB,EAAQD,GIznBvBC,EAAAD,QAAAM,GJ+nBM,SAASL,EAAQD,GK/nBvBC,EAAAD,QAAAO,GLqoBM,SAASN,EAAQD,GMroBvBC,EAAAD,QAAAQ,GN2oBM,SAASP,EAAQD,GO3oBvBC,EAAAD,QAAAS,GPipBM,SAASR,EAAQD,GQjpBvBC,EAAAD,QAAAU,GRupBM,SAAST,EAAQD,EAASY,GSvpBhC,GAAAU,EACAA,GAAA,WACA,6KACA,qvGA+DCL,KAAAjB,EAAAY,EAAAZ,EAAAC,KAAAuC,SAAAlB,IAAArB,EAAAD,QAAAsB","file":"components/dropdown.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"brix/loader\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/dropdown\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/dropdown\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"brix/loader\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"brix/loader\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/dropdown\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/dropdown\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"brix/loader\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, window, document */\n\t/*\n\t    http://getbootstrap.com/components/#dropdowns\n\t    http://silviomoreto.github.io/bootstrap-select/\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3),\n\t        __webpack_require__(4), __webpack_require__(5), __webpack_require__(6),\n\t        __webpack_require__(7)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _,\n\t        Loader, Brix, EventManager,\n\t        template\n\t    ) {\n\t        /*\n\t            # Dropdown\n\t\n\t            下拉框组件。\n\t\n\t            ### 数据\n\t                [\n\t                    value,\n\t                    ...\n\t                ]\n\t                或者\n\t                [\n\t                    {\n\t                        label: '',\n\t                        value: '',\n\t                        selected: true|false\n\t                    },\n\t                    ...\n\t                ]\n\t                或者\n\t                [\n\t                    {\n\t                        label: '',\n\t                        children: [\n\t                            [\n\t                                {\n\t                                    label: '',\n\t                                    value: '',\n\t                                    selected: true|false\n\t                                },\n\t                                ...\n\t                            ]\n\t                        ]\n\t                    },\n\t                    ...\n\t                ]\n\t            ### 选项\n\t                公共选项：data template\n\t\n\t            ### 属性\n\t                公共属性：element moduleId clientId parentClientId childClientIds data template\n\t                selectedIndex   当前选中的下标。\n\t                label            选中条目的文本。\n\t                value           选中条目的值。\n\t                select          指向关联的 <select> 节点\n\t\n\t            ### 方法\n\t                select( label|value )\n\t                toggle()\n\t                focus()\n\t                blue()\n\t\n\t            ### 事件\n\t                公共事件：ready destroyed\n\t                change\n\t\n\t            ### 示例\n\t\n\t            <select>\n\t                <option value =\"volvo\">Volvo</option>\n\t                <option value =\"saab\">Saab</option>\n\t                <option value =\"mercedes\">Mercedes</option>\n\t                <option value =\"audi\">Audi</option>\n\t            </select>\n\t            <select>\n\t                <optgroup label=\"Swedish Cars\">\n\t                    <option value =\"volvo\">Volvo</option>\n\t                    <option value =\"saab\">Saab</option>\n\t                </optgroup>\n\t                <optgroup label=\"German Cars\">\n\t                    <option value =\"mercedes\">Mercedes</option>\n\t                    <option value =\"audi\">Audi</option>\n\t                </optgroup>\n\t            </select>\n\t\n\t            TODO\n\t                multiple disabled\n\t                responsive http://silviomoreto.github.io/bootstrap-select/\n\t        */\n\t\n\t        var NAMESPACE = '.dropdown'\n\t        var compiledTemplate = _.template(template)\n\t\n\t        function Dropdown(options) {\n\t            if (options && options.element) {\n\t                if ('select' !== options.element.nodeName.toLowerCase()) {\n\t                    return new CustomDropdown(options)\n\t                }\n\t            }\n\t        }\n\t\n\t        _.extend(Dropdown.prototype, Brix.prototype, {\n\t            options: {\n\t                name: undefined,\n\t                label: undefined,\n\t                value: undefined,\n\t                data: [],\n\t                disabled: undefined,\n\t\n\t                width: undefined, // data-width=\"100\" data-width=\"100px\" data-width=\"100%\"\n\t                className: undefined, // { data-class | data-className | className: ''}\n\t                justify: false, // 两端对齐 data-justify=\"true|false\"\n\t\n\t                searchbox: false, // false | true | keyup | enter\n\t                placeholder: '搜索关键词',\n\t                _searchboxEvent: 'keyup', // keyup | enter\n\t\n\t                popover: false, // true | width\n\t                _popoverWidth: ''\n\t            },\n\t            init: function() {\n\t                this.$element = $(this.element).hide()\n\t                this.$manager = new EventManager('bx-')\n\t\n\t                var options = this.options\n\t\n\t                // 如果没有提供选项 data，则从节点 select 的 option 收集数据\n\t                if (!options.data.length) {\n\t                    options.data = this._parseDataFromSelect(this.$element)\n\t\n\t                } else {\n\t                    // 如果提供了选项 data，则逆向填充节点 select 的 option\n\t                    this._fixFlattenData(this.options.data)\n\t                    this._fillSelect()\n\t                }\n\t\n\t                // 节点是否被禁用\n\t                options.disabled = this.$element.prop('disabled')\n\t\n\t                // 初始化节点 select 的状态\n\t                if (options.value !== undefined) this.$element.val(options.value + '')\n\t\n\t                // 初始化选项 label、value\n\t                var $selectedOption = this.$element.find('option:selected')\n\t                options.label = $.trim($selectedOption.text())\n\t                options.value = $selectedOption.attr('value')\n\t\n\t                // 初始化选项 name\n\t                options.name = this.$element.attr('name')\n\t\n\t                // 解析选项 searchbox\n\t                if (options.searchbox) {\n\t                    if (options.searchbox === true) {\n\t                        options._searchboxEvent = 'keyup'\n\t                    } else {\n\t                        options._searchboxEvent = options.searchbox\n\t                        options.searchbox = true\n\t                    }\n\t                }\n\t\n\t                // 解析选项 popover\n\t                if (options.popover) {\n\t                    if (options.popover !== true) {\n\t                        options._popoverWidth = options.popover\n\t                        options.popover = true\n\t                    }\n\t                }\n\t\n\t                // data-class => data-className\n\t                if (this.options.class) this.options.className = this.options.class\n\t            },\n\t            render: function() {\n\t                this.$relatedElement = $(\n\t                    compiledTemplate(this.options)\n\t                ).insertBefore(this.$element)\n\t\n\t                var width = this.options.width\n\t                if (width) {\n\t                    if (parseInt(width) == width) width += 'px'\n\t                    this.$relatedElement.css({\n\t                        width: width,\n\t                        'min-width': width\n\t                    })\n\t                }\n\t\n\t                // 类样式 data-className\n\t                if (this.options.className) {\n\t                    this.$relatedElement.addClass(this.options.className)\n\t                }\n\t\n\t                // 两端对齐 data-justify\n\t                if (this.options.justify) {\n\t                    this.$relatedElement.addClass('dropdown-justify')\n\t                }\n\t\n\t                this.$manager.delegate(this.$element, this)\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t\n\t                if (this.options.popover) Loader.boot(this.$relatedElement)\n\t\n\t                // this._responsive()\n\t                this._autoHide()\n\t            },\n\t            toggle: function( /*event*/ ) {\n\t                this.$relatedElement.toggleClass('open')\n\t                return this\n\t            },\n\t            show: function() {\n\t                this.$relatedElement.addClass('open')\n\t                return this\n\t            },\n\t            hide: function() {\n\t                this.$relatedElement.removeClass('open')\n\t                return this\n\t            },\n\t            /*\n\t                .val( value )\n\t                .val()\n\t            */\n\t            val: function(value) {\n\t                // this.$element.val()\n\t                var that = this\n\t                var oldValue = function() {\n\t                    var $target = that.$relatedElement.find('ul.dropdown-menu > li.active > a')\n\t                    var oldValue = $target.attr('value')\n\t                    if (oldValue === undefined) oldValue = $.trim($target.text())\n\t                    return oldValue\n\t                }()\n\t\n\t                // .val()\n\t                if (value === undefined) return oldValue\n\t\n\t                // .val( value )\n\t                var data /* { label: '', value: '', selected: true|false } */\n\t                if (_.isObject(value)) data = value\n\t                else _.each(this.options.data, function(item /*, index*/ ) {\n\t                    if (item.children) {\n\t                        _.each(item.children, function(childItem /*, index*/ ) {\n\t                            if (childItem.value == value) data = childItem\n\t                            childItem.selected = childItem.value == value\n\t                        })\n\t                    } else {\n\t                        if (item.value == value) data = item\n\t                        item.selected = item.value == value\n\t                    }\n\t                })\n\t\n\t                // 未知值\n\t                if (!data) return\n\t\n\t                // 更新模拟下拉框的内容\n\t                this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label')\n\t                    .text(data.label)\n\t\n\t                // 更新原生下拉框的值\n\t                this.$element\n\t                    .val(data.value)\n\t\n\t                // 更新模拟下拉框的选中状态\n\t                this.$relatedElement.find('ul.dropdown-menu')\n\t                    .find('li:has([value=\"' + oldValue + '\"])')\n\t                    .removeClass('active')\n\t                    .end()\n\t                    .find('li:has([value=\"' + data.value + '\"])')\n\t                    .addClass('active')\n\t\n\t                // 将 data.value 转换为字符串，是为了避免检测 `1 === '1'` 失败（旧值 oldValue 总是字符串）\n\t                if (('' + data.value) === oldValue) return this\n\t\n\t                // TODO #19 支持 event.preventDefault()\n\t                // 应该先触发 change.dropdown 事件，然后检测事件的默认行为是否被阻止，然后才是改变样式！\n\t\n\t                var event = $.Event('change' + NAMESPACE)\n\t                this.trigger(event, {\n\t                    name: this.options.name,\n\t                    label: data.label,\n\t                    value: data.value\n\t                })\n\t\n\t                this.$element\n\t                    .triggerHandler('change')\n\t\n\t                return this\n\t            },\n\t            data: function(data) {\n\t                // .data()\n\t                if (data === undefined) return this.options.data\n\t\n\t                // .data(data)\n\t                this.options.data = this._fixFlattenData(data)\n\t                this._fillSelect()\n\t\n\t                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n\t                var $newMenu = $(\n\t                    compiledTemplate(this.options)\n\t                ).find('ul.dropdown-menu')\n\t\n\t                $menu.replaceWith($newMenu)\n\t\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t\n\t                if (this.options.popover) Loader.boot(this.$relatedElement)\n\t\n\t                return this\n\t            },\n\t            select: function(event /*, trigger*/ ) {\n\t                var $target = $(event.currentTarget)\n\t                var value = $target.attr('value')\n\t                var label = $.trim($target.text())\n\t                this.val(value !== undefined ? value : label)\n\t                this.toggle()\n\t\n\t                // #8 如果在 change.dropdown 中再次改变值，则会和下面的代码冲突\n\t                // $target.closest('li').addClass('active')\n\t                //     .siblings().removeClass('active')\n\t            },\n\t            search: function(event) {\n\t                if (event.type === 'keyup') {\n\t                    var key = event.keyCode\n\t\n\t                    // 忽略不产生输入的辅助按键\n\t                    //    command            modifiers                   arrows\n\t                    if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return\n\t\n\t                    // 如果选项 searchbox 为 `'enter'`，则只响应 enter 键\n\t                    if (this.options._searchboxEvent === 'enter' && key !== 13) return\n\t                }\n\t\n\t                var seed = $(event.target).val()\n\t                this.trigger('search' + NAMESPACE, seed)\n\t            },\n\t            filter: function(seed, all) {\n\t                // ( event, seed )\n\t                if (seed.type) {\n\t                    seed = all\n\t                    all = false\n\t                }\n\t\n\t                // var $lis = this.$relatedElement.find('ul.dropdown-menu li').hide()\n\t                // $lis.has('> a:contains(\"' + seed + '\")').show() // 显示匹配 text 的选项\n\t\n\t                // 性能优化 #10 https://jsfiddle.net/3z7qyzvv/3/\n\t                // 1. display > .hide/show()\n\t                // 2. .filter() > .has()\n\t                var $lis = this.$relatedElement.find('ul.dropdown-menu li')\n\t                if (!seed) {\n\t                    $lis.css('display', 'list-item')\n\t                } else {\n\t                    $lis.css('display', 'none')\n\t                    $lis.filter(':contains(\"' + seed + '\")').show()\n\t                        .css('display', 'list-item')\n\t                }\n\t\n\t                if (all) $lis.has('> a[value*=\"' + seed + '\"]').show() // 显示匹配 value 的选项\n\t            },\n\t            disabled: function(disabled) {\n\t                // .disabled()\n\t                if (disabled === undefined) return this.options.disabled\n\t\n\t                // .disabled( true | false )\n\t                this.options.disabled = disabled\n\t                this.$element.prop('disabled', disabled)\n\t                this.$relatedElement[disabled ? 'addClass' : 'removeClass']('disabled')\n\t                return this\n\t            },\n\t            _parseDataFromSelect: function($select) {\n\t                var children = _.filter($select.children(), function(child /*, index*/ ) {\n\t                    // <optgroup> <option>\n\t                    return /optgroup|option/i.test(child.nodeName)\n\t                })\n\t                return _.map(children, function(child /*, index*/ ) {\n\t                    var $child = $(child)\n\t                    return /optgroup/i.test(child.nodeName) ? {\n\t                        label: $child.attr('label'),\n\t                        children: _parseOptions($child.children())\n\t                    } : _parseOption(child)\n\t                })\n\t\n\t                function _parseOptions(options) {\n\t                    return _.map(options, function(option /*, index*/ ) {\n\t                        return _parseOption(option)\n\t                    })\n\t                }\n\t\n\t                function _parseOption(option) {\n\t                    var $option = $(option)\n\t                    return $option.hasClass('divider') ? 'divider' : {\n\t                        label: $.trim($option.text()),\n\t                        value: $option.attr('value'),\n\t                        selected: $option.prop('selected')\n\t                    }\n\t                }\n\t            },\n\t            _fixFlattenData: function(data) {\n\t                return _.map(data, function(item, index, context) {\n\t                    return (context[index] = _.isObject(item) ? item : {\n\t                        label: item,\n\t                        value: item\n\t                    })\n\t                })\n\t            },\n\t            _fillSelect: function() {\n\t                var $select = this.$element.empty()\n\t                _.each(this.options.data, function(item) {\n\t                    if (item.children && item.children.length) {\n\t                        var $optgroup = $('<optgroup>').attr('label', item.label)\n\t                        _.each(item.children, function(item /*, index*/ ) {\n\t                            _genOption(item).appendTo($optgroup)\n\t                        })\n\t                        $optgroup.appendTo($select)\n\t\n\t                    } else {\n\t                        _genOption(item).appendTo($select)\n\t                    }\n\t                })\n\t\n\t                function _genOption(item) {\n\t                    // item { label: '', value: '', selected: true|false }\n\t                    return $('<option>')\n\t                        .attr('value', item.value)\n\t                        .prop('selected', item.selected)\n\t                        .text(item.label)\n\t                }\n\t            },\n\t            _responsive: function() {\n\t                var $window = $(window)\n\t                var $relatedElement = this.$relatedElement\n\t                var $menu = $relatedElement.find('ul.dropdown-menu')\n\t                $(window).on('scroll', function() {\n\t                    var offset = $relatedElement.offset()\n\t                    var top = offset.top - $window.scrollTop()\n\t                    var button = $window.scrollTop() + $window.height() - offset.top - $relatedElement.outerHeight()\n\t                    var placement = button >= top ? 'button' : 'top'\n\t                    switch (placement) {\n\t                        case 'button':\n\t                            $menu.css('max-height', top - 10)\n\t                            break\n\t                        case 'top':\n\t                            $menu.css('max-height', button - 10)\n\t                            break\n\t                    }\n\t                })\n\t            },\n\t            _autoHide: function() {\n\t                var that = this\n\t                var type = 'click.dropdown_autohide_' + this.clientId\n\t                $(document.body).off(type)\n\t                    .on(type, function(event) {\n\t                        if (that.$relatedElement.has(event.target).length) return\n\t                        that.hide()\n\t                    })\n\t            },\n\t            destroy: function() {\n\t                this.$manager.undelegate(this.$element)\n\t                this.$manager.undelegate(this.$relatedElement)\n\t\n\t                this.$relatedElement.remove()\n\t\n\t                var type = 'click.dropdown_autohide_' + this.clientId\n\t                $(document.body).off(type)\n\t            }\n\t        })\n\t\n\t        /*\n\t            非 Select Dropdown\n\t        */\n\t\n\t        function CustomDropdown() {}\n\t\n\t        _.extend(CustomDropdown.prototype, Dropdown.prototype, {\n\t            init: function() {\n\t                this.$element = $(this.element)\n\t                this.$relatedElement = this.$element\n\t                this.$manager = new EventManager('bx-')\n\t\n\t                this._fixFlattenData(this.options.data)\n\t\n\t                // 初始化选项 name\n\t                this.options.name = this.$element.attr('name')\n\t            },\n\t            render: function() {\n\t                if (this.options.value !== undefined) this.val(this.options.value)\n\t\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t\n\t                // this._responsive()\n\t                this._autoHide()\n\t            },\n\t            val: function(value) {\n\t                var that = this\n\t                var oldValue = function() {\n\t                    var $target = that.$element.find('ul.dropdown-menu > li.active > a')\n\t                    var oldValue = $target.attr('value')\n\t                    if (oldValue === undefined) oldValue = $.trim($target.text())\n\t                    return oldValue\n\t                }()\n\t\n\t                // .val()\n\t                if (value === undefined) return oldValue\n\t\n\t                // .val( value )\n\t                var data /* { label: '', value: '', selected: true|false } */\n\t                if (_.isObject(value)) data = value\n\t                else _.each(that.$element.find('ul.dropdown-menu > li'), function(item /*, index*/ ) {\n\t                    var $item = $(item)\n\t                    var $target = $item.find('> a')\n\t                    var targetValue = $target.attr('value')\n\t                    var targetText = $.trim($target.text())\n\t                    if (\n\t                        (targetValue !== undefined && targetValue == value) ||\n\t                        (targetValue === undefined && targetText == value)\n\t                    ) {\n\t                        data = {\n\t                            name: that.options.name,\n\t                            label: targetText,\n\t                            value: targetValue !== undefined ? targetValue : targetText\n\t                        }\n\t                    }\n\t                })\n\t\n\t                // 未知值\n\t                if (!data) return\n\t\n\t                // 更新模拟下拉框的内容（先更新了再比较值是否有变化，因为此时渲染的内容可能是错误的！）\n\t                this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label')\n\t                    .text(data.label)\n\t\n\t                // 将 data.value 转换为字符串，是为了避免检测 `1 === '1'` 失败（旧值 oldValue 总是字符串）\n\t                if (('' + data.value) === oldValue) return this\n\t\n\t                // 更新模拟下拉框的选中状态\n\t                this.$relatedElement.find('ul.dropdown-menu')\n\t                    .find('li:has([value=\"' + oldValue + '\"])')\n\t                    .removeClass('active')\n\t                    .end()\n\t                    .find('li:has([value=\"' + data.value + '\"])')\n\t                    .addClass('active')\n\t\n\t                this.trigger('change' + NAMESPACE, data)\n\t\n\t                return this\n\t            },\n\t            data: function(data) {\n\t                // .data()\n\t                if (data === undefined) return this.options.data\n\t\n\t                // .data(data)\n\t                this.options.data = this._fixFlattenData(data)\n\t\n\t                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n\t                var $newMenu = $(\n\t                    compiledTemplate(this.options)\n\t                ).find('ul.dropdown-menu')\n\t\n\t                $menu.replaceWith($newMenu)\n\t\n\t                this.$manager.delegate(this.$relatedElement, this)\n\t\n\t                return this\n\t            }\n\t        })\n\t\n\t        return Dropdown\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<div class=\\\"dropdown <%= disabled ? 'disabled' : '' %> <%= searchbox ? 'dropdown-searchbox' : '' %> <%= popover ? 'dropdown-popover dropdown-ellipsis' : '' %>\\\">\\n\" +\n\t        \"    <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" value=\\\"<%= value %>\\\" bx-click=\\\"toggle()\\\">\\n\" +\n\t        \"        <span class=\\\"dropdown-toggle-label\\\"><%= label %></span>\\n\" +\n\t        \"        <!-- <span class=\\\"caret\\\"> -->\\n\" +\n\t        \"        <span class=\\\"caret_custom caret_brixfont\\\"><!-- 保留 caret_brixfont 是为了向后兼容，在下个版本中移除  -->\\n\" +\n\t        \"            <span class=\\\"brixfont down\\\">&#xe623;</span><!-- 向下 &#xe623; -->\\n\" +\n\t        \"            <span class=\\\"brixfont up\\\">&#xe62e;</span><!-- 向上 &#xe62e;-->\\n\" +\n\t        \"        </span>\\n\" +\n\t        \"    </button>\\n\" +\n\t        \"    <div class=\\\"dropdown-menu-wrapper\\\">\\n\" +\n\t        \"        <% if (searchbox) { %>\\n\" +\n\t        \"        <div class=\\\"searchbox\\\">\\n\" +\n\t        \"            <label>\\n\" +\n\t        \"                <span class=\\\"brixfont\\\">&#xe61c;</span>\\n\" +\n\t        \"                <input bx-keyup=\\\"search()\\\" type=\\\"text\\\" placeholder=\\\"<%= placeholder %>\\\">\\n\" +\n\t        \"            </label>\\n\" +\n\t        \"        </div>\\n\" +\n\t        \"        <% } %>\\n\" +\n\t        \"        <ul class=\\\"dropdown-menu\\\">\\n\" +\n\t        \"            <% for(var i = 0, item; item = data[i]; i++ ) { %>\\n\" +\n\t        \"                <% if(item.children) { %>\\n\" +\n\t        \"                    <li class=\\\"dropdown-header\\\"><%=item.label%></li>\\n\" +\n\t        \"                    <% for(var ii = 0; ii < item.children.length; ii++ ) { %>\\n\" +\n\t        \"                        <li class=\\\"<%= item.children[ii].value == value ? 'active' : ''%>\\\">\\n\" +\n\t        \"                            <% if (popover) { %>\\n\" +\n\t        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.children[ii].value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n\t        \"                                bx-name=\\\"components/popover\\\"\\n\" +\n\t        \"                                data-content=\\\"<%= item.children[ii].label %>\\\" \\n\" +\n\t        \"                                data-width=\\\"<%= _popoverWidth %>\\\">\\n\" +\n\t        \"                                <span><%= item.children[ii].label %></span>\\n\" +\n\t        \"                            </a>\\n\" +\n\t        \"                            <% } else { %>\\n\" +\n\t        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.children[ii].value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n\t        \"                                title=\\\"<%= item.children[ii].label %>\\\">\\n\" +\n\t        \"                                <span><%= item.children[ii].label %></span>\\n\" +\n\t        \"                            </a>\\n\" +\n\t        \"                            <% } %>    \\n\" +\n\t        \"                        </li>\\n\" +\n\t        \"                    <% } %>\\n\" +\n\t        \"                <% } else { %>\\n\" +\n\t        \"                    <% if (item === 'divider') { %>\\n\" +\n\t        \"                        <li class=\\\"divider\\\"></li>\\n\" +\n\t        \"                    <% } else { %>\\n\" +\n\t        \"                        <li class=\\\"<%= item.value == value ? 'active' : ''%>\\\">\\n\" +\n\t        \"                            <% if (popover) { %>\\n\" +\n\t        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n\t        \"                                bx-name=\\\"components/popover\\\"\\n\" +\n\t        \"                                data-content=\\\"<%= item.label %>\\\" \\n\" +\n\t        \"                                data-width=\\\"<%= _popoverWidth %>\\\">\\n\" +\n\t        \"                                <span><%= item.label %></span>\\n\" +\n\t        \"                            </a>\\n\" +\n\t        \"                            <% } else { %>\\n\" +\n\t        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n\t        \"                                title=\\\"<%= item.label %>\\\">\\n\" +\n\t        \"                                <span><%= item.label %></span>\\n\" +\n\t        \"                            </a>\\n\" +\n\t        \"                            <% } %>    \\n\" +\n\t        \"                        </li>\\n\" +\n\t        \"                    <% }  %>\\n\" +\n\t        \"                <% } %>\\n\" +\n\t        \"            <% } %>\\n\" +\n\t        \"        </ul>\\n\" +\n\t        \"    </div>\\n\" +\n\t        \"</div>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** components/dropdown.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ff9c326c3bd56baffde8\n **/","module.exports = require('./dropdown')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dropdown/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/* global define, window, document */\n/*\n    http://getbootstrap.com/components/#dropdowns\n    http://silviomoreto.github.io/bootstrap-select/\n */\ndefine(\n    [\n        'jquery', 'underscore',\n        'brix/loader', 'components/base', 'brix/event',\n        './dropdown.tpl.js'\n    ],\n    function(\n        $, _,\n        Loader, Brix, EventManager,\n        template\n    ) {\n        /*\n            # Dropdown\n\n            下拉框组件。\n\n            ### 数据\n                [\n                    value,\n                    ...\n                ]\n                或者\n                [\n                    {\n                        label: '',\n                        value: '',\n                        selected: true|false\n                    },\n                    ...\n                ]\n                或者\n                [\n                    {\n                        label: '',\n                        children: [\n                            [\n                                {\n                                    label: '',\n                                    value: '',\n                                    selected: true|false\n                                },\n                                ...\n                            ]\n                        ]\n                    },\n                    ...\n                ]\n            ### 选项\n                公共选项：data template\n\n            ### 属性\n                公共属性：element moduleId clientId parentClientId childClientIds data template\n                selectedIndex   当前选中的下标。\n                label            选中条目的文本。\n                value           选中条目的值。\n                select          指向关联的 <select> 节点\n\n            ### 方法\n                select( label|value )\n                toggle()\n                focus()\n                blue()\n\n            ### 事件\n                公共事件：ready destroyed\n                change\n\n            ### 示例\n\n            <select>\n                <option value =\"volvo\">Volvo</option>\n                <option value =\"saab\">Saab</option>\n                <option value =\"mercedes\">Mercedes</option>\n                <option value =\"audi\">Audi</option>\n            </select>\n            <select>\n                <optgroup label=\"Swedish Cars\">\n                    <option value =\"volvo\">Volvo</option>\n                    <option value =\"saab\">Saab</option>\n                </optgroup>\n                <optgroup label=\"German Cars\">\n                    <option value =\"mercedes\">Mercedes</option>\n                    <option value =\"audi\">Audi</option>\n                </optgroup>\n            </select>\n\n            TODO\n                multiple disabled\n                responsive http://silviomoreto.github.io/bootstrap-select/\n        */\n\n        var NAMESPACE = '.dropdown'\n        var compiledTemplate = _.template(template)\n\n        function Dropdown(options) {\n            if (options && options.element) {\n                if ('select' !== options.element.nodeName.toLowerCase()) {\n                    return new CustomDropdown(options)\n                }\n            }\n        }\n\n        _.extend(Dropdown.prototype, Brix.prototype, {\n            options: {\n                name: undefined,\n                label: undefined,\n                value: undefined,\n                data: [],\n                disabled: undefined,\n\n                width: undefined, // data-width=\"100\" data-width=\"100px\" data-width=\"100%\"\n                className: undefined, // { data-class | data-className | className: ''}\n                justify: false, // 两端对齐 data-justify=\"true|false\"\n\n                searchbox: false, // false | true | keyup | enter\n                placeholder: '搜索关键词',\n                _searchboxEvent: 'keyup', // keyup | enter\n\n                popover: false, // true | width\n                _popoverWidth: ''\n            },\n            init: function() {\n                this.$element = $(this.element).hide()\n                this.$manager = new EventManager('bx-')\n\n                var options = this.options\n\n                // 如果没有提供选项 data，则从节点 select 的 option 收集数据\n                if (!options.data.length) {\n                    options.data = this._parseDataFromSelect(this.$element)\n\n                } else {\n                    // 如果提供了选项 data，则逆向填充节点 select 的 option\n                    this._fixFlattenData(this.options.data)\n                    this._fillSelect()\n                }\n\n                // 节点是否被禁用\n                options.disabled = this.$element.prop('disabled')\n\n                // 初始化节点 select 的状态\n                if (options.value !== undefined) this.$element.val(options.value + '')\n\n                // 初始化选项 label、value\n                var $selectedOption = this.$element.find('option:selected')\n                options.label = $.trim($selectedOption.text())\n                options.value = $selectedOption.attr('value')\n\n                // 初始化选项 name\n                options.name = this.$element.attr('name')\n\n                // 解析选项 searchbox\n                if (options.searchbox) {\n                    if (options.searchbox === true) {\n                        options._searchboxEvent = 'keyup'\n                    } else {\n                        options._searchboxEvent = options.searchbox\n                        options.searchbox = true\n                    }\n                }\n\n                // 解析选项 popover\n                if (options.popover) {\n                    if (options.popover !== true) {\n                        options._popoverWidth = options.popover\n                        options.popover = true\n                    }\n                }\n\n                // data-class => data-className\n                if (this.options.class) this.options.className = this.options.class\n            },\n            render: function() {\n                this.$relatedElement = $(\n                    compiledTemplate(this.options)\n                ).insertBefore(this.$element)\n\n                var width = this.options.width\n                if (width) {\n                    if (parseInt(width) == width) width += 'px'\n                    this.$relatedElement.css({\n                        width: width,\n                        'min-width': width\n                    })\n                }\n\n                // 类样式 data-className\n                if (this.options.className) {\n                    this.$relatedElement.addClass(this.options.className)\n                }\n\n                // 两端对齐 data-justify\n                if (this.options.justify) {\n                    this.$relatedElement.addClass('dropdown-justify')\n                }\n\n                this.$manager.delegate(this.$element, this)\n                this.$manager.delegate(this.$relatedElement, this)\n\n                if (this.options.popover) Loader.boot(this.$relatedElement)\n\n                // this._responsive()\n                this._autoHide()\n            },\n            toggle: function( /*event*/ ) {\n                this.$relatedElement.toggleClass('open')\n                return this\n            },\n            show: function() {\n                this.$relatedElement.addClass('open')\n                return this\n            },\n            hide: function() {\n                this.$relatedElement.removeClass('open')\n                return this\n            },\n            /*\n                .val( value )\n                .val()\n            */\n            val: function(value) {\n                // this.$element.val()\n                var that = this\n                var oldValue = function() {\n                    var $target = that.$relatedElement.find('ul.dropdown-menu > li.active > a')\n                    var oldValue = $target.attr('value')\n                    if (oldValue === undefined) oldValue = $.trim($target.text())\n                    return oldValue\n                }()\n\n                // .val()\n                if (value === undefined) return oldValue\n\n                // .val( value )\n                var data /* { label: '', value: '', selected: true|false } */\n                if (_.isObject(value)) data = value\n                else _.each(this.options.data, function(item /*, index*/ ) {\n                    if (item.children) {\n                        _.each(item.children, function(childItem /*, index*/ ) {\n                            if (childItem.value == value) data = childItem\n                            childItem.selected = childItem.value == value\n                        })\n                    } else {\n                        if (item.value == value) data = item\n                        item.selected = item.value == value\n                    }\n                })\n\n                // 未知值\n                if (!data) return\n\n                // 更新模拟下拉框的内容\n                this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label')\n                    .text(data.label)\n\n                // 更新原生下拉框的值\n                this.$element\n                    .val(data.value)\n\n                // 更新模拟下拉框的选中状态\n                this.$relatedElement.find('ul.dropdown-menu')\n                    .find('li:has([value=\"' + oldValue + '\"])')\n                    .removeClass('active')\n                    .end()\n                    .find('li:has([value=\"' + data.value + '\"])')\n                    .addClass('active')\n\n                // 将 data.value 转换为字符串，是为了避免检测 `1 === '1'` 失败（旧值 oldValue 总是字符串）\n                if (('' + data.value) === oldValue) return this\n\n                // TODO #19 支持 event.preventDefault()\n                // 应该先触发 change.dropdown 事件，然后检测事件的默认行为是否被阻止，然后才是改变样式！\n\n                var event = $.Event('change' + NAMESPACE)\n                this.trigger(event, {\n                    name: this.options.name,\n                    label: data.label,\n                    value: data.value\n                })\n\n                this.$element\n                    .triggerHandler('change')\n\n                return this\n            },\n            data: function(data) {\n                // .data()\n                if (data === undefined) return this.options.data\n\n                // .data(data)\n                this.options.data = this._fixFlattenData(data)\n                this._fillSelect()\n\n                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n                var $newMenu = $(\n                    compiledTemplate(this.options)\n                ).find('ul.dropdown-menu')\n\n                $menu.replaceWith($newMenu)\n\n                this.$manager.delegate(this.$relatedElement, this)\n\n                if (this.options.popover) Loader.boot(this.$relatedElement)\n\n                return this\n            },\n            select: function(event /*, trigger*/ ) {\n                var $target = $(event.currentTarget)\n                var value = $target.attr('value')\n                var label = $.trim($target.text())\n                this.val(value !== undefined ? value : label)\n                this.toggle()\n\n                // #8 如果在 change.dropdown 中再次改变值，则会和下面的代码冲突\n                // $target.closest('li').addClass('active')\n                //     .siblings().removeClass('active')\n            },\n            search: function(event) {\n                if (event.type === 'keyup') {\n                    var key = event.keyCode\n\n                    // 忽略不产生输入的辅助按键\n                    //    command            modifiers                   arrows\n                    if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return\n\n                    // 如果选项 searchbox 为 `'enter'`，则只响应 enter 键\n                    if (this.options._searchboxEvent === 'enter' && key !== 13) return\n                }\n\n                var seed = $(event.target).val()\n                this.trigger('search' + NAMESPACE, seed)\n            },\n            filter: function(seed, all) {\n                // ( event, seed )\n                if (seed.type) {\n                    seed = all\n                    all = false\n                }\n\n                // var $lis = this.$relatedElement.find('ul.dropdown-menu li').hide()\n                // $lis.has('> a:contains(\"' + seed + '\")').show() // 显示匹配 text 的选项\n\n                // 性能优化 #10 https://jsfiddle.net/3z7qyzvv/3/\n                // 1. display > .hide/show()\n                // 2. .filter() > .has()\n                var $lis = this.$relatedElement.find('ul.dropdown-menu li')\n                if (!seed) {\n                    $lis.css('display', 'list-item')\n                } else {\n                    $lis.css('display', 'none')\n                    $lis.filter(':contains(\"' + seed + '\")').show()\n                        .css('display', 'list-item')\n                }\n\n                if (all) $lis.has('> a[value*=\"' + seed + '\"]').show() // 显示匹配 value 的选项\n            },\n            disabled: function(disabled) {\n                // .disabled()\n                if (disabled === undefined) return this.options.disabled\n\n                // .disabled( true | false )\n                this.options.disabled = disabled\n                this.$element.prop('disabled', disabled)\n                this.$relatedElement[disabled ? 'addClass' : 'removeClass']('disabled')\n                return this\n            },\n            _parseDataFromSelect: function($select) {\n                var children = _.filter($select.children(), function(child /*, index*/ ) {\n                    // <optgroup> <option>\n                    return /optgroup|option/i.test(child.nodeName)\n                })\n                return _.map(children, function(child /*, index*/ ) {\n                    var $child = $(child)\n                    return /optgroup/i.test(child.nodeName) ? {\n                        label: $child.attr('label'),\n                        children: _parseOptions($child.children())\n                    } : _parseOption(child)\n                })\n\n                function _parseOptions(options) {\n                    return _.map(options, function(option /*, index*/ ) {\n                        return _parseOption(option)\n                    })\n                }\n\n                function _parseOption(option) {\n                    var $option = $(option)\n                    return $option.hasClass('divider') ? 'divider' : {\n                        label: $.trim($option.text()),\n                        value: $option.attr('value'),\n                        selected: $option.prop('selected')\n                    }\n                }\n            },\n            _fixFlattenData: function(data) {\n                return _.map(data, function(item, index, context) {\n                    return (context[index] = _.isObject(item) ? item : {\n                        label: item,\n                        value: item\n                    })\n                })\n            },\n            _fillSelect: function() {\n                var $select = this.$element.empty()\n                _.each(this.options.data, function(item) {\n                    if (item.children && item.children.length) {\n                        var $optgroup = $('<optgroup>').attr('label', item.label)\n                        _.each(item.children, function(item /*, index*/ ) {\n                            _genOption(item).appendTo($optgroup)\n                        })\n                        $optgroup.appendTo($select)\n\n                    } else {\n                        _genOption(item).appendTo($select)\n                    }\n                })\n\n                function _genOption(item) {\n                    // item { label: '', value: '', selected: true|false }\n                    return $('<option>')\n                        .attr('value', item.value)\n                        .prop('selected', item.selected)\n                        .text(item.label)\n                }\n            },\n            _responsive: function() {\n                var $window = $(window)\n                var $relatedElement = this.$relatedElement\n                var $menu = $relatedElement.find('ul.dropdown-menu')\n                $(window).on('scroll', function() {\n                    var offset = $relatedElement.offset()\n                    var top = offset.top - $window.scrollTop()\n                    var button = $window.scrollTop() + $window.height() - offset.top - $relatedElement.outerHeight()\n                    var placement = button >= top ? 'button' : 'top'\n                    switch (placement) {\n                        case 'button':\n                            $menu.css('max-height', top - 10)\n                            break\n                        case 'top':\n                            $menu.css('max-height', button - 10)\n                            break\n                    }\n                })\n            },\n            _autoHide: function() {\n                var that = this\n                var type = 'click.dropdown_autohide_' + this.clientId\n                $(document.body).off(type)\n                    .on(type, function(event) {\n                        if (that.$relatedElement.has(event.target).length) return\n                        that.hide()\n                    })\n            },\n            destroy: function() {\n                this.$manager.undelegate(this.$element)\n                this.$manager.undelegate(this.$relatedElement)\n\n                this.$relatedElement.remove()\n\n                var type = 'click.dropdown_autohide_' + this.clientId\n                $(document.body).off(type)\n            }\n        })\n\n        /*\n            非 Select Dropdown\n        */\n\n        function CustomDropdown() {}\n\n        _.extend(CustomDropdown.prototype, Dropdown.prototype, {\n            init: function() {\n                this.$element = $(this.element)\n                this.$relatedElement = this.$element\n                this.$manager = new EventManager('bx-')\n\n                this._fixFlattenData(this.options.data)\n\n                // 初始化选项 name\n                this.options.name = this.$element.attr('name')\n            },\n            render: function() {\n                if (this.options.value !== undefined) this.val(this.options.value)\n\n                this.$manager.delegate(this.$relatedElement, this)\n\n                // this._responsive()\n                this._autoHide()\n            },\n            val: function(value) {\n                var that = this\n                var oldValue = function() {\n                    var $target = that.$element.find('ul.dropdown-menu > li.active > a')\n                    var oldValue = $target.attr('value')\n                    if (oldValue === undefined) oldValue = $.trim($target.text())\n                    return oldValue\n                }()\n\n                // .val()\n                if (value === undefined) return oldValue\n\n                // .val( value )\n                var data /* { label: '', value: '', selected: true|false } */\n                if (_.isObject(value)) data = value\n                else _.each(that.$element.find('ul.dropdown-menu > li'), function(item /*, index*/ ) {\n                    var $item = $(item)\n                    var $target = $item.find('> a')\n                    var targetValue = $target.attr('value')\n                    var targetText = $.trim($target.text())\n                    if (\n                        (targetValue !== undefined && targetValue == value) ||\n                        (targetValue === undefined && targetText == value)\n                    ) {\n                        data = {\n                            name: that.options.name,\n                            label: targetText,\n                            value: targetValue !== undefined ? targetValue : targetText\n                        }\n                    }\n                })\n\n                // 未知值\n                if (!data) return\n\n                // 更新模拟下拉框的内容（先更新了再比较值是否有变化，因为此时渲染的内容可能是错误的！）\n                this.$relatedElement.find('button.dropdown-toggle > span.dropdown-toggle-label')\n                    .text(data.label)\n\n                // 将 data.value 转换为字符串，是为了避免检测 `1 === '1'` 失败（旧值 oldValue 总是字符串）\n                if (('' + data.value) === oldValue) return this\n\n                // 更新模拟下拉框的选中状态\n                this.$relatedElement.find('ul.dropdown-menu')\n                    .find('li:has([value=\"' + oldValue + '\"])')\n                    .removeClass('active')\n                    .end()\n                    .find('li:has([value=\"' + data.value + '\"])')\n                    .addClass('active')\n\n                this.trigger('change' + NAMESPACE, data)\n\n                return this\n            },\n            data: function(data) {\n                // .data()\n                if (data === undefined) return this.options.data\n\n                // .data(data)\n                this.options.data = this._fixFlattenData(data)\n\n                var $menu = this.$relatedElement.find('ul.dropdown-menu')\n                var $newMenu = $(\n                    compiledTemplate(this.options)\n                ).find('ul.dropdown-menu')\n\n                $menu.replaceWith($newMenu)\n\n                this.$manager.delegate(this.$relatedElement, this)\n\n                return this\n            }\n        })\n\n        return Dropdown\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dropdown/dropdown.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/loader\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"components/base\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/event\"\n ** module id = 6\n ** module chunks = 0\n **/","/* global define */\ndefine(function() {\n    return \"<div class=\\\"dropdown <%= disabled ? 'disabled' : '' %> <%= searchbox ? 'dropdown-searchbox' : '' %> <%= popover ? 'dropdown-popover dropdown-ellipsis' : '' %>\\\">\\n\" +\n        \"    <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" value=\\\"<%= value %>\\\" bx-click=\\\"toggle()\\\">\\n\" +\n        \"        <span class=\\\"dropdown-toggle-label\\\"><%= label %></span>\\n\" +\n        \"        <!-- <span class=\\\"caret\\\"> -->\\n\" +\n        \"        <span class=\\\"caret_custom caret_brixfont\\\"><!-- 保留 caret_brixfont 是为了向后兼容，在下个版本中移除  -->\\n\" +\n        \"            <span class=\\\"brixfont down\\\">&#xe623;</span><!-- 向下 &#xe623; -->\\n\" +\n        \"            <span class=\\\"brixfont up\\\">&#xe62e;</span><!-- 向上 &#xe62e;-->\\n\" +\n        \"        </span>\\n\" +\n        \"    </button>\\n\" +\n        \"    <div class=\\\"dropdown-menu-wrapper\\\">\\n\" +\n        \"        <% if (searchbox) { %>\\n\" +\n        \"        <div class=\\\"searchbox\\\">\\n\" +\n        \"            <label>\\n\" +\n        \"                <span class=\\\"brixfont\\\">&#xe61c;</span>\\n\" +\n        \"                <input bx-keyup=\\\"search()\\\" type=\\\"text\\\" placeholder=\\\"<%= placeholder %>\\\">\\n\" +\n        \"            </label>\\n\" +\n        \"        </div>\\n\" +\n        \"        <% } %>\\n\" +\n        \"        <ul class=\\\"dropdown-menu\\\">\\n\" +\n        \"            <% for(var i = 0, item; item = data[i]; i++ ) { %>\\n\" +\n        \"                <% if(item.children) { %>\\n\" +\n        \"                    <li class=\\\"dropdown-header\\\"><%=item.label%></li>\\n\" +\n        \"                    <% for(var ii = 0; ii < item.children.length; ii++ ) { %>\\n\" +\n        \"                        <li class=\\\"<%= item.children[ii].value == value ? 'active' : ''%>\\\">\\n\" +\n        \"                            <% if (popover) { %>\\n\" +\n        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.children[ii].value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n        \"                                bx-name=\\\"components/popover\\\"\\n\" +\n        \"                                data-content=\\\"<%= item.children[ii].label %>\\\" \\n\" +\n        \"                                data-width=\\\"<%= _popoverWidth %>\\\">\\n\" +\n        \"                                <span><%= item.children[ii].label %></span>\\n\" +\n        \"                            </a>\\n\" +\n        \"                            <% } else { %>\\n\" +\n        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.children[ii].value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n        \"                                title=\\\"<%= item.children[ii].label %>\\\">\\n\" +\n        \"                                <span><%= item.children[ii].label %></span>\\n\" +\n        \"                            </a>\\n\" +\n        \"                            <% } %>    \\n\" +\n        \"                        </li>\\n\" +\n        \"                    <% } %>\\n\" +\n        \"                <% } else { %>\\n\" +\n        \"                    <% if (item === 'divider') { %>\\n\" +\n        \"                        <li class=\\\"divider\\\"></li>\\n\" +\n        \"                    <% } else { %>\\n\" +\n        \"                        <li class=\\\"<%= item.value == value ? 'active' : ''%>\\\">\\n\" +\n        \"                            <% if (popover) { %>\\n\" +\n        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n        \"                                bx-name=\\\"components/popover\\\"\\n\" +\n        \"                                data-content=\\\"<%= item.label %>\\\" \\n\" +\n        \"                                data-width=\\\"<%= _popoverWidth %>\\\">\\n\" +\n        \"                                <span><%= item.label %></span>\\n\" +\n        \"                            </a>\\n\" +\n        \"                            <% } else { %>\\n\" +\n        \"                            <a href=\\\"javascript:;\\\" value=\\\"<%= item.value %>\\\" bx-click=\\\"select()\\\"\\n\" +\n        \"                                title=\\\"<%= item.label %>\\\">\\n\" +\n        \"                                <span><%= item.label %></span>\\n\" +\n        \"                            </a>\\n\" +\n        \"                            <% } %>    \\n\" +\n        \"                        </li>\\n\" +\n        \"                    <% }  %>\\n\" +\n        \"                <% } %>\\n\" +\n        \"            <% } %>\\n\" +\n        \"        </ul>\\n\" +\n        \"    </div>\\n\" +\n        \"</div>\"\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dropdown/dropdown.tpl.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/popover.js","webpack:///webpack/bootstrap 327e07088deecc662bbb","webpack:///./src/popover/index.js","webpack:///./src/popover/popover.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"brix/base\"","webpack:///./src/dialog/position.js","webpack:///./src/popover/popover.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","Brix","position","template","Popover","getArrowPosition","trigger","overlay","placement","align","left","top","$trigger","triggerOffset","offset","triggerLeft","triggerTop","triggerWidth","outerWidth","triggerHeight","outerHeight","$overlay","show","overlayWidth","overlayHeight","$arrow","find","arrowWidth","arrowHeight","tb","test","lr","extend","prototype","options","width","title","content","delay","init","css","window","render","that","$element","element","$relatedElement","insertAfter","hover","hide","clearTimeout","_timer","max-width","relatedMarginLeft","parseInt","relatedMarginTop","is","setTimeout","undefined","html","destroy","off","remove","apply","length","center","visible","leftDiff","topDiff","RE_TOP_OR_BOTTOM","RE_LEFT_OR_RIGHT","height","parseFloat","$window","windowWidth","windowHeight","scrollLeft","scrollTop","start","result","opacity","end"],"mappings":"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","file":"components/popover.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"brix/base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/popover\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/base\"));\n\telse\n\t\troot[\"components/popover\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"brix/base\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"brix/base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/popover\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/base\"));\n\telse\n\t\troot[\"components/popover\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"brix/base\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define          */\n\t/* global setTimeout      */\n\t/* global clearTimeout    */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3),\n\t        __webpack_require__(4),\n\t        __webpack_require__(5),\n\t        __webpack_require__(6)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _,\n\t        Brix,\n\t        position,\n\t        template\n\t    ) {\n\t        /*\n\t            ### 数据\n\t                {}\n\t            ### 选项\n\t                data template\n\t            ### 属性\n\t                element moduleId clientId parentClientId childClientIds data template\n\t            ### 方法\n\t                .render()\n\t            ### 事件\n\t                ready destroyed\n\t        */\n\t        function Popover() {}\n\t\n\t        _.extend(Popover.prototype, Brix.prototype, {\n\t            options: {\n\t                placement: 'right', // top bottom left right\n\t                align: '', // left right top bottom\n\t                offset: {},\n\t                width: 'auto',\n\t\n\t                title: '',\n\t                content: '',\n\t\n\t                delay: 100\n\t            },\n\t            init: function() {\n\t                // 支持自定义 CSS 样式\n\t                if (this.options.css) window.require(['css!' + this.options.css])\n\t            },\n\t            render: function() {\n\t                var that = this\n\t                this.$element = $(this.element)\n\t                this.$relatedElement = $(\n\t                    // 支持自定义 HTML 模板 template\n\t                    _.template(this.options.template || template)(this.options)\n\t                ).insertAfter(this.$element)\n\t\n\t                this.$element.hover(function( /*event*/ ) {\n\t                    that.show()\n\t                }, function( /*event*/ ) {\n\t                    that.hide()\n\t                })\n\t\n\t                that.$relatedElement.hover(function( /*event*/ ) {\n\t                    clearTimeout(that._timer)\n\t                }, function( /*event*/ ) {\n\t                    clearTimeout(that._timer)\n\t                    that.$relatedElement.hide()\n\t                })\n\t            },\n\t            show: function() {\n\t                clearTimeout(this._timer)\n\t                this.$relatedElement.show().css({\n\t                    width: this.options.width,\n\t                    'max-width': this.options.width // 覆盖 bootstrap overlay 的 max-width\n\t                })\n\t                var offset = position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n\t                var relatedMarginLeft = parseInt(this.$relatedElement.css('margin-left'), 10) || 0\n\t                var relatedMarginTop = parseInt(this.$relatedElement.css('margin-top'), 10) || 0\n\t                this.$relatedElement.offset({\n\t                    left: offset.left + relatedMarginLeft + (this.options.offset.left || 0),\n\t                    top: offset.top + relatedMarginTop + (this.options.offset.top || 0)\n\t                })\n\t                if (this.options.align) {\n\t                    var $arrow = this.$relatedElement.find('.arrow')\n\t                    if ($arrow.is(':visible')) {\n\t                        $arrow.offset(\n\t                            getArrowPosition(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n\t                        )\n\t                    }\n\t                }\n\t            },\n\t            hide: function() {\n\t                var that = this\n\t                clearTimeout(this._timer)\n\t                this._timer = setTimeout(function() {\n\t                    that.$relatedElement.hide()\n\t                }, this.options.delay)\n\t            },\n\t            title: function(title) {\n\t                if (title === undefined || title === null) return this.options.title\n\t\n\t                this.options.title = title\n\t                this.$relatedElement.find('.popover-title').html(title)\n\t\n\t                return this\n\t            },\n\t            content: function(content) {\n\t                if (content === undefined || content === null) return this.options.content\n\t\n\t                this.options.content = content\n\t                this.$relatedElement.find('.popover-content').html(content)\n\t\n\t                return this\n\t            },\n\t            destroy: function() {\n\t                this.$element\n\t                    .off('mouseenter mouseleave') // hover\n\t                this.$relatedElement\n\t                    .off('mouseenter mouseleave') // hover\n\t                    .remove()\n\t            }\n\t        })\n\t\n\t        var tb = /top|bottom/\n\t        var lr = /left|right/\n\t\n\t        function getArrowPosition(trigger, overlay, placement, align) {\n\t            var $trigger = $(trigger)\n\t            var triggerOffset = $trigger.offset()\n\t            var triggerLeft = triggerOffset.left\n\t            var triggerTop = triggerOffset.top\n\t            var triggerWidth = $trigger.outerWidth()\n\t            var triggerHeight = $trigger.outerHeight()\n\t\n\t            var $overlay = $(overlay).show()\n\t            var overlayWidth = $overlay.outerWidth()\n\t            var overlayHeight = $overlay.outerHeight()\n\t\n\t            var $arrow = $(overlay).find('.arrow')\n\t            var arrowWidth = $arrow.outerWidth()\n\t            var arrowHeight = $arrow.outerHeight()\n\t\n\t            var left, top\n\t\n\t            if (\n\t                tb.test(placement) !== tb.test(align) &&\n\t                lr.test(placement) !== lr.test(align)\n\t            ) {\n\t                switch (align) {\n\t                    case 'top':\n\t                    case 'bottom':\n\t                        if (overlayHeight > triggerHeight) {\n\t                            top = triggerTop + triggerHeight / 2 - arrowHeight / 2\n\t                        }\n\t                        break\n\t                    case 'left':\n\t                    case 'right':\n\t                        if (overlayWidth > triggerWidth) {\n\t                            left = triggerLeft + triggerWidth / 2 - arrowWidth / 2\n\t                        }\n\t                        break\n\t                }\n\t            }\n\t\n\t            return {\n\t                left: left,\n\t                top: top\n\t            }\n\t        }\n\t\n\t        return Popover\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, window */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $\n\t    ) {\n\t        var RE_TOP_OR_BOTTOM = /top|bottom/\n\t        var RE_LEFT_OR_RIGHT = /left|right/\n\t\n\t        /**\n\t         * 计算浮层位置的工具函数\n\t         * @param  {[type]} trigger    参照节点\n\t         * @param  {[type]} dialog     浮层节点\n\t         * @param  {[type]} placement  浮层相对于参照的位置\n\t         * @param  {[type]} align      浮层相对于参照的对齐方式\n\t         * @return {[type]}            { left: left, top: top }\n\t         */\n\t        function position(trigger, overlay, placement, align) {\n\t            var $trigger = $(trigger)\n\t\n\t            if (!$trigger.length) return center(overlay)\n\t\n\t            var triggerOffset = $trigger.offset()\n\t            var triggerLeft = triggerOffset.left\n\t            var triggerTop = triggerOffset.top\n\t            var triggerWidth = $trigger.outerWidth()\n\t            var triggerHeight = $trigger.outerHeight()\n\t\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var overlayWidth = $overlay.outerWidth()\n\t            var overlayHeight = $overlay.outerHeight()\n\t                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n\t                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var left, top\n\t            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n\t            var topDiff = triggerHeight / 2 - overlayHeight / 2\n\t            switch (placement) {\n\t                case 'top': // 上方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop - overlayHeight\n\t                    break\n\t                case 'bottom': // 下方，水平局中\n\t                    left = triggerLeft + leftDiff\n\t                    top = triggerTop + triggerHeight\n\t                    break\n\t                case 'left': // 左侧，垂直局中\n\t                    left = triggerLeft - overlayWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t                case 'right': // 右侧，垂直局中\n\t                    left = triggerLeft + triggerWidth\n\t                    top = triggerTop + topDiff\n\t                    break\n\t            }\n\t\n\t            // 浮层节点不能覆盖参照节点\n\t            if (\n\t                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n\t                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n\t            ) {\n\t                switch (align) {\n\t                    case 'top': // 上边框对齐\n\t                        top = triggerTop\n\t                        break\n\t                    case 'bottom': // 下边框对齐\n\t                        top = triggerTop + triggerHeight - overlayHeight\n\t                        break\n\t                    case 'left': // 做边框对齐\n\t                        left = triggerLeft\n\t                        break\n\t                    case 'right': // 右边框对齐\n\t                        left = triggerLeft + triggerWidth - overlayWidth\n\t                        break\n\t                }\n\t            }\n\t\n\t            return {\n\t                left: left, //  + overlayMarginLeft\n\t                top: top //  + overlayMarginTop\n\t            }\n\t        }\n\t\n\t        function center(width, height) {\n\t            var overlayWidth, overlayHeight\n\t\n\t            // center(overlay) {\n\t            if (!height) {\n\t                var $overlay = $(width) // .show()\n\t                var visible = $overlay.css('display') !== 'none'\n\t                $overlay.show()\n\t                overlayWidth = $overlay.outerWidth()\n\t                overlayHeight = $overlay.outerHeight()\n\t\n\t                if (!visible) $overlay.hide()\n\t\n\t            } else {\n\t                // center(width, height)\n\t                overlayWidth = parseFloat(width, 12)\n\t                overlayHeight = parseFloat(height, 12)\n\t            }\n\t\n\t            var $window = $(window)\n\t            var windowWidth = $window.width()\n\t            var windowHeight = $window.height()\n\t            var scrollLeft = $window.scrollLeft()\n\t            var scrollTop = $window.scrollTop()\n\t\n\t            return {\n\t                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n\t                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n\t            }\n\t        }\n\t\n\t        function start(overlay, offset, placement) {\n\t            var $overlay = $(overlay) // .show()\n\t            var visible = $overlay.css('display') !== 'none'\n\t            $overlay.show()\n\t            var width = $overlay.outerWidth()\n\t            var height = $overlay.outerHeight()\n\t\n\t            if (!visible) $overlay.hide()\n\t\n\t            var result = {\n\t                opacity: 0,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t            switch (placement) {\n\t                case 'top': // 上方\n\t                    result.top = result.top - height * 0.5\n\t                    break\n\t                case 'bottom': // 下方\n\t                    result.top = result.top + height * 0.5\n\t                    break\n\t                case 'left': // 左侧\n\t                    result.left = result.left - width * 0.5\n\t                    break\n\t                case 'right': // 右侧\n\t                    /* Expected a 'break' statement before 'default'. */\n\t                    /* falls through */\n\t                default:\n\t                    result.left = result.left + width * 0.5\n\t                    break\n\t            }\n\t\n\t            return result\n\t        }\n\t\n\t        /* exported overlay */\n\t        function end(overlay, offset) {\n\t            if (!overlay) { /* TODO */ }\n\t            return {\n\t                opacity: 1,\n\t                left: offset.left,\n\t                top: offset.top\n\t            }\n\t        }\n\t\n\t        position.center = center\n\t        position.start = start\n\t        position.end = end\n\t\n\t        return position\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<div class=\\\"popover <%= placement %>\\\">\\n\" +\n\t        \"    <div class=\\\"arrow\\\"></div>\\n\" +\n\t        \"    <div class=\\\"popover-title <%= title ? '' : 'hide' %>\\\"><%= title %></div>\\n\" +\n\t        \"    <div class=\\\"popover-content\\\"><%= content %></div>\\n\" +\n\t        \"</div>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** components/popover.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 327e07088deecc662bbb\n **/","module.exports = require('./popover')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/popover/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/* global define          */\n/* global setTimeout      */\n/* global clearTimeout    */\ndefine(\n    [\n        'jquery', 'underscore',\n        'brix/base',\n        '../dialog/position.js',\n        './popover.tpl.js'\n    ],\n    function(\n        $, _,\n        Brix,\n        position,\n        template\n    ) {\n        /*\n            ### 数据\n                {}\n            ### 选项\n                data template\n            ### 属性\n                element moduleId clientId parentClientId childClientIds data template\n            ### 方法\n                .render()\n            ### 事件\n                ready destroyed\n        */\n        function Popover() {}\n\n        _.extend(Popover.prototype, Brix.prototype, {\n            options: {\n                placement: 'right', // top bottom left right\n                align: '', // left right top bottom\n                offset: {},\n                width: 'auto',\n\n                title: '',\n                content: '',\n\n                delay: 100\n            },\n            init: function() {\n                // 支持自定义 CSS 样式\n                if (this.options.css) window.require(['css!' + this.options.css])\n            },\n            render: function() {\n                var that = this\n                this.$element = $(this.element)\n                this.$relatedElement = $(\n                    // 支持自定义 HTML 模板 template\n                    _.template(this.options.template || template)(this.options)\n                ).insertAfter(this.$element)\n\n                this.$element.hover(function( /*event*/ ) {\n                    that.show()\n                }, function( /*event*/ ) {\n                    that.hide()\n                })\n\n                that.$relatedElement.hover(function( /*event*/ ) {\n                    clearTimeout(that._timer)\n                }, function( /*event*/ ) {\n                    clearTimeout(that._timer)\n                    that.$relatedElement.hide()\n                })\n            },\n            show: function() {\n                clearTimeout(this._timer)\n                this.$relatedElement.show().css({\n                    width: this.options.width,\n                    'max-width': this.options.width // 覆盖 bootstrap overlay 的 max-width\n                })\n                var offset = position(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n                var relatedMarginLeft = parseInt(this.$relatedElement.css('margin-left'), 10) || 0\n                var relatedMarginTop = parseInt(this.$relatedElement.css('margin-top'), 10) || 0\n                this.$relatedElement.offset({\n                    left: offset.left + relatedMarginLeft + (this.options.offset.left || 0),\n                    top: offset.top + relatedMarginTop + (this.options.offset.top || 0)\n                })\n                if (this.options.align) {\n                    var $arrow = this.$relatedElement.find('.arrow')\n                    if ($arrow.is(':visible')) {\n                        $arrow.offset(\n                            getArrowPosition(this.$element, this.$relatedElement, this.options.placement, this.options.align)\n                        )\n                    }\n                }\n            },\n            hide: function() {\n                var that = this\n                clearTimeout(this._timer)\n                this._timer = setTimeout(function() {\n                    that.$relatedElement.hide()\n                }, this.options.delay)\n            },\n            title: function(title) {\n                if (title === undefined || title === null) return this.options.title\n\n                this.options.title = title\n                this.$relatedElement.find('.popover-title').html(title)\n\n                return this\n            },\n            content: function(content) {\n                if (content === undefined || content === null) return this.options.content\n\n                this.options.content = content\n                this.$relatedElement.find('.popover-content').html(content)\n\n                return this\n            },\n            destroy: function() {\n                this.$element\n                    .off('mouseenter mouseleave') // hover\n                this.$relatedElement\n                    .off('mouseenter mouseleave') // hover\n                    .remove()\n            }\n        })\n\n        var tb = /top|bottom/\n        var lr = /left|right/\n\n        function getArrowPosition(trigger, overlay, placement, align) {\n            var $trigger = $(trigger)\n            var triggerOffset = $trigger.offset()\n            var triggerLeft = triggerOffset.left\n            var triggerTop = triggerOffset.top\n            var triggerWidth = $trigger.outerWidth()\n            var triggerHeight = $trigger.outerHeight()\n\n            var $overlay = $(overlay).show()\n            var overlayWidth = $overlay.outerWidth()\n            var overlayHeight = $overlay.outerHeight()\n\n            var $arrow = $(overlay).find('.arrow')\n            var arrowWidth = $arrow.outerWidth()\n            var arrowHeight = $arrow.outerHeight()\n\n            var left, top\n\n            if (\n                tb.test(placement) !== tb.test(align) &&\n                lr.test(placement) !== lr.test(align)\n            ) {\n                switch (align) {\n                    case 'top':\n                    case 'bottom':\n                        if (overlayHeight > triggerHeight) {\n                            top = triggerTop + triggerHeight / 2 - arrowHeight / 2\n                        }\n                        break\n                    case 'left':\n                    case 'right':\n                        if (overlayWidth > triggerWidth) {\n                            left = triggerLeft + triggerWidth / 2 - arrowWidth / 2\n                        }\n                        break\n                }\n            }\n\n            return {\n                left: left,\n                top: top\n            }\n        }\n\n        return Popover\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/popover/popover.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/base\"\n ** module id = 4\n ** module chunks = 0\n **/","/* global define, window */\ndefine(\n    [\n        'jquery'\n    ],\n    function(\n        $\n    ) {\n        var RE_TOP_OR_BOTTOM = /top|bottom/\n        var RE_LEFT_OR_RIGHT = /left|right/\n\n        /**\n         * 计算浮层位置的工具函数\n         * @param  {[type]} trigger    参照节点\n         * @param  {[type]} dialog     浮层节点\n         * @param  {[type]} placement  浮层相对于参照的位置\n         * @param  {[type]} align      浮层相对于参照的对齐方式\n         * @return {[type]}            { left: left, top: top }\n         */\n        function position(trigger, overlay, placement, align) {\n            var $trigger = $(trigger)\n\n            if (!$trigger.length) return center(overlay)\n\n            var triggerOffset = $trigger.offset()\n            var triggerLeft = triggerOffset.left\n            var triggerTop = triggerOffset.top\n            var triggerWidth = $trigger.outerWidth()\n            var triggerHeight = $trigger.outerHeight()\n\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var overlayWidth = $overlay.outerWidth()\n            var overlayHeight = $overlay.outerHeight()\n                // var overlayMarginLeft = parseInt($overlay.css('margin-left'), 10)\n                // var overlayMarginTop = parseInt($overlay.css('margin-top'), 10)\n\n            if (!visible) $overlay.hide()\n\n            var left, top\n            var leftDiff = triggerWidth / 2 - overlayWidth / 2\n            var topDiff = triggerHeight / 2 - overlayHeight / 2\n            switch (placement) {\n                case 'top': // 上方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop - overlayHeight\n                    break\n                case 'bottom': // 下方，水平局中\n                    left = triggerLeft + leftDiff\n                    top = triggerTop + triggerHeight\n                    break\n                case 'left': // 左侧，垂直局中\n                    left = triggerLeft - overlayWidth\n                    top = triggerTop + topDiff\n                    break\n                case 'right': // 右侧，垂直局中\n                    left = triggerLeft + triggerWidth\n                    top = triggerTop + topDiff\n                    break\n            }\n\n            // 浮层节点不能覆盖参照节点\n            if (\n                RE_TOP_OR_BOTTOM.test(placement) !== RE_TOP_OR_BOTTOM.test(align) &&\n                RE_LEFT_OR_RIGHT.test(placement) !== RE_LEFT_OR_RIGHT.test(align)\n            ) {\n                switch (align) {\n                    case 'top': // 上边框对齐\n                        top = triggerTop\n                        break\n                    case 'bottom': // 下边框对齐\n                        top = triggerTop + triggerHeight - overlayHeight\n                        break\n                    case 'left': // 做边框对齐\n                        left = triggerLeft\n                        break\n                    case 'right': // 右边框对齐\n                        left = triggerLeft + triggerWidth - overlayWidth\n                        break\n                }\n            }\n\n            return {\n                left: left, //  + overlayMarginLeft\n                top: top //  + overlayMarginTop\n            }\n        }\n\n        function center(width, height) {\n            var overlayWidth, overlayHeight\n\n            // center(overlay) {\n            if (!height) {\n                var $overlay = $(width) // .show()\n                var visible = $overlay.css('display') !== 'none'\n                $overlay.show()\n                overlayWidth = $overlay.outerWidth()\n                overlayHeight = $overlay.outerHeight()\n\n                if (!visible) $overlay.hide()\n\n            } else {\n                // center(width, height)\n                overlayWidth = parseFloat(width, 12)\n                overlayHeight = parseFloat(height, 12)\n            }\n\n            var $window = $(window)\n            var windowWidth = $window.width()\n            var windowHeight = $window.height()\n            var scrollLeft = $window.scrollLeft()\n            var scrollTop = $window.scrollTop()\n\n            return {\n                left: windowWidth / 2 - overlayWidth / 2 + scrollLeft,\n                top: windowHeight / 2 - overlayHeight / 2 + scrollTop\n            }\n        }\n\n        function start(overlay, offset, placement) {\n            var $overlay = $(overlay) // .show()\n            var visible = $overlay.css('display') !== 'none'\n            $overlay.show()\n            var width = $overlay.outerWidth()\n            var height = $overlay.outerHeight()\n\n            if (!visible) $overlay.hide()\n\n            var result = {\n                opacity: 0,\n                left: offset.left,\n                top: offset.top\n            }\n            switch (placement) {\n                case 'top': // 上方\n                    result.top = result.top - height * 0.5\n                    break\n                case 'bottom': // 下方\n                    result.top = result.top + height * 0.5\n                    break\n                case 'left': // 左侧\n                    result.left = result.left - width * 0.5\n                    break\n                case 'right': // 右侧\n                    /* Expected a 'break' statement before 'default'. */\n                    /* falls through */\n                default:\n                    result.left = result.left + width * 0.5\n                    break\n            }\n\n            return result\n        }\n\n        /* exported overlay */\n        function end(overlay, offset) {\n            if (!overlay) { /* TODO */ }\n            return {\n                opacity: 1,\n                left: offset.left,\n                top: offset.top\n            }\n        }\n\n        position.center = center\n        position.start = start\n        position.end = end\n\n        return position\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/dialog/position.js\n ** module id = 5\n ** module chunks = 0\n **/","/* global define */\ndefine(function() {\n    return \"<div class=\\\"popover <%= placement %>\\\">\\n\" +\n        \"    <div class=\\\"arrow\\\"></div>\\n\" +\n        \"    <div class=\\\"popover-title <%= title ? '' : 'hide' %>\\\"><%= title %></div>\\n\" +\n        \"    <div class=\\\"popover-content\\\"><%= content %></div>\\n\" +\n        \"</div>\"\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/popover/popover.tpl.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/sidenav.js","webpack:///webpack/bootstrap 7e45463a17b3a038eadf","webpack:///./src/sidenav/index.js","webpack:///./src/sidenav/sidenav.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"handlebars\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","Handlebars","Brix","EventManager","Sidenav","arguments","length","element","options","extend","render","EASING","ALL_EVENTS","EVENTS",".sub-nav","mouseenter","e","self","find","hasClass","_expandCollapseSubNav","mouseleave",".side-hold span","click","el","currentTarget","toggleClass","main","animate","marginLeft","duration","trigger","isFullSubNav","localStorage",".sub-nav .sub-link",".sub-nav .sub-title",".sub-nav .sub","DOCEVENTS",".sub-nav-view a",".sub-nav-view","WINEVENTS","scroll","_timer","_fixedStatic","sidebar","css","left","window","scrollLeft","resize","subNav","height","hashchange","_pathname2sidebar","prototype","inmain","index","pathMap","allLinks","nav","subNavWrap","subNavHandle","hide","expand","isExpandNav","isHandleClick","navTop","offset","top","_bindUI","each","k","v","_k","_v","__k","__v","delegate","document","bind","_getPathname","h","pathname","indexOf","pathnameMatch","exec","replace","location","hash","_hasNav","slice","Array","sidebarA","filter","i","item","cst","closest","navA","allA","concat","n","origin_href","attr","navclick","isNavClick","_setNoSelectedNav","removeClass","_collapseNav","t","isRecover","isTopNavClick","_href","isMainNav","_isSubNav","subNavA","_expandCollapseNav","p_sub","parents","_t","__subNav","addClass","nowNav","attribute","st","scrollTop","isFixed","fn","clearTimeout","itv","setTimeout","_setSubNavOn","node","thirdNav","prev","dataSub","__currentNav","currentNav","href","currentSubNav","html","show","_expandNav","_switchTrigger","curSubNav","closestUl","prop","isThirdNavSelected","_collapseSubNav","_expandSubNav","cb","width","_collapseThirdNav","_expandThirdNav","_dataSub","isOn","ml","apply","undefined"],"mappings":"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","file":"components/sidenav.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"handlebars\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"handlebars\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/sidenav\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"handlebars\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/sidenav\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"handlebars\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"handlebars\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"handlebars\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/sidenav\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"handlebars\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/sidenav\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"handlebars\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// jshint ignore: start\n\t/*\n\t    http://getbootstrap.com/components/#dropdowns\n\t    http://silviomoreto.github.io/bootstrap-select/\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(2), __webpack_require__(3), __webpack_require__(4),\n\t    __webpack_require__(5), __webpack_require__(6)\n\t  ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t    $, _, Handlebars,\n\t    Brix, EventManager\n\t  ) {\n\t    /*\n\t        # Dropdown\n\t\n\t        下拉框组件。\n\t\n\t        ### 数据\n\t            [\n\t                {\n\t                    label: '',\n\t                    value: '',\n\t                    selected: true|false\n\t                },\n\t                ...\n\t            ]\n\t            或者\n\t            [\n\t                {\n\t                    label: '',\n\t                    children: [\n\t                        [\n\t                            {\n\t                                label: '',\n\t                                value: '',\n\t                                selected: true|false\n\t                            },\n\t                            ...\n\t                        ]\n\t                    ]\n\t                },\n\t                ...\n\t            ]\n\t        ### 选项\n\t            公共选项：data template\n\t\n\t        ### 属性\n\t            公共属性：element moduleId clientId parentClientId childClientIds data template\n\t            selectedIndex   当前选中的下标。\n\t            label            选中条目的文本。\n\t            value           选中条目的值。\n\t            select          指向关联的 <select> 节点\n\t\n\t        ### 方法\n\t            select( label|value )\n\t            toggle()\n\t            focus()\n\t            blue()\n\t\n\t        ### 事件\n\t            公共事件：ready destroyed\n\t            change\n\t\n\t        ### 示例\n\t\n\t        <select>\n\t            <option value =\"volvo\">Volvo</option>\n\t            <option value =\"saab\">Saab</option>\n\t            <option value =\"mercedes\">Mercedes</option>\n\t            <option value =\"audi\">Audi</option>\n\t        </select>\n\t        <select>\n\t            <optgroup label=\"Swedish Cars\">\n\t                <option value =\"volvo\">Volvo</option>\n\t                <option value =\"saab\">Saab</option>\n\t            </optgroup>\n\t            <optgroup label=\"German Cars\">\n\t                <option value =\"mercedes\">Mercedes</option>\n\t                <option value =\"audi\">Audi</option>\n\t            </optgroup>\n\t        </select>\n\t\n\t        TODO\n\t            multiple disabled\n\t            responsive http://silviomoreto.github.io/bootstrap-select/\n\t    */\n\t\n\t    var EASING = 'swing' //动画缓函数\n\t    var ALL_EVENTS = {\n\t      EVENTS: {\n\t        '.sub-nav': {\n\t          mouseenter: function(e, self) {\n\t            // if (self.__isNoMenuAnim) {\n\t            //   self.__isNoMenuAnim = false\n\t            //   return\n\t            // }\n\t\n\t            if (!$(self.element).find('.side-hold span').hasClass('on')) {\n\t              // console.log('mouseenter')\n\t              self._expandCollapseSubNav();\n\t            }\n\t          },\n\t          mouseleave: function(e, self) {\n\t\n\t            // if (self.__isNoMenuAnim) {\n\t            //   self.__isNoMenuAnim = false\n\t            //   return\n\t            // }\n\t\n\t            if (!$(self.element).find('.side-hold span').hasClass('on')) {\n\t              // console.log('mouseleave')\n\t              self._expandCollapseSubNav();\n\t            }\n\t          }\n\t        },\n\t\n\t        '.side-hold span': {\n\t          click: function(e, self) {\n\t            var el = $(e.currentTarget)\n\t            el.toggleClass('on')\n\t\n\t            if (!el.hasClass('on')) {\n\t              self.main.animate({\n\t                'marginLeft': 40\n\t              }, self.duration, EASING, function() {\n\t                self.trigger('slideEnd', 0)\n\t                self.isFullSubNav = '0'\n\t                self.localStorage.isFullSubNav = '0'\n\t              });\n\t            } else {\n\t              self.main.animate({\n\t                'marginLeft': 200\n\t              }, self.duration, EASING, function() {\n\t                self.trigger('slideEnd', 1)\n\t                self.isFullSubNav = '1'\n\t                self.localStorage.isFullSubNav = '1'\n\t              });\n\t            }\n\t\n\t          }\n\t        },\n\t\n\t        //子导航收缩扩展的点击切换\n\t        // \".subnav-handle\": {\n\t        //   //时间类型\n\t        //   'click': function(e, self) {\n\t        //     //子导航扩展收缩\n\t        //     self.isHandleClick = true;\n\t        //     self._expandCollapseSubNav();\n\t        //   }\n\t        // },\n\t\n\t        //子导航的点击\n\t        '.sub-nav .sub-link': {\n\t          'click': function(e, self) {\n\t            return\n\t            //a标签里包含i标签时，点击i也会代理到事件。。貌似BUG\n\t            //处理：如果是i则用closest往上取a标签\n\t            var t = $(e.target).closest('a');\n\t            // var self = this;\n\t            var thisSubNav = t.closest('.sub-nav-ul');\n\t            var dataSub = thisSubNav.attr('data-sub');\n\t\n\t            self.isHandleClick = false;\n\t            self.nowNav = self.nav.find('[data-sub=' + dataSub + ']');\n\t\n\t            self.navclick(self.nowNav);\n\t            // self.nowNav.fire('click');\n\t            self.currentSubNav = t.closest('.sub');\n\t            self._setSubNavOn(t);\n\t            self.isNavClick = true;\n\t            // S.all(window).scrollTop(0);\n\t            // self._fixedStatic();\n\t          }\n\t        },\n\t\n\t        //三级导航点击标题收缩扩展子菜单\n\t        '.sub-nav .sub-title': {\n\t          click: function(e, self) {\n\t            return\n\t            var _this = $(e.currentTarget);\n\t            var _sub = _this.next('.sub-nav-third');\n\t            var self = this;\n\t\n\t            if (_sub.css('height') === '0px') {\n\t              var h = _sub.css('height', 'auto').height();\n\t              _sub.css('height', 0);\n\t              _sub.animate({\n\t                'height': h\n\t              }, self.duration, EASING);\n\t\n\t            } else {\n\t              _sub.animate({\n\t                'height': 0\n\t              }, self.duration, EASING);\n\t            }\n\t          }\n\t        },\n\t\n\t        //子导航收缩时，鼠标经过显示全部菜单\n\t        '.sub-nav .sub': {\n\t          mouseenter: function(e, self) {\n\t            return\n\t            // var self = this;\n\t            if (self.isFullSubNav !== '0') return; //菜单不为收缩时，不处理\n\t            var t = $(e.target).closest('.sub');\n\t            var o = t.offset();\n\t            self.currentLi = t;\n\t            // self.subNavView.html(t.html());\n\t            // self.subNavView.all('.sub-nav-third').css('height', 'auto');\n\t            // self.subNavView.css(o);\n\t          }\n\t        }\n\t\n\t      },\n\t      DOCEVENTS: {\n\t        '.sub-nav-view a': {\n\t          //复制到body下的子导航的点击处理\n\t          'click': function(e, self) {\n\t            // var t = $(e.target).closest('a');\n\t            // // var self = this;\n\t            // self._setSubNavOn(t);\n\t            // self.currentSubNav = self.currentLi;\n\t            // self.isNavClick = true;\n\t          }\n\t        },\n\t        //主导航的点击\n\t        // '.top-nav a': {\n\t        //   'click': function(e) {\n\t        //     this.navclick(S.all(e.target));\n\t        //   }\n\t        // },\n\t        '.sub-nav-view': {\n\t          //子导航收缩时，鼠标离开隐藏菜单\n\t          'mouseleave': function(e, self) {\n\t            // var self = this;\n\t            // self.subNavView.css('left', '-10000px');\n\t            // self.subNavView.all('.sub-nav-third').css('height', 0);\n\t            // self.currentLi.html(self.subNavView.html());\n\t          }\n\t        }\n\t      },\n\t      WINEVENTS: {\n\t        scroll: function(e, self) {\n\t          // var self = this;\n\t          //滚动位置，滚动到126px的时候，sidebar变为fixed\n\t          self._timer(function() {\n\t            self._fixedStatic();\n\t          }, 10);\n\t\n\t          //页面在横向滚动时，菜单的fixed状态需要实时计算left值，并设置left\n\t          var sidebar = self.sidebar.find('.sidebar')\n\t          if (sidebar.hasClass('sidebar-fixed')) {\n\t            sidebar.css({\n\t              left: -$(window).scrollLeft()\n\t            })\n\t          } else {\n\t            sidebar.css({\n\t              left: 0\n\t            })\n\t          }\n\t\n\t        },\n\t\n\t        resize: function(e, self) {\n\t          //边栏高度根据window高度设置\n\t          self.subNav.height($(window).height())\n\t        },\n\t\n\t        hashchange: function(e, self) {\n\t          // if (!this.isNavClick) {\n\t          // ie8下magix里获取query执行顺序有问题，暂时加上setTimeout解决\n\t          // TODO 解决magix里ie8获取query先后问题\n\t          // fixed: 用kissy的事件侦听hashchange即可，不用原生onhashchange\n\t          self._pathname2sidebar();\n\t          // }\n\t          // this.isNavClick = false; //区别开是导航点击的，还是页面上链接跳转的\n\t        }\n\t      }\n\t    }\n\t\n\t\n\t    //arguments: [el, options]\n\t    function Sidenav() {\n\t      if (arguments.length) {\n\t        this.element = $(arguments[0])\n\t        this.options = _.extend(this.options, arguments[1])\n\t        this.render()\n\t      }\n\t    }\n\t\n\t    _.extend(Sidenav.prototype, Brix.prototype, {\n\t      /**\n\t       * 组件放置到dom后触发的方法调用\n\t       */\n\t\n\t      options: {\n\t        //inmain selector\n\t        //用来控制菜单收缩时，主体内容也随着收缩\n\t        inmain: '.inmain',\n\t\n\t        /**\n\t         * 默认的首页地址\n\t         * @cfg {String}\n\t         */\n\t        index: '/index',\n\t        /**\n\t         * 导航动画持续时间，可配置\n\t         * @cfg {Number}\n\t         */\n\t        duration: 250,\n\t\n\t        /**\n\t         * 这里配置有的页面不是导航点击进来的，可以配置成相应的导航下面,\n\t         * 左边是目标页面，右边是希望导航停在哪里的页面\n\t         * 置空则不停在任何导航上\n\t         * 格式：\n\t         *  '#!/adzone/adzone_detail/': '#!/adzone/adzone/',\n\t            '#!/plan/handle/': '#!/plan/list/',\n\t            '#!/plan/price_handle/': '#!/plan/list/',\n\t            '#!/messages/list/': '',\n\t            '#!/messages/detail/': '',\n\t            '#!/components/': ''\n\t         * @cfg {Object}\n\t         */\n\t        pathMap: {}\n\t      },\n\t      render: function() {\n\t        var self = this;\n\t        var el = $(this.element);\n\t        this.sidebar = el;\n\t        this.main = $(this.options['inmain']);\n\t        this.allLinks = el.find('.sidebar').find('a');\n\t        this.nav = el.find('.top-nav');\n\t        this.subNav = el.find('.sub-nav');\n\t        this.subNavWrap = el.find('.sub-nav-wrap');\n\t        this.subNavHandle = el.find('.subnav-handle');\n\t\n\t        //这里配置有的页面不是导航点击进来的，\n\t        //可以配置成相应的导航下面\n\t        //置空则不停在任何导航上\n\t        this.pathMap = this.options['pathMap'];\n\t\n\t        this.sidebar.find('.sidebar').find('[data-sub]').hide()\n\t\n\t        //收缩子菜单状态下，子菜单是复制附加到body根节点下的\n\t        // this.subNavView = S.all('<div class=\"sub-nav-view\"></div>').appendTo('body');\n\t\n\t        //利用localStorage记录子菜单是否mini模式, 1：打开模式；0：收缩模式\n\t        //不支持localStorage的浏览器用默认的值[\"1\"]\n\t        this.localStorage = window.localStorage || {}\n\t        this.isFullSubNav = this.localStorage.isFullSubNav || this.options.expand || '1';\n\t        this.isExpandNav = this.isFullSubNav === '1' ? true : false\n\t        // this.isFullSubNav = '0' //没有打开状态记录了\n\t\n\t\n\t        //可配置的两个参数 duration index\n\t        this.index = this.options['index']; //默认的首页地址\n\t        this.duration = this.options['duration']; //导航动画持续时间，可配置\n\t        this.isHandleClick = false; //标识是否点击了扩展收缩按钮\n\t        self.navTop = el.find('.sidebar').offset().top; //导航的初始offset.top值\n\t        //初始化\n\t        // this._bindUI();\n\t        this._pathname2sidebar();\n\t\n\t        //边栏高度根据window高度设置\n\t        this.subNav.height($(window).height())\n\t\n\t        //事件绑定\n\t        this._bindUI()\n\t\n\t      },\n\t\n\t      _bindUI: function() {\n\t\n\t        var el = $(this.element)\n\t        var self = this\n\t          //旧brix事件绑定转换\n\t        $.each(ALL_EVENTS, function(k, v) {\n\t          switch (k) {\n\t            case 'EVENTS':\n\t              $.each(v, function(_k, _v) {\n\t                $.each(_v, function(__k, __v) {\n\t                  el.delegate(_k, __k, function(e) {\n\t                    __v(e, self)\n\t                  })\n\t                })\n\t              })\n\t              break\n\t\n\t            case 'DOCEVENTS':\n\t              $.each(v, function(_k, _v) {\n\t                $.each(_v, function(__k, __v) {\n\t                  $(document).delegate(_k, __k, function(e) {\n\t                    __v(e, self)\n\t                  })\n\t                })\n\t              })\n\t              break\n\t\n\t            case 'WINEVENTS':\n\t              $.each(v, function(_k, _v) {\n\t                $(window).bind(_k, function(e) {\n\t                  _v(e, self)\n\t                })\n\t              })\n\t              break\n\t          }\n\t        })\n\t      },\n\t\n\t      /**\n\t       * 模拟queryModel对hash的pathname进行解析\n\t       * @private\n\t       */\n\t      _getPathname: function(h) {\n\t\n\t        var pathname;\n\t        if (h.indexOf('#!') > -1) {\n\t          var pathnameMatch = /^.*(#!\\/[^\\?]+)\\??.*$/.exec(h); // #!/xxxx/yyyy 返回 /xxxx/yyyy\n\t        } else {\n\t          var pathnameMatch = /^(\\/[^\\?]+)\\??.*$/.exec(h); // /xxxx/yyyy?id=1 直接返回/xxxx/yyyy\n\t        }\n\t\n\t        pathname = pathnameMatch && pathnameMatch[1] || '';\n\t\n\t        pathname = pathname.replace('#!', '')\n\t\n\t        return pathname;\n\t      },\n\t\n\t      //根据pathname来确定sidebar的状态\n\t      _pathname2sidebar: function() {\n\t\n\t        var self = this;\n\t        var h = this._getPathname(location.hash) || this._getPathname(this.index);\n\t        // var h = (location.hash) || this.index;\n\t\n\t        //将map中的地址映射成相应的导航\n\t        $.each(this.pathMap, function(k, v) {\n\t          if (h === k) {\n\t            h = v;\n\t            return false;\n\t          }\n\t        });\n\t\n\t        var _hasNav = false\n\t        var slice = Array.prototype.slice\n\t        var sidebarA = self.subNav.find('a')\n\t\n\t        sidebarA = sidebarA.filter(function(i, item) {\n\t          var cst = $(item).closest('[data-notmenu]')\n\t          if (!cst || cst.length === 0) {\n\t            return item\n\t          }\n\t        })\n\t\n\t        var navA = self.nav.find('a')\n\t        var allA = slice.call(navA).concat(slice.call(sidebarA))\n\t\n\t        $.each(allA, function(i, n) {\n\t          n = $(n)\n\t          var origin_href = n.attr('href');\n\t          origin_href = origin_href.replace(/^.*?#/g, '#'); //ie7以下a的href会获取完整地址，做下处理\n\t          origin_href = self._getPathname(origin_href);\n\t          if (h === '') {\n\t            return false\n\t          }\n\t\n\t          if (origin_href === h) {\n\t            self.navclick(n, h);\n\t            _hasNav = true\n\t            return false;\n\t          }\n\t        });\n\t\n\t        //触发无导航状态\n\t        if (!_hasNav || h === '') {\n\t          self._setNoSelectedNav();\n\t          return;\n\t        }\n\t\n\t        this.isNavClick = false;\n\t\n\t        //顶部菜单的选中状态\n\t        // var flag = true\n\t        // $('.nav a').removeClass('on')\n\t        // $('.nav a').each(function(i, item) {\n\t        //   item = $(item)\n\t        //   if (item.attr('href') === h) {\n\t        //     item.addClass('on')\n\t        //       // flag = false\n\t        //     return false\n\t        //   }\n\t        // })\n\t      },\n\t\n\t      //触发无选中导航状态\n\t      _setNoSelectedNav: function() {\n\t\n\t        var self = this\n\t          // self.__isNoMenuAnim = true\n\t        this.sidebar.find('.sidebar').find('a').removeClass('on');\n\t        this.nav.find('a').removeClass('on')\n\t\n\t        this._collapseNav(null, function() {\n\t          // self.__isNoMenuAnim = false\n\t        });\n\t      },\n\t\n\t      //主导航的点击切换\n\t      navclick: function(t, h, isRecover, isTopNavClick) {\n\t\n\t        var self = this;\n\t        h = h || this._getPathname(location.hash);\n\t        // h = h || (location.hash);\n\t        var isMainNav = false; //是否主菜单点击\n\t        var _href;\n\t\n\t\n\t        if (isTopNavClick) {\n\t          this.nav.find('a').each(function(i, item) {\n\t            item = $(item)\n\t            _href = item.attr('href');\n\t            _href = _href.slice(_href.indexOf('#'));\n\t            _href = self._getPathname(_href);\n\t            if (_href === h) {\n\t              isMainNav = true;\n\t              t = item\n\t            }\n\t          });\n\t        } else {\n\t          var _isSubNav = false\n\t          var subNavA = this.subNav.find('a')\n\t\n\t          subNavA = subNavA.filter(function(i, item) {\n\t            var cst = $(item).closest('[data-notmenu]')\n\t            if (!cst || cst.length === 0) {\n\t              return item\n\t            }\n\t          })\n\t\n\t          subNavA.each(function(i, item) {\n\t            item = $(item)\n\t            _href = item.attr('href');\n\t            _href = _href.slice(_href.indexOf('#'));\n\t            _href = self._getPathname(_href);\n\t            if (_href === h) {\n\t              _isSubNav = true;\n\t              t = item\n\t              return false\n\t            }\n\t          })\n\t\n\t          if (!_isSubNav) {\n\t            this.nav.find('a').each(function(i, item) {\n\t              item = $(item)\n\t              _href = item.attr('href');\n\t              _href = _href.slice(_href.indexOf('#'));\n\t              _href = self._getPathname(_href);\n\t              if (_href === h) {\n\t                isMainNav = true;\n\t                t = item\n\t              }\n\t            });\n\t          }\n\t        }\n\t\n\t\n\t        // if (isRecover) {\n\t        //     isMainNav = false;\n\t        // }\n\t        if (isMainNav) {\n\t          self._expandCollapseNav(t);\n\t        } else {\n\t          var p_sub = t.parents('[data-sub]');\n\t          if (!p_sub) return;\n\t          var _t = this.nav.find('[data-sub=' + p_sub.attr('data-sub') + ']');\n\t          self._expandCollapseNav(_t);\n\t\n\t          var __subNav = self.subNav.find('a').filter(function(i, item) {\n\t            var cst = $(item).closest('[data-notmenu]')\n\t            if (!cst || cst.length === 0) {\n\t              return item\n\t            }\n\t          })\n\t\n\t          __subNav.removeClass('on');\n\t\n\t          // if (isRecover) {\n\t          // self.subNav.all('a[href=\"#!/board/list/board.archivestatus=1\"]').addClass('on');\n\t          // } else {\n\t          __subNav.each(function(i, item) {\n\t            item = $(item)\n\t            if (self._getPathname(item.attr('href').replace(/^.*?#/g, '#')) === h) {\n\t              item.addClass('on');\n\t              return false;\n\t            }\n\t          });\n\t          // }\n\t        }\n\t\n\t        self.isHandleClick = false;\n\t        self.nowNav = t;\n\t        self.isNavClick = true;\n\t        // S.all(window).scrollTop(0);\n\t      },\n\t\n\t      //sidebar 的 fixed与static切换\n\t      _fixedStatic: function(attribute) {\n\t\n\t        var self = this;\n\t        var st = $(document).scrollTop(); //兼容ie\n\t        var isFixed = st > self.navTop; //滚动超过nav的offset top值时，变为fixed\n\t        if (isFixed) {\n\t          self.sidebar.find('.sidebar').addClass('sidebar-fixed');\n\t\n\t          //ie6处理fixed效果\n\t          // if (S.UA.ie === 6) {\n\t          //   self.sidebar.css({\n\t          //     position: 'absolute',\n\t          //     top: st + 10\n\t          //   });\n\t          // }\n\t        } else {\n\t          self.sidebar.find('.sidebar').removeClass('sidebar-fixed');\n\t          //ie6处理fixed效果\n\t          // if (S.UA.ie === 6) {\n\t          //   self.sidebar.css({\n\t          //     position: 'static'\n\t          //   });\n\t          // }\n\t        }\n\t      },\n\t\n\t      //延迟器\n\t      _timer: function(fn, t) {\n\t        clearTimeout(this.itv);\n\t        this.itv = setTimeout(fn, t);\n\t      },\n\t\n\t      //设置子菜单选中状态\n\t      _setSubNavOn: function(node) {\n\t\n\t\n\t        //导航的选中状态\n\t        this.subNav.find('a, .icon-font').removeClass('on');\n\t\n\t        if (!node) {\n\t          return\n\t        }\n\t        var thirdNav = node.closest('.sub-nav-third');\n\t\n\t        // this.subNavView.all('a, .icon-font').removeClass('on');\n\t        node.addClass('on');\n\t\n\t        //子导航收缩时icon高亮\n\t        if (this.isFullSubNav === '0' && thirdNav) {\n\t          thirdNav.prev().addClass('on');\n\t        }\n\t      },\n\t\n\t      //传入当前的导航a节点，处理导航点击引起的子导航切换\n\t      _expandCollapseNav: function(node) {\n\t\n\t        var self = this;\n\t        var dataSub = node.attr('data-sub'); //是否有子菜单\n\t        var h = node.attr('href');\n\t        var t;\n\t\n\t        //ie 6, 7 在innerHTML的时候会自动 把 a的href全路径补全\n\t        h = h.slice(h.indexOf('#'));\n\t\n\t        //子导航的打开关闭\n\t        if (dataSub) {\n\t          // self.__isNoMenuAnim = false\n\t          var __currentNav = self.currentNav\n\t          if (self.currentNav) self.currentNav.hide(); //前一个子导航关闭\n\t          self.currentNav = self.subNav.find('[data-sub=\"' + dataSub + '\"]'); //找到主导航对应的子菜单\n\t          //主导航对应的子菜单的某项选中，根据href匹配\n\t          //var h = 'a[href=\"' + href + '\"]';\n\t          //h = h.replace(/([\\!\\/])/g, '\\\\$1');\n\t          self.currentNav.find('a').each(function(i, n) {\n\t            n = $(n)\n\t            var href = n.attr('href');\n\t            if (href.slice(href.indexOf('#')) === h) {\n\t              t = n;\n\t              return false;\n\t            }\n\t          });\n\t          //t = self.currentNav.one(h);\n\t          // if (!t) return;\n\t          self.currentSubNav = t;\n\t          self._setSubNavOn(t);\n\t          if (self.sidebar.find('.sidebar .side-hold span').hasClass('on') || __currentNav.html() === self.currentNav.html()) {\n\t            self.currentNav.show();\n\t          }\n\t\n\t          self._expandNav();\n\t        } else {\n\t          self._collapseNav();\n\t        }\n\t\n\t        //导航的选中状态\n\t        self.nav.find('a').removeClass('on');\n\t        node.addClass('on');\n\t      },\n\t\n\t      //收缩导航按钮的切换\n\t      _switchTrigger: function() {\n\t        if (this.isFullSubNav === '1') {\n\t          this.subNavHandle.removeClass('icon-collapse').addClass('.icon-expand');\n\t        } else if (this.isFullSubNav === '0') {\n\t          this.subNavHandle.removeClass('icon-expand').addClass('.icon-collapse');\n\t        }\n\t      },\n\t\n\t      //子导航的扩展收缩\n\t      _expandCollapseSubNav: function() {\n\t        var self = this;\n\t        var curSubNav = self.currentSubNav;\n\t        var closestUl = curSubNav && (curSubNav.prop('nodeName') === 'LI' ? //无奈之举\n\t          curSubNav.find('ul') : curSubNav.closest('ul'));\n\t        var isThirdNavSelected = closestUl && closestUl.hasClass('sub-nav-third');\n\t\n\t        //是否mini模式的菜单切换\n\t        // function animCallBack() {\n\t        //   var isF = (this.isFullSubNav === '1');\n\t        //   this.isFullSubNav = isF ? '0' : '1';\n\t        //   // if (this.localStorage) {\n\t        //   //   this.localStorage.isFullSubNav = isF ? '0' : '1';\n\t        //   // }\n\t        // }\n\t\n\t        //菜单扩展\n\t        if (!self.isExpandNav) {\n\t          self.isExpandNav = true\n\t          // animCallBack.call(self); //菜单扩张时直接设置isFullSubNav\n\t          self._expandSubNav();\n\t          self._switchTrigger();\n\t\n\t          if (isThirdNavSelected && closestUl.prev()) {\n\t            closestUl.prev().removeClass('on');\n\t          }\n\t\n\t          //隐藏icon，显示按钮\n\t          $('.menu-icon').hide()\n\t          $('.menu-btn').show()\n\t          $(self.element).find('.side-hold').show()\n\t\n\t        }\n\t\n\t        //菜单收缩\n\t        else {\n\t          self.isExpandNav = false\n\t          self._collapseSubNav(function() {\n\t            // animCallBack.call(self); //菜单收缩时在动画结束时设置isFullSubNav\n\t            self._switchTrigger();\n\t            $(self.element).find('.side-hold').hide()\n\t          });\n\t\n\t          if (isThirdNavSelected && closestUl.prev()) {\n\t            closestUl.prev().addClass('on');\n\t          }\n\t\n\t          //显示icon, 隐藏按钮\n\t          $('.menu-icon').show()\n\t          $('.menu-btn').hide()\n\t        }\n\t\n\t      },\n\t\n\t      //子菜单收缩\n\t      _collapseSubNav: function(cb) {\n\t\n\t        var self = this\n\t        this.subNav.animate({\n\t          'width': '40px'\n\t            // 'padding-top': '42px'\n\t        }, this.duration, EASING, cb);\n\t\n\t        /**\n\t         *main width setting\n\t         */\n\t\n\t        // this.main.animate({\n\t        //   'marginLeft': '40px'\n\t        // }, this.duration, EASING, function() {\n\t        //   self.currentNav.hide()\n\t        // });\n\t\n\t        this.main.animate({\n\t          'marginLeft': '40px'\n\t        }, this.duration, EASING, function() {\n\t          self.currentNav.hide()\n\t        });\n\t\n\t        //\n\t        this._collapseThirdNav();\n\t      },\n\t\n\t      //子菜单打开\n\t      _expandSubNav: function(cb) {\n\t\n\t        var self = this\n\t        this.subNav.animate({\n\t          'width': '200px'\n\t            // 'padding-top': '0px'\n\t        }, this.duration, EASING, cb);\n\t\n\t        /**\n\t         *main width setting\n\t         */\n\t\n\t        self.currentNav.show()\n\t\n\t        // this.main.animate({\n\t        //   'marginLeft': '200px'\n\t        // }, this.duration, EASING);\n\t\n\t\n\t        //\n\t        this._expandThirdNav();\n\t        // this.subNavView.css('left', '-10000px');\n\t      },\n\t\n\t      //打开三级菜单\n\t      _expandThirdNav: function(cb) {\n\t\n\t\n\t        var self = this;\n\t\n\t        if (!self.nowNav) return;\n\t\n\t        var _dataSub = self.nowNav.attr('data-sub');\n\t        if (!_dataSub || _dataSub === self.currentNav.attr('data-sub') && !self.isHandleClick) {\n\t          self.sidebar.find('.sidebar').find('.sub-nav-third').css('height', 'auto');\n\t        } else {\n\t          //直接slideToggle在chrome下有问题，故换成animate\n\t          self.sidebar.find('.sidebar').find('.sub-nav-third').each(function(i, n) {\n\t            n = $(n)\n\t            var h = n.css('height', 'auto').height();\n\t            n.css('height', 0);\n\t            n.animate({\n\t              'height': h\n\t            }, self.duration, EASING, cb);\n\t          });\n\t        }\n\t      },\n\t\n\t      //关闭三级菜单\n\t      _collapseThirdNav: function(cb) {\n\t        var self = this\n\t          //直接slideToggle在chrome下有问题，故换成animate\n\t        self.sidebar.find('.sidebar').find('.sub-nav-third').animate({\n\t          'height': 0\n\t        }, this.duration, EASING, cb);\n\t      },\n\t\n\t      //主导航切换控制的侧栏菜单打开\n\t      _expandNav: function(dataSub, cb) {\n\t\n\t        if (this.isFullSubNav !== '1') {\n\t          this.currentNav.hide()\n\t          $(this.element).find('.side-hold span').removeClass('on')\n\t          $('.menu-icon').show()\n\t        }\n\t\n\t        this.subNav.show();\n\t        this.subNav.animate({\n\t          \"width\": this.isFullSubNav === '1' ? '200px' : '40px'\n\t            // \"padding-top\": this.isFullSubNav === '1' ? '0' : '42px'\n\t        }, this.duration, EASING, cb);\n\t\n\t        this.subNavWrap.animate({\n\t          \"marginLeft\": '0'\n\t        }, this.duration, EASING, cb);\n\t\n\t        /**\n\t         *main width setting\n\t         */\n\t\n\t        var isOn = $(this.element).find('.side-hold span').hasClass('on')\n\t        var ml = isOn ? 200 : 40\n\t\n\t        /**\n\t         * 在菜单非hold状态，点击侧边菜单地址，主体main的main-left设为200\n\t         * 在侧边菜单mouseleave时再恢复原逻辑\n\t         */\n\t        if (this.subNav.width() === 200) {\n\t          ml = 200\n\t        }\n\t        // -------\n\t\n\t        this.main.animate({\n\t          'marginLeft': ml\n\t        }, this.duration, EASING);\n\t\n\t        //菜单有三级菜单时的动画，禁用了\n\t        if (this.isFullSubNav === '1') {\n\t          this._expandThirdNav();\n\t        } else {\n\t          this._collapseThirdNav();\n\t        }\n\t\n\t      },\n\t\n\t      //主导航切换控制的侧栏菜单收缩\n\t      _collapseNav: function(dataSub, cb) {\n\t        var self = this;\n\t\n\t\n\t        this.subNav.animate({\n\t          \"width\": '1px'\n\t        }, this.duration, EASING, function() {\n\t          self.subNav.hide();\n\t        });\n\t\n\t        this.subNavWrap.animate({\n\t          \"marginLeft\": this.isFullSubNav === '1' ? '-200px' : '-40px'\n\t        }, this.duration, EASING, cb);\n\t\n\t        /**\n\t         *main width setting\n\t         */\n\t        this.main.animate({\n\t          'marginLeft': '0'\n\t        }, this.duration, EASING);\n\t      }\n\t    })\n\t\n\t\n\t\n\t    return Sidenav\n\t      // return Brix.extend()\n\t  }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** components/sidenav.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7e45463a17b3a038eadf\n **/","module.exports = require('./sidenav')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sidenav/index.js\n ** module id = 0\n ** module chunks = 0\n **/","// jshint ignore: start\n/*\n    http://getbootstrap.com/components/#dropdowns\n    http://silviomoreto.github.io/bootstrap-select/\n */\ndefine(\n  [\n    'jquery', 'underscore', 'handlebars',\n    'components/base', 'brix/event'\n  ],\n  function(\n    $, _, Handlebars,\n    Brix, EventManager\n  ) {\n    /*\n        # Dropdown\n\n        下拉框组件。\n\n        ### 数据\n            [\n                {\n                    label: '',\n                    value: '',\n                    selected: true|false\n                },\n                ...\n            ]\n            或者\n            [\n                {\n                    label: '',\n                    children: [\n                        [\n                            {\n                                label: '',\n                                value: '',\n                                selected: true|false\n                            },\n                            ...\n                        ]\n                    ]\n                },\n                ...\n            ]\n        ### 选项\n            公共选项：data template\n\n        ### 属性\n            公共属性：element moduleId clientId parentClientId childClientIds data template\n            selectedIndex   当前选中的下标。\n            label            选中条目的文本。\n            value           选中条目的值。\n            select          指向关联的 <select> 节点\n\n        ### 方法\n            select( label|value )\n            toggle()\n            focus()\n            blue()\n\n        ### 事件\n            公共事件：ready destroyed\n            change\n\n        ### 示例\n\n        <select>\n            <option value =\"volvo\">Volvo</option>\n            <option value =\"saab\">Saab</option>\n            <option value =\"mercedes\">Mercedes</option>\n            <option value =\"audi\">Audi</option>\n        </select>\n        <select>\n            <optgroup label=\"Swedish Cars\">\n                <option value =\"volvo\">Volvo</option>\n                <option value =\"saab\">Saab</option>\n            </optgroup>\n            <optgroup label=\"German Cars\">\n                <option value =\"mercedes\">Mercedes</option>\n                <option value =\"audi\">Audi</option>\n            </optgroup>\n        </select>\n\n        TODO\n            multiple disabled\n            responsive http://silviomoreto.github.io/bootstrap-select/\n    */\n\n    var EASING = 'swing' //动画缓函数\n    var ALL_EVENTS = {\n      EVENTS: {\n        '.sub-nav': {\n          mouseenter: function(e, self) {\n            // if (self.__isNoMenuAnim) {\n            //   self.__isNoMenuAnim = false\n            //   return\n            // }\n\n            if (!$(self.element).find('.side-hold span').hasClass('on')) {\n              // console.log('mouseenter')\n              self._expandCollapseSubNav();\n            }\n          },\n          mouseleave: function(e, self) {\n\n            // if (self.__isNoMenuAnim) {\n            //   self.__isNoMenuAnim = false\n            //   return\n            // }\n\n            if (!$(self.element).find('.side-hold span').hasClass('on')) {\n              // console.log('mouseleave')\n              self._expandCollapseSubNav();\n            }\n          }\n        },\n\n        '.side-hold span': {\n          click: function(e, self) {\n            var el = $(e.currentTarget)\n            el.toggleClass('on')\n\n            if (!el.hasClass('on')) {\n              self.main.animate({\n                'marginLeft': 40\n              }, self.duration, EASING, function() {\n                self.trigger('slideEnd', 0)\n                self.isFullSubNav = '0'\n                self.localStorage.isFullSubNav = '0'\n              });\n            } else {\n              self.main.animate({\n                'marginLeft': 200\n              }, self.duration, EASING, function() {\n                self.trigger('slideEnd', 1)\n                self.isFullSubNav = '1'\n                self.localStorage.isFullSubNav = '1'\n              });\n            }\n\n          }\n        },\n\n        //子导航收缩扩展的点击切换\n        // \".subnav-handle\": {\n        //   //时间类型\n        //   'click': function(e, self) {\n        //     //子导航扩展收缩\n        //     self.isHandleClick = true;\n        //     self._expandCollapseSubNav();\n        //   }\n        // },\n\n        //子导航的点击\n        '.sub-nav .sub-link': {\n          'click': function(e, self) {\n            return\n            //a标签里包含i标签时，点击i也会代理到事件。。貌似BUG\n            //处理：如果是i则用closest往上取a标签\n            var t = $(e.target).closest('a');\n            // var self = this;\n            var thisSubNav = t.closest('.sub-nav-ul');\n            var dataSub = thisSubNav.attr('data-sub');\n\n            self.isHandleClick = false;\n            self.nowNav = self.nav.find('[data-sub=' + dataSub + ']');\n\n            self.navclick(self.nowNav);\n            // self.nowNav.fire('click');\n            self.currentSubNav = t.closest('.sub');\n            self._setSubNavOn(t);\n            self.isNavClick = true;\n            // S.all(window).scrollTop(0);\n            // self._fixedStatic();\n          }\n        },\n\n        //三级导航点击标题收缩扩展子菜单\n        '.sub-nav .sub-title': {\n          click: function(e, self) {\n            return\n            var _this = $(e.currentTarget);\n            var _sub = _this.next('.sub-nav-third');\n            var self = this;\n\n            if (_sub.css('height') === '0px') {\n              var h = _sub.css('height', 'auto').height();\n              _sub.css('height', 0);\n              _sub.animate({\n                'height': h\n              }, self.duration, EASING);\n\n            } else {\n              _sub.animate({\n                'height': 0\n              }, self.duration, EASING);\n            }\n          }\n        },\n\n        //子导航收缩时，鼠标经过显示全部菜单\n        '.sub-nav .sub': {\n          mouseenter: function(e, self) {\n            return\n            // var self = this;\n            if (self.isFullSubNav !== '0') return; //菜单不为收缩时，不处理\n            var t = $(e.target).closest('.sub');\n            var o = t.offset();\n            self.currentLi = t;\n            // self.subNavView.html(t.html());\n            // self.subNavView.all('.sub-nav-third').css('height', 'auto');\n            // self.subNavView.css(o);\n          }\n        }\n\n      },\n      DOCEVENTS: {\n        '.sub-nav-view a': {\n          //复制到body下的子导航的点击处理\n          'click': function(e, self) {\n            // var t = $(e.target).closest('a');\n            // // var self = this;\n            // self._setSubNavOn(t);\n            // self.currentSubNav = self.currentLi;\n            // self.isNavClick = true;\n          }\n        },\n        //主导航的点击\n        // '.top-nav a': {\n        //   'click': function(e) {\n        //     this.navclick(S.all(e.target));\n        //   }\n        // },\n        '.sub-nav-view': {\n          //子导航收缩时，鼠标离开隐藏菜单\n          'mouseleave': function(e, self) {\n            // var self = this;\n            // self.subNavView.css('left', '-10000px');\n            // self.subNavView.all('.sub-nav-third').css('height', 0);\n            // self.currentLi.html(self.subNavView.html());\n          }\n        }\n      },\n      WINEVENTS: {\n        scroll: function(e, self) {\n          // var self = this;\n          //滚动位置，滚动到126px的时候，sidebar变为fixed\n          self._timer(function() {\n            self._fixedStatic();\n          }, 10);\n\n          //页面在横向滚动时，菜单的fixed状态需要实时计算left值，并设置left\n          var sidebar = self.sidebar.find('.sidebar')\n          if (sidebar.hasClass('sidebar-fixed')) {\n            sidebar.css({\n              left: -$(window).scrollLeft()\n            })\n          } else {\n            sidebar.css({\n              left: 0\n            })\n          }\n\n        },\n\n        resize: function(e, self) {\n          //边栏高度根据window高度设置\n          self.subNav.height($(window).height())\n        },\n\n        hashchange: function(e, self) {\n          // if (!this.isNavClick) {\n          // ie8下magix里获取query执行顺序有问题，暂时加上setTimeout解决\n          // TODO 解决magix里ie8获取query先后问题\n          // fixed: 用kissy的事件侦听hashchange即可，不用原生onhashchange\n          self._pathname2sidebar();\n          // }\n          // this.isNavClick = false; //区别开是导航点击的，还是页面上链接跳转的\n        }\n      }\n    }\n\n\n    //arguments: [el, options]\n    function Sidenav() {\n      if (arguments.length) {\n        this.element = $(arguments[0])\n        this.options = _.extend(this.options, arguments[1])\n        this.render()\n      }\n    }\n\n    _.extend(Sidenav.prototype, Brix.prototype, {\n      /**\n       * 组件放置到dom后触发的方法调用\n       */\n\n      options: {\n        //inmain selector\n        //用来控制菜单收缩时，主体内容也随着收缩\n        inmain: '.inmain',\n\n        /**\n         * 默认的首页地址\n         * @cfg {String}\n         */\n        index: '/index',\n        /**\n         * 导航动画持续时间，可配置\n         * @cfg {Number}\n         */\n        duration: 250,\n\n        /**\n         * 这里配置有的页面不是导航点击进来的，可以配置成相应的导航下面,\n         * 左边是目标页面，右边是希望导航停在哪里的页面\n         * 置空则不停在任何导航上\n         * 格式：\n         *  '#!/adzone/adzone_detail/': '#!/adzone/adzone/',\n            '#!/plan/handle/': '#!/plan/list/',\n            '#!/plan/price_handle/': '#!/plan/list/',\n            '#!/messages/list/': '',\n            '#!/messages/detail/': '',\n            '#!/components/': ''\n         * @cfg {Object}\n         */\n        pathMap: {}\n      },\n      render: function() {\n        var self = this;\n        var el = $(this.element);\n        this.sidebar = el;\n        this.main = $(this.options['inmain']);\n        this.allLinks = el.find('.sidebar').find('a');\n        this.nav = el.find('.top-nav');\n        this.subNav = el.find('.sub-nav');\n        this.subNavWrap = el.find('.sub-nav-wrap');\n        this.subNavHandle = el.find('.subnav-handle');\n\n        //这里配置有的页面不是导航点击进来的，\n        //可以配置成相应的导航下面\n        //置空则不停在任何导航上\n        this.pathMap = this.options['pathMap'];\n\n        this.sidebar.find('.sidebar').find('[data-sub]').hide()\n\n        //收缩子菜单状态下，子菜单是复制附加到body根节点下的\n        // this.subNavView = S.all('<div class=\"sub-nav-view\"></div>').appendTo('body');\n\n        //利用localStorage记录子菜单是否mini模式, 1：打开模式；0：收缩模式\n        //不支持localStorage的浏览器用默认的值[\"1\"]\n        this.localStorage = window.localStorage || {}\n        this.isFullSubNav = this.localStorage.isFullSubNav || this.options.expand || '1';\n        this.isExpandNav = this.isFullSubNav === '1' ? true : false\n        // this.isFullSubNav = '0' //没有打开状态记录了\n\n\n        //可配置的两个参数 duration index\n        this.index = this.options['index']; //默认的首页地址\n        this.duration = this.options['duration']; //导航动画持续时间，可配置\n        this.isHandleClick = false; //标识是否点击了扩展收缩按钮\n        self.navTop = el.find('.sidebar').offset().top; //导航的初始offset.top值\n        //初始化\n        // this._bindUI();\n        this._pathname2sidebar();\n\n        //边栏高度根据window高度设置\n        this.subNav.height($(window).height())\n\n        //事件绑定\n        this._bindUI()\n\n      },\n\n      _bindUI: function() {\n\n        var el = $(this.element)\n        var self = this\n          //旧brix事件绑定转换\n        $.each(ALL_EVENTS, function(k, v) {\n          switch (k) {\n            case 'EVENTS':\n              $.each(v, function(_k, _v) {\n                $.each(_v, function(__k, __v) {\n                  el.delegate(_k, __k, function(e) {\n                    __v(e, self)\n                  })\n                })\n              })\n              break\n\n            case 'DOCEVENTS':\n              $.each(v, function(_k, _v) {\n                $.each(_v, function(__k, __v) {\n                  $(document).delegate(_k, __k, function(e) {\n                    __v(e, self)\n                  })\n                })\n              })\n              break\n\n            case 'WINEVENTS':\n              $.each(v, function(_k, _v) {\n                $(window).bind(_k, function(e) {\n                  _v(e, self)\n                })\n              })\n              break\n          }\n        })\n      },\n\n      /**\n       * 模拟queryModel对hash的pathname进行解析\n       * @private\n       */\n      _getPathname: function(h) {\n\n        var pathname;\n        if (h.indexOf('#!') > -1) {\n          var pathnameMatch = /^.*(#!\\/[^\\?]+)\\??.*$/.exec(h); // #!/xxxx/yyyy 返回 /xxxx/yyyy\n        } else {\n          var pathnameMatch = /^(\\/[^\\?]+)\\??.*$/.exec(h); // /xxxx/yyyy?id=1 直接返回/xxxx/yyyy\n        }\n\n        pathname = pathnameMatch && pathnameMatch[1] || '';\n\n        pathname = pathname.replace('#!', '')\n\n        return pathname;\n      },\n\n      //根据pathname来确定sidebar的状态\n      _pathname2sidebar: function() {\n\n        var self = this;\n        var h = this._getPathname(location.hash) || this._getPathname(this.index);\n        // var h = (location.hash) || this.index;\n\n        //将map中的地址映射成相应的导航\n        $.each(this.pathMap, function(k, v) {\n          if (h === k) {\n            h = v;\n            return false;\n          }\n        });\n\n        var _hasNav = false\n        var slice = Array.prototype.slice\n        var sidebarA = self.subNav.find('a')\n\n        sidebarA = sidebarA.filter(function(i, item) {\n          var cst = $(item).closest('[data-notmenu]')\n          if (!cst || cst.length === 0) {\n            return item\n          }\n        })\n\n        var navA = self.nav.find('a')\n        var allA = slice.call(navA).concat(slice.call(sidebarA))\n\n        $.each(allA, function(i, n) {\n          n = $(n)\n          var origin_href = n.attr('href');\n          origin_href = origin_href.replace(/^.*?#/g, '#'); //ie7以下a的href会获取完整地址，做下处理\n          origin_href = self._getPathname(origin_href);\n          if (h === '') {\n            return false\n          }\n\n          if (origin_href === h) {\n            self.navclick(n, h);\n            _hasNav = true\n            return false;\n          }\n        });\n\n        //触发无导航状态\n        if (!_hasNav || h === '') {\n          self._setNoSelectedNav();\n          return;\n        }\n\n        this.isNavClick = false;\n\n        //顶部菜单的选中状态\n        // var flag = true\n        // $('.nav a').removeClass('on')\n        // $('.nav a').each(function(i, item) {\n        //   item = $(item)\n        //   if (item.attr('href') === h) {\n        //     item.addClass('on')\n        //       // flag = false\n        //     return false\n        //   }\n        // })\n      },\n\n      //触发无选中导航状态\n      _setNoSelectedNav: function() {\n\n        var self = this\n          // self.__isNoMenuAnim = true\n        this.sidebar.find('.sidebar').find('a').removeClass('on');\n        this.nav.find('a').removeClass('on')\n\n        this._collapseNav(null, function() {\n          // self.__isNoMenuAnim = false\n        });\n      },\n\n      //主导航的点击切换\n      navclick: function(t, h, isRecover, isTopNavClick) {\n\n        var self = this;\n        h = h || this._getPathname(location.hash);\n        // h = h || (location.hash);\n        var isMainNav = false; //是否主菜单点击\n        var _href;\n\n\n        if (isTopNavClick) {\n          this.nav.find('a').each(function(i, item) {\n            item = $(item)\n            _href = item.attr('href');\n            _href = _href.slice(_href.indexOf('#'));\n            _href = self._getPathname(_href);\n            if (_href === h) {\n              isMainNav = true;\n              t = item\n            }\n          });\n        } else {\n          var _isSubNav = false\n          var subNavA = this.subNav.find('a')\n\n          subNavA = subNavA.filter(function(i, item) {\n            var cst = $(item).closest('[data-notmenu]')\n            if (!cst || cst.length === 0) {\n              return item\n            }\n          })\n\n          subNavA.each(function(i, item) {\n            item = $(item)\n            _href = item.attr('href');\n            _href = _href.slice(_href.indexOf('#'));\n            _href = self._getPathname(_href);\n            if (_href === h) {\n              _isSubNav = true;\n              t = item\n              return false\n            }\n          })\n\n          if (!_isSubNav) {\n            this.nav.find('a').each(function(i, item) {\n              item = $(item)\n              _href = item.attr('href');\n              _href = _href.slice(_href.indexOf('#'));\n              _href = self._getPathname(_href);\n              if (_href === h) {\n                isMainNav = true;\n                t = item\n              }\n            });\n          }\n        }\n\n\n        // if (isRecover) {\n        //     isMainNav = false;\n        // }\n        if (isMainNav) {\n          self._expandCollapseNav(t);\n        } else {\n          var p_sub = t.parents('[data-sub]');\n          if (!p_sub) return;\n          var _t = this.nav.find('[data-sub=' + p_sub.attr('data-sub') + ']');\n          self._expandCollapseNav(_t);\n\n          var __subNav = self.subNav.find('a').filter(function(i, item) {\n            var cst = $(item).closest('[data-notmenu]')\n            if (!cst || cst.length === 0) {\n              return item\n            }\n          })\n\n          __subNav.removeClass('on');\n\n          // if (isRecover) {\n          // self.subNav.all('a[href=\"#!/board/list/board.archivestatus=1\"]').addClass('on');\n          // } else {\n          __subNav.each(function(i, item) {\n            item = $(item)\n            if (self._getPathname(item.attr('href').replace(/^.*?#/g, '#')) === h) {\n              item.addClass('on');\n              return false;\n            }\n          });\n          // }\n        }\n\n        self.isHandleClick = false;\n        self.nowNav = t;\n        self.isNavClick = true;\n        // S.all(window).scrollTop(0);\n      },\n\n      //sidebar 的 fixed与static切换\n      _fixedStatic: function(attribute) {\n\n        var self = this;\n        var st = $(document).scrollTop(); //兼容ie\n        var isFixed = st > self.navTop; //滚动超过nav的offset top值时，变为fixed\n        if (isFixed) {\n          self.sidebar.find('.sidebar').addClass('sidebar-fixed');\n\n          //ie6处理fixed效果\n          // if (S.UA.ie === 6) {\n          //   self.sidebar.css({\n          //     position: 'absolute',\n          //     top: st + 10\n          //   });\n          // }\n        } else {\n          self.sidebar.find('.sidebar').removeClass('sidebar-fixed');\n          //ie6处理fixed效果\n          // if (S.UA.ie === 6) {\n          //   self.sidebar.css({\n          //     position: 'static'\n          //   });\n          // }\n        }\n      },\n\n      //延迟器\n      _timer: function(fn, t) {\n        clearTimeout(this.itv);\n        this.itv = setTimeout(fn, t);\n      },\n\n      //设置子菜单选中状态\n      _setSubNavOn: function(node) {\n\n\n        //导航的选中状态\n        this.subNav.find('a, .icon-font').removeClass('on');\n\n        if (!node) {\n          return\n        }\n        var thirdNav = node.closest('.sub-nav-third');\n\n        // this.subNavView.all('a, .icon-font').removeClass('on');\n        node.addClass('on');\n\n        //子导航收缩时icon高亮\n        if (this.isFullSubNav === '0' && thirdNav) {\n          thirdNav.prev().addClass('on');\n        }\n      },\n\n      //传入当前的导航a节点，处理导航点击引起的子导航切换\n      _expandCollapseNav: function(node) {\n\n        var self = this;\n        var dataSub = node.attr('data-sub'); //是否有子菜单\n        var h = node.attr('href');\n        var t;\n\n        //ie 6, 7 在innerHTML的时候会自动 把 a的href全路径补全\n        h = h.slice(h.indexOf('#'));\n\n        //子导航的打开关闭\n        if (dataSub) {\n          // self.__isNoMenuAnim = false\n          var __currentNav = self.currentNav\n          if (self.currentNav) self.currentNav.hide(); //前一个子导航关闭\n          self.currentNav = self.subNav.find('[data-sub=\"' + dataSub + '\"]'); //找到主导航对应的子菜单\n          //主导航对应的子菜单的某项选中，根据href匹配\n          //var h = 'a[href=\"' + href + '\"]';\n          //h = h.replace(/([\\!\\/])/g, '\\\\$1');\n          self.currentNav.find('a').each(function(i, n) {\n            n = $(n)\n            var href = n.attr('href');\n            if (href.slice(href.indexOf('#')) === h) {\n              t = n;\n              return false;\n            }\n          });\n          //t = self.currentNav.one(h);\n          // if (!t) return;\n          self.currentSubNav = t;\n          self._setSubNavOn(t);\n          if (self.sidebar.find('.sidebar .side-hold span').hasClass('on') || __currentNav.html() === self.currentNav.html()) {\n            self.currentNav.show();\n          }\n\n          self._expandNav();\n        } else {\n          self._collapseNav();\n        }\n\n        //导航的选中状态\n        self.nav.find('a').removeClass('on');\n        node.addClass('on');\n      },\n\n      //收缩导航按钮的切换\n      _switchTrigger: function() {\n        if (this.isFullSubNav === '1') {\n          this.subNavHandle.removeClass('icon-collapse').addClass('.icon-expand');\n        } else if (this.isFullSubNav === '0') {\n          this.subNavHandle.removeClass('icon-expand').addClass('.icon-collapse');\n        }\n      },\n\n      //子导航的扩展收缩\n      _expandCollapseSubNav: function() {\n        var self = this;\n        var curSubNav = self.currentSubNav;\n        var closestUl = curSubNav && (curSubNav.prop('nodeName') === 'LI' ? //无奈之举\n          curSubNav.find('ul') : curSubNav.closest('ul'));\n        var isThirdNavSelected = closestUl && closestUl.hasClass('sub-nav-third');\n\n        //是否mini模式的菜单切换\n        // function animCallBack() {\n        //   var isF = (this.isFullSubNav === '1');\n        //   this.isFullSubNav = isF ? '0' : '1';\n        //   // if (this.localStorage) {\n        //   //   this.localStorage.isFullSubNav = isF ? '0' : '1';\n        //   // }\n        // }\n\n        //菜单扩展\n        if (!self.isExpandNav) {\n          self.isExpandNav = true\n          // animCallBack.call(self); //菜单扩张时直接设置isFullSubNav\n          self._expandSubNav();\n          self._switchTrigger();\n\n          if (isThirdNavSelected && closestUl.prev()) {\n            closestUl.prev().removeClass('on');\n          }\n\n          //隐藏icon，显示按钮\n          $('.menu-icon').hide()\n          $('.menu-btn').show()\n          $(self.element).find('.side-hold').show()\n\n        }\n\n        //菜单收缩\n        else {\n          self.isExpandNav = false\n          self._collapseSubNav(function() {\n            // animCallBack.call(self); //菜单收缩时在动画结束时设置isFullSubNav\n            self._switchTrigger();\n            $(self.element).find('.side-hold').hide()\n          });\n\n          if (isThirdNavSelected && closestUl.prev()) {\n            closestUl.prev().addClass('on');\n          }\n\n          //显示icon, 隐藏按钮\n          $('.menu-icon').show()\n          $('.menu-btn').hide()\n        }\n\n      },\n\n      //子菜单收缩\n      _collapseSubNav: function(cb) {\n\n        var self = this\n        this.subNav.animate({\n          'width': '40px'\n            // 'padding-top': '42px'\n        }, this.duration, EASING, cb);\n\n        /**\n         *main width setting\n         */\n\n        // this.main.animate({\n        //   'marginLeft': '40px'\n        // }, this.duration, EASING, function() {\n        //   self.currentNav.hide()\n        // });\n\n        this.main.animate({\n          'marginLeft': '40px'\n        }, this.duration, EASING, function() {\n          self.currentNav.hide()\n        });\n\n        //\n        this._collapseThirdNav();\n      },\n\n      //子菜单打开\n      _expandSubNav: function(cb) {\n\n        var self = this\n        this.subNav.animate({\n          'width': '200px'\n            // 'padding-top': '0px'\n        }, this.duration, EASING, cb);\n\n        /**\n         *main width setting\n         */\n\n        self.currentNav.show()\n\n        // this.main.animate({\n        //   'marginLeft': '200px'\n        // }, this.duration, EASING);\n\n\n        //\n        this._expandThirdNav();\n        // this.subNavView.css('left', '-10000px');\n      },\n\n      //打开三级菜单\n      _expandThirdNav: function(cb) {\n\n\n        var self = this;\n\n        if (!self.nowNav) return;\n\n        var _dataSub = self.nowNav.attr('data-sub');\n        if (!_dataSub || _dataSub === self.currentNav.attr('data-sub') && !self.isHandleClick) {\n          self.sidebar.find('.sidebar').find('.sub-nav-third').css('height', 'auto');\n        } else {\n          //直接slideToggle在chrome下有问题，故换成animate\n          self.sidebar.find('.sidebar').find('.sub-nav-third').each(function(i, n) {\n            n = $(n)\n            var h = n.css('height', 'auto').height();\n            n.css('height', 0);\n            n.animate({\n              'height': h\n            }, self.duration, EASING, cb);\n          });\n        }\n      },\n\n      //关闭三级菜单\n      _collapseThirdNav: function(cb) {\n        var self = this\n          //直接slideToggle在chrome下有问题，故换成animate\n        self.sidebar.find('.sidebar').find('.sub-nav-third').animate({\n          'height': 0\n        }, this.duration, EASING, cb);\n      },\n\n      //主导航切换控制的侧栏菜单打开\n      _expandNav: function(dataSub, cb) {\n\n        if (this.isFullSubNav !== '1') {\n          this.currentNav.hide()\n          $(this.element).find('.side-hold span').removeClass('on')\n          $('.menu-icon').show()\n        }\n\n        this.subNav.show();\n        this.subNav.animate({\n          \"width\": this.isFullSubNav === '1' ? '200px' : '40px'\n            // \"padding-top\": this.isFullSubNav === '1' ? '0' : '42px'\n        }, this.duration, EASING, cb);\n\n        this.subNavWrap.animate({\n          \"marginLeft\": '0'\n        }, this.duration, EASING, cb);\n\n        /**\n         *main width setting\n         */\n\n        var isOn = $(this.element).find('.side-hold span').hasClass('on')\n        var ml = isOn ? 200 : 40\n\n        /**\n         * 在菜单非hold状态，点击侧边菜单地址，主体main的main-left设为200\n         * 在侧边菜单mouseleave时再恢复原逻辑\n         */\n        if (this.subNav.width() === 200) {\n          ml = 200\n        }\n        // -------\n\n        this.main.animate({\n          'marginLeft': ml\n        }, this.duration, EASING);\n\n        //菜单有三级菜单时的动画，禁用了\n        if (this.isFullSubNav === '1') {\n          this._expandThirdNav();\n        } else {\n          this._collapseThirdNav();\n        }\n\n      },\n\n      //主导航切换控制的侧栏菜单收缩\n      _collapseNav: function(dataSub, cb) {\n        var self = this;\n\n\n        this.subNav.animate({\n          \"width\": '1px'\n        }, this.duration, EASING, function() {\n          self.subNav.hide();\n        });\n\n        this.subNavWrap.animate({\n          \"marginLeft\": this.isFullSubNav === '1' ? '-200px' : '-40px'\n        }, this.duration, EASING, cb);\n\n        /**\n         *main width setting\n         */\n        this.main.animate({\n          'marginLeft': '0'\n        }, this.duration, EASING);\n      }\n    })\n\n\n\n    return Sidenav\n      // return Brix.extend()\n  }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sidenav/sidenav.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"handlebars\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"components/base\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/event\"\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/tree.js","webpack:///webpack/bootstrap a25f09edf73c0b84fef9","webpack:///./src/tree/index.js","webpack:///./src/tree/tree.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"components/base\"","webpack:///external \"brix/event\"","webpack:///./src/tree/tree.tpl.js","webpack:///./src/tree/tree.node.tpl.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","Brix","EventManager","template","nodeTemplate","toTree","list","mapped","each","item","result","undefined","pid","parentId","push","parent","children","Tree","fix","node","contentFn","content","childrenFn","length","NAMESPACE","STATE","PENDING","ACTIVE","INACTIVE","extend","prototype","options","data","state","init","that","defer","Deferred","deps","customNodeTemplate","window","arguments","resolve","element","find","remove","text","trim","innerHTML","eval","name","promise","render","manager","$element","append","delegate","collapse","expand","type","clientId","_state","document","body","off","on","event","target","contains","parentNode","trigger","Event","toggle","stopPropagation","selector","end","slideToggle","liNode","show","hide","slideDown","slideUp","search","value","clan","matched","stranger","highlight","$container","value_re","RegExp","$item","html","replace","toLowerCase","indexOf","uniq","current","jquery","attr","nodeType","siblings","all","forward","forwardEvent","currentTarget","destroy","apply"],"mappings":"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","file":"components/tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/tree\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/tree\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"components/base\", \"brix/event\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/tree\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"components/base\"), require(\"brix/event\"));\n\telse\n\t\troot[\"components/tree\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"components/base\"], root[\"brix/event\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1)\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t/*\n\t    Tree\n\t    * Node\n\t        * id\n\t        * pid\n\t        * name\n\t        * title\n\t        * url\n\t        * children\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3),\n\t        __webpack_require__(4), __webpack_require__(5),\n\t        __webpack_require__(6),\n\t        __webpack_require__(7)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _,\n\t        Brix, EventManager,\n\t        template,\n\t        nodeTemplate\n\t    ) {\n\t\n\t        var NAMESPACE = '.tree'\n\t        var STATE = {\n\t            PENDING: 'pending',\n\t            ACTIVE: 'active',\n\t            INACTIVE: 'inactive'\n\t        }\n\t\n\t        function toTree(list) {\n\t            var mapped = {}\n\t            _.each(list, function(item /*, index*/ ) {\n\t                if (!item || !item.id) return\n\t                mapped[item.id] = item\n\t            })\n\t\n\t            var result = []\n\t            _.each(list, function(item /*, index*/ ) {\n\t                if (!item) return\n\t                    /* jshint -W041 */\n\t                if (item.pid == undefined && item.parentId == undefined) {\n\t                    result.push(item)\n\t                    return\n\t                }\n\t                var parent = mapped[item.pid] || mapped[item.parentId]\n\t                if (!parent) return\n\t                if (!parent.children) parent.children = []\n\t                parent.children.push(item)\n\t            })\n\t            return result\n\t        }\n\t\n\t        function Tree() {}\n\t\n\t        _.extend(Tree.prototype, Brix.prototype, {\n\t            options: {\n\t                data: undefined,\n\t                nodeTemplate: undefined,\n\t                state: 'expand' // expand, collapse\n\t            },\n\t            init: function() {\n\t                var that = this\n\t                var defer = $.Deferred()\n\t\n\t                // 支持自定义 HTML 模板 template\n\t                var deps = []\n\t                var customNodeTemplate = this.options.nodeTemplate || this.options['node-template']\n\t                if (customNodeTemplate) deps.push(customNodeTemplate)\n\t                window.require(deps, function() {\n\t                    if (customNodeTemplate) that.options.customNodeTemplate = arguments[0]\n\t                    defer.resolve()\n\t                })\n\t\n\t                if (!this.options.data) {\n\t                    // 解析数据时先移除 BiSheng 插入的 script 节点\n\t                    $(this.element).find('script').remove()\n\t\n\t                    var text = $.trim(this.element.innerHTML)\n\t                        /* jshint evil:true */\n\t                    this.options.data = eval(\n\t                        '(function(){ return Array.prototype.slice.call(arguments)[0] })(' + text + ')'\n\t                    )\n\t                    this.element.innerHTML = ''\n\t                }\n\t\n\t                var mapped = {}\n\t                _.each(this.options.data, function(item /*, index*/ ) {\n\t                    if (!item || !item.id) return\n\t\n\t                    /*jshint eqnull:true */\n\t                    if (item.pid != null && item.parentId == null) item.parentId = item.pid\n\t                    if (item.pid == null && item.parentId != null) item.pid = item.parentId\n\t\n\t                    mapped[item.id] = item\n\t                })\n\t                this.options.mapped = mapped\n\t\n\t                this.options.data = {\n\t                    id: 'root',\n\t                    name: 'root',\n\t                    children: toTree(this.options.data)\n\t                }\n\t\n\t                if (deps.length) return defer.promise()\n\t            },\n\t            render: function() {\n\t                var that = this\n\t                var manager = new EventManager()\n\t                this.$element = $(this.element)\n\t\n\t                fix(this.options.data, template, this.options.customNodeTemplate || nodeTemplate)\n\t                this.$element.append(\n\t                    _.template(template)(this.options.data)\n\t                )\n\t\n\t                manager.delegate(this.$element, this)\n\t\n\t                if (this.options.state === 'collapse') this.collapse()\n\t                if (this.options.state === 'expand') this.expand()\n\t\n\t                /*\n\t                    var Loader = require('brix/loader')\n\t                    var trees = Loader.query('components/taginput')\n\t                    trees.on('active.taginput inactive.taginput', function(e){ console.log(e.type, e.namespace, e.target) } )\n\t                 */\n\t                var type = 'click' + NAMESPACE + '_' + this.clientId\n\t                this._state = STATE.INACTIVE\n\t                $(document.body).off(type)\n\t                    .on(type, function(event) {\n\t                        if (event.target === that.element || // 点击组件节点\n\t                            $.contains(that.element, event.target) || // 点击组件子节点\n\t                            !event.target.parentNode // 点击不存在节点\n\t                        ) {\n\t                            if (that._state === STATE.ACTIVE) return\n\t                            that.trigger(\n\t                                $.Event('active' + NAMESPACE, {\n\t                                    target: event.target\n\t                                })\n\t                            )\n\t                            that._state = STATE.ACTIVE\n\t                            return\n\t                        }\n\t\n\t                        if (that._state === STATE.INACTIVE) return\n\t                        that.trigger(\n\t                            $.Event('inactive' + NAMESPACE, {\n\t                                target: event.target\n\t                            })\n\t                        )\n\t                        that._state = STATE.INACTIVE\n\t                    })\n\t            },\n\t            toggle: function(event, id) {\n\t                event.stopPropagation()\n\t\n\t                var selector\n\t                if (event === undefined) selector = 'li[data-node-id]' // toggle()\n\t                else if (!event.type) selector = 'li[data-node-id=\"' + event + '\"]' // toggle( id )\n\t                else selector = 'li[data-node-id=\"' + id + '\"]' // toggle( event, id )\n\t\n\t                $(selector, this.$element)\n\t                    .find('> .tree-node-control .brixfont').toggle().end()\n\t                    .find('> ul.tree').slideToggle('fast')\n\t            },\n\t            expand: function(id) {\n\t                var selector\n\t                if (id === undefined) selector = 'li[data-node-id]'\n\t                else selector = 'li[data-node-id=\"' + id + '\"]'\n\t\n\t                // 先展开父节点和祖先节点\n\t                var mapped = this.options.mapped\n\t                if (id !== undefined && mapped[id] && mapped[id].parentId) this.expand(mapped[id].parentId)\n\t\n\t                // 再展开当前节点\n\t                var liNode = $(selector, this.$element).show()\n\t                    .find('> .tree-node-control .brixfont.plus-sign').hide().end()\n\t                    .find('> .tree-node-control .brixfont.minus-sign').show().end()\n\t                if (id === undefined) liNode.find('> ul.tree').show()\n\t                else liNode.find('> ul.tree').slideDown('fast')\n\t            },\n\t            collapse: function(id) {\n\t                var selector\n\t                if (id === undefined) selector = 'li[data-node-id]'\n\t                else selector = 'li[data-node-id=\"' + id + '\"]'\n\t\n\t                var liNode = $(selector, this.$element).show()\n\t                    .find('> .tree-node-control .brixfont.plus-sign').show().end()\n\t                    .find('> .tree-node-control .brixfont.minus-sign').hide().end()\n\t                if (id === undefined) liNode.find('> ul.tree').hide()\n\t                else liNode.find('> ul.tree').slideUp('fast')\n\t            },\n\t            search: function(value) {\n\t                if (value === undefined) return\n\t\n\t                var that = this\n\t                $('li[data-node-id]', this.$element).hide()\n\t\n\t                var matched = []\n\t                _.each(this.options.mapped, function(item /*, id*/ ) {\n\t                    if (item.name.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n\t                        matched.push(item)\n\t                        clan(item, matched)\n\t                    }\n\t                })\n\t                _.each(_.uniq(matched), function(item /*, index*/ ) {\n\t                    that.expand(item.id)\n\t                })\n\t\n\t                highlight(this.$element, value)\n\t\n\t                function clan(item, matched) {\n\t                    _.each(item.children, function(stranger) {\n\t                        matched.push(stranger)\n\t                        clan(stranger, matched)\n\t                    })\n\t                }\n\t\n\t                function highlight($container, value) {\n\t                    var value_re = new RegExp(value, 'ig')\n\t                    _.each($('.tree-node-content-name', $container), function(item /*, index*/ ) {\n\t                        var $item = $(item)\n\t                        $item.html(\n\t                            $item.text().replace(value_re, function(matched) {\n\t                                return '<span class=\"highlight\">' + matched + '</span>'\n\t                            })\n\t                        )\n\t                    })\n\t                }\n\t\n\t            },\n\t            current: function(element) {\n\t                if (!element) return\n\t\n\t                var mapped = this.options.mapped\n\t                var result = {}\n\t\n\t                // .current( jQuery ) .current( element ) .current( id )\n\t                var id = element.jquery ? element.attr('data-node-id') :\n\t                    element.nodeType ? $(element).attr('data-node-id') :\n\t                    element\n\t                var selector\n\t\n\t                if (!id || !mapped[id]) return\n\t\n\t                selector = 'li[data-node-id=\"' + id + '\"]'\n\t                result.data = mapped[id]\n\t                result.element = $(selector, this.$element).find('> .tree-node-control > .tree-node-content')[0]\n\t\n\t                return result\n\t            },\n\t            parent: function(element) {\n\t                if (!element) return\n\t\n\t                var mapped = this.options.mapped\n\t                var result = {}\n\t\n\t                // .parent( jQuery ) .parent( element ) .parent( id )\n\t                var id = element.jquery ? element.attr('data-node-id') :\n\t                    element.nodeType ? $(element).attr('data-node-id') :\n\t                    element\n\t                var parentId, selector\n\t\n\t                if (!id ||\n\t                    !mapped[id] ||\n\t                    !mapped[id].parentId ||\n\t                    !mapped[mapped[id].parentId]\n\t                ) return\n\t\n\t                parentId = mapped[id].parentId\n\t                selector = 'li[data-node-id=\"' + parentId + '\"]'\n\t                result.data = mapped[parentId]\n\t                result.element = $(selector, this.$element).find('> .tree-node-control > .tree-node-content')[0]\n\t\n\t                return result\n\t            },\n\t            children: function(element) {\n\t                if (!element) return\n\t\n\t                var that = this\n\t                var mapped = this.options.mapped\n\t                var result = []\n\t\n\t                // .children( jQuery ) .children( element ) .children( id )\n\t                var id = element.jquery ? element.attr('data-node-id') :\n\t                    element.nodeType ? $(element).attr('data-node-id') :\n\t                    element\n\t                var selector\n\t\n\t                if (!id ||\n\t                    !mapped[id] ||\n\t                    !mapped[id].children ||\n\t                    !mapped[id].children.length\n\t                ) return result\n\t\n\t                _.each(mapped[id].children, function(item /*, index*/ ) {\n\t                    selector = 'li[data-node-id=\"' + item.id + '\"]'\n\t                    result.push({\n\t                        data: mapped[item.id],\n\t                        element: $(selector, that.$element).find('> .tree-node-control > .tree-node-content')[0]\n\t                    })\n\t                })\n\t\n\t                return result\n\t            },\n\t            siblings: function(element) {\n\t                if (!element) return\n\t\n\t                var that = this\n\t                var mapped = this.options.mapped\n\t\n\t                // .siblings( jQuery ) .siblings( element ) .siblings( id )\n\t                var id = element.jquery ? element.attr('data-node-id') :\n\t                    element.nodeType ? $(element).attr('data-node-id') :\n\t                    element\n\t\n\t                var parent = this.parent(element)\n\t                var children = []\n\t\n\t                // 当前节点不是根节点\n\t                if (parent) {\n\t                    children = this.children(parent.element)\n\t\n\t                } else {\n\t                    // 当前节点是根节点\n\t                    if (!id || !mapped[id]) return []\n\t                    var parentId = mapped[id].parentId\n\t                    var selector\n\t                    _.each(mapped, function(item /*, index*/ ) {\n\t                        if (item.parentId !== parentId) return\n\t\n\t                        selector = 'li[data-node-id=\"' + item.id + '\"]'\n\t                        children.push({\n\t                            data: item,\n\t                            element: $(selector, that.$element).find('> .tree-node-control > .tree-node-content')[0]\n\t                        })\n\t                    })\n\t                }\n\t\n\t                var result = []\n\t                _.each(children, function(item /*, index*/ ) {\n\t                    if (item.data.id !== id) result.push(item)\n\t                })\n\t\n\t                return result\n\t            },\n\t            all: function() {\n\t                var that = this\n\t                var mapped = this.options.mapped\n\t                var result = []\n\t                var selector\n\t\n\t                _.each(mapped, function(item /*, index*/ ) {\n\t                    selector = 'li[data-node-id=\"' + item.id + '\"]'\n\t                    result.push({\n\t                        data: mapped[item.id],\n\t                        element: $(selector, that.$element).find('> .tree-node-control > .tree-node-content')[0]\n\t                    })\n\t                })\n\t\n\t                return result\n\t            },\n\t            forward: function(event, id) {\n\t                event.stopPropagation()\n\t                var forwardEvent = $.Event(event.type + NAMESPACE, {\n\t                    target: event.target,\n\t                    currentTarget: event.currentTarget\n\t                })\n\t                this.trigger(forwardEvent, [this.options.mapped[id], event.currentTarget])\n\t            },\n\t            destroy: function() {\n\t                var type = 'click' + NAMESPACE + '_' + this.clientId\n\t                $(document.body).off(type)\n\t            }\n\t        })\n\t\n\t        function fix(node, template, nodeTemplate) {\n\t            node.contentFn = function(item) {\n\t                return item.content || _.template(nodeTemplate)(item)\n\t            }\n\t            node.childrenFn = function() {\n\t                if (!this.children || !this.children.length) return ''\n\t                return _.template(template)(this)\n\t            }\n\t            _.each(node.children, function(item /*, index*/ ) {\n\t                fix(item, template, nodeTemplate)\n\t            })\n\t        }\n\t\n\t        return Tree\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<ul class=\\\"tree\\\">\\n\" +\n\t        \"    <% for(var i = 0, item; item = children[i]; i++ ) { %>\\n\" +\n\t        \"        <li data-node-id=\\\"<%= item.id %>\\\" class=\\\"tree-node <%= item.children && item.children.length ? '': 'tree-leaf' %>\\\">\\n\" +\n\t        \"            <div class=\\\"tree-node-control clearfix\\\">\\n\" +\n\t        \"                <div class=\\\"tree-node-toggle\\\" bx-click=\\\"toggle('<%= item.id %>')\\\">\\n\" +\n\t        \"                    <span class=\\\"brixfont plus-sign\\\">&#xe61f;</span>\\n\" +\n\t        \"                    <span class=\\\"brixfont minus-sign\\\">&#xe620;</span>\\n\" +\n\t        \"                </div>\\n\" +\n\t        \"                <div data-node-id=\\\"<%= item.id %>\\\" class=\\\"tree-node-content\\\" bx-click=\\\"forward('<%= item.id %>')\\\" bx-mouseenter=\\\"forward('<%= item.id %>')\\\" bx-mouseleave=\\\"forward('<%= item.id %>')\\\">\\n\" +\n\t        \"                    <%= contentFn(item) %>\\n\" +\n\t        \"                </div>\\n\" +\n\t        \"            </div>\\n\" +\n\t        \"            <%= item.childrenFn() %>\\n\" +\n\t        \"        </li>\\n\" +\n\t        \"    <% } %>\\n\" +\n\t        \"</ul>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* global define */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return \"<span class=\\\"tree-node-content-name\\\"><%= name %></span>\"\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** components/tree.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a25f09edf73c0b84fef9\n **/","module.exports = require('./tree')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/tree/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/* global define */\n/*\n    Tree\n    * Node\n        * id\n        * pid\n        * name\n        * title\n        * url\n        * children\n */\ndefine(\n    [\n        'jquery', 'underscore',\n        'components/base', 'brix/event',\n        './tree.tpl.js',\n        './tree.node.tpl.js'\n    ],\n    function(\n        $, _,\n        Brix, EventManager,\n        template,\n        nodeTemplate\n    ) {\n\n        var NAMESPACE = '.tree'\n        var STATE = {\n            PENDING: 'pending',\n            ACTIVE: 'active',\n            INACTIVE: 'inactive'\n        }\n\n        function toTree(list) {\n            var mapped = {}\n            _.each(list, function(item /*, index*/ ) {\n                if (!item || !item.id) return\n                mapped[item.id] = item\n            })\n\n            var result = []\n            _.each(list, function(item /*, index*/ ) {\n                if (!item) return\n                    /* jshint -W041 */\n                if (item.pid == undefined && item.parentId == undefined) {\n                    result.push(item)\n                    return\n                }\n                var parent = mapped[item.pid] || mapped[item.parentId]\n                if (!parent) return\n                if (!parent.children) parent.children = []\n                parent.children.push(item)\n            })\n            return result\n        }\n\n        function Tree() {}\n\n        _.extend(Tree.prototype, Brix.prototype, {\n            options: {\n                data: undefined,\n                nodeTemplate: undefined,\n                state: 'expand' // expand, collapse\n            },\n            init: function() {\n                var that = this\n                var defer = $.Deferred()\n\n                // 支持自定义 HTML 模板 template\n                var deps = []\n                var customNodeTemplate = this.options.nodeTemplate || this.options['node-template']\n                if (customNodeTemplate) deps.push(customNodeTemplate)\n                window.require(deps, function() {\n                    if (customNodeTemplate) that.options.customNodeTemplate = arguments[0]\n                    defer.resolve()\n                })\n\n                if (!this.options.data) {\n                    // 解析数据时先移除 BiSheng 插入的 script 节点\n                    $(this.element).find('script').remove()\n\n                    var text = $.trim(this.element.innerHTML)\n                        /* jshint evil:true */\n                    this.options.data = eval(\n                        '(function(){ return Array.prototype.slice.call(arguments)[0] })(' + text + ')'\n                    )\n                    this.element.innerHTML = ''\n                }\n\n                var mapped = {}\n                _.each(this.options.data, function(item /*, index*/ ) {\n                    if (!item || !item.id) return\n\n                    /*jshint eqnull:true */\n                    if (item.pid != null && item.parentId == null) item.parentId = item.pid\n                    if (item.pid == null && item.parentId != null) item.pid = item.parentId\n\n                    mapped[item.id] = item\n                })\n                this.options.mapped = mapped\n\n                this.options.data = {\n                    id: 'root',\n                    name: 'root',\n                    children: toTree(this.options.data)\n                }\n\n                if (deps.length) return defer.promise()\n            },\n            render: function() {\n                var that = this\n                var manager = new EventManager()\n                this.$element = $(this.element)\n\n                fix(this.options.data, template, this.options.customNodeTemplate || nodeTemplate)\n                this.$element.append(\n                    _.template(template)(this.options.data)\n                )\n\n                manager.delegate(this.$element, this)\n\n                if (this.options.state === 'collapse') this.collapse()\n                if (this.options.state === 'expand') this.expand()\n\n                /*\n                    var Loader = require('brix/loader')\n                    var trees = Loader.query('components/taginput')\n                    trees.on('active.taginput inactive.taginput', function(e){ console.log(e.type, e.namespace, e.target) } )\n                 */\n                var type = 'click' + NAMESPACE + '_' + this.clientId\n                this._state = STATE.INACTIVE\n                $(document.body).off(type)\n                    .on(type, function(event) {\n                        if (event.target === that.element || // 点击组件节点\n                            $.contains(that.element, event.target) || // 点击组件子节点\n                            !event.target.parentNode // 点击不存在节点\n                        ) {\n                            if (that._state === STATE.ACTIVE) return\n                            that.trigger(\n                                $.Event('active' + NAMESPACE, {\n                                    target: event.target\n                                })\n                            )\n                            that._state = STATE.ACTIVE\n                            return\n                        }\n\n                        if (that._state === STATE.INACTIVE) return\n                        that.trigger(\n                            $.Event('inactive' + NAMESPACE, {\n                                target: event.target\n                            })\n                        )\n                        that._state = STATE.INACTIVE\n                    })\n            },\n            toggle: function(event, id) {\n                event.stopPropagation()\n\n                var selector\n                if (event === undefined) selector = 'li[data-node-id]' // toggle()\n                else if (!event.type) selector = 'li[data-node-id=\"' + event + '\"]' // toggle( id )\n                else selector = 'li[data-node-id=\"' + id + '\"]' // toggle( event, id )\n\n                $(selector, this.$element)\n                    .find('> .tree-node-control .brixfont').toggle().end()\n                    .find('> ul.tree').slideToggle('fast')\n            },\n            expand: function(id) {\n                var selector\n                if (id === undefined) selector = 'li[data-node-id]'\n                else selector = 'li[data-node-id=\"' + id + '\"]'\n\n                // 先展开父节点和祖先节点\n                var mapped = this.options.mapped\n                if (id !== undefined && mapped[id] && mapped[id].parentId) this.expand(mapped[id].parentId)\n\n                // 再展开当前节点\n                var liNode = $(selector, this.$element).show()\n                    .find('> .tree-node-control .brixfont.plus-sign').hide().end()\n                    .find('> .tree-node-control .brixfont.minus-sign').show().end()\n                if (id === undefined) liNode.find('> ul.tree').show()\n                else liNode.find('> ul.tree').slideDown('fast')\n            },\n            collapse: function(id) {\n                var selector\n                if (id === undefined) selector = 'li[data-node-id]'\n                else selector = 'li[data-node-id=\"' + id + '\"]'\n\n                var liNode = $(selector, this.$element).show()\n                    .find('> .tree-node-control .brixfont.plus-sign').show().end()\n                    .find('> .tree-node-control .brixfont.minus-sign').hide().end()\n                if (id === undefined) liNode.find('> ul.tree').hide()\n                else liNode.find('> ul.tree').slideUp('fast')\n            },\n            search: function(value) {\n                if (value === undefined) return\n\n                var that = this\n                $('li[data-node-id]', this.$element).hide()\n\n                var matched = []\n                _.each(this.options.mapped, function(item /*, id*/ ) {\n                    if (item.name.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                        matched.push(item)\n                        clan(item, matched)\n                    }\n                })\n                _.each(_.uniq(matched), function(item /*, index*/ ) {\n                    that.expand(item.id)\n                })\n\n                highlight(this.$element, value)\n\n                function clan(item, matched) {\n                    _.each(item.children, function(stranger) {\n                        matched.push(stranger)\n                        clan(stranger, matched)\n                    })\n                }\n\n                function highlight($container, value) {\n                    var value_re = new RegExp(value, 'ig')\n                    _.each($('.tree-node-content-name', $container), function(item /*, index*/ ) {\n                        var $item = $(item)\n                        $item.html(\n                            $item.text().replace(value_re, function(matched) {\n                                return '<span class=\"highlight\">' + matched + '</span>'\n                            })\n                        )\n                    })\n                }\n\n            },\n            current: function(element) {\n                if (!element) return\n\n                var mapped = this.options.mapped\n                var result = {}\n\n                // .current( jQuery ) .current( element ) .current( id )\n                var id = element.jquery ? element.attr('data-node-id') :\n                    element.nodeType ? $(element).attr('data-node-id') :\n                    element\n                var selector\n\n                if (!id || !mapped[id]) return\n\n                selector = 'li[data-node-id=\"' + id + '\"]'\n                result.data = mapped[id]\n                result.element = $(selector, this.$element).find('> .tree-node-control > .tree-node-content')[0]\n\n                return result\n            },\n            parent: function(element) {\n                if (!element) return\n\n                var mapped = this.options.mapped\n                var result = {}\n\n                // .parent( jQuery ) .parent( element ) .parent( id )\n                var id = element.jquery ? element.attr('data-node-id') :\n                    element.nodeType ? $(element).attr('data-node-id') :\n                    element\n                var parentId, selector\n\n                if (!id ||\n                    !mapped[id] ||\n                    !mapped[id].parentId ||\n                    !mapped[mapped[id].parentId]\n                ) return\n\n                parentId = mapped[id].parentId\n                selector = 'li[data-node-id=\"' + parentId + '\"]'\n                result.data = mapped[parentId]\n                result.element = $(selector, this.$element).find('> .tree-node-control > .tree-node-content')[0]\n\n                return result\n            },\n            children: function(element) {\n                if (!element) return\n\n                var that = this\n                var mapped = this.options.mapped\n                var result = []\n\n                // .children( jQuery ) .children( element ) .children( id )\n                var id = element.jquery ? element.attr('data-node-id') :\n                    element.nodeType ? $(element).attr('data-node-id') :\n                    element\n                var selector\n\n                if (!id ||\n                    !mapped[id] ||\n                    !mapped[id].children ||\n                    !mapped[id].children.length\n                ) return result\n\n                _.each(mapped[id].children, function(item /*, index*/ ) {\n                    selector = 'li[data-node-id=\"' + item.id + '\"]'\n                    result.push({\n                        data: mapped[item.id],\n                        element: $(selector, that.$element).find('> .tree-node-control > .tree-node-content')[0]\n                    })\n                })\n\n                return result\n            },\n            siblings: function(element) {\n                if (!element) return\n\n                var that = this\n                var mapped = this.options.mapped\n\n                // .siblings( jQuery ) .siblings( element ) .siblings( id )\n                var id = element.jquery ? element.attr('data-node-id') :\n                    element.nodeType ? $(element).attr('data-node-id') :\n                    element\n\n                var parent = this.parent(element)\n                var children = []\n\n                // 当前节点不是根节点\n                if (parent) {\n                    children = this.children(parent.element)\n\n                } else {\n                    // 当前节点是根节点\n                    if (!id || !mapped[id]) return []\n                    var parentId = mapped[id].parentId\n                    var selector\n                    _.each(mapped, function(item /*, index*/ ) {\n                        if (item.parentId !== parentId) return\n\n                        selector = 'li[data-node-id=\"' + item.id + '\"]'\n                        children.push({\n                            data: item,\n                            element: $(selector, that.$element).find('> .tree-node-control > .tree-node-content')[0]\n                        })\n                    })\n                }\n\n                var result = []\n                _.each(children, function(item /*, index*/ ) {\n                    if (item.data.id !== id) result.push(item)\n                })\n\n                return result\n            },\n            all: function() {\n                var that = this\n                var mapped = this.options.mapped\n                var result = []\n                var selector\n\n                _.each(mapped, function(item /*, index*/ ) {\n                    selector = 'li[data-node-id=\"' + item.id + '\"]'\n                    result.push({\n                        data: mapped[item.id],\n                        element: $(selector, that.$element).find('> .tree-node-control > .tree-node-content')[0]\n                    })\n                })\n\n                return result\n            },\n            forward: function(event, id) {\n                event.stopPropagation()\n                var forwardEvent = $.Event(event.type + NAMESPACE, {\n                    target: event.target,\n                    currentTarget: event.currentTarget\n                })\n                this.trigger(forwardEvent, [this.options.mapped[id], event.currentTarget])\n            },\n            destroy: function() {\n                var type = 'click' + NAMESPACE + '_' + this.clientId\n                $(document.body).off(type)\n            }\n        })\n\n        function fix(node, template, nodeTemplate) {\n            node.contentFn = function(item) {\n                return item.content || _.template(nodeTemplate)(item)\n            }\n            node.childrenFn = function() {\n                if (!this.children || !this.children.length) return ''\n                return _.template(template)(this)\n            }\n            _.each(node.children, function(item /*, index*/ ) {\n                fix(item, template, nodeTemplate)\n            })\n        }\n\n        return Tree\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/tree/tree.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"components/base\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/event\"\n ** module id = 5\n ** module chunks = 0\n **/","/* global define */\ndefine(function() {\n    return \"<ul class=\\\"tree\\\">\\n\" +\n        \"    <% for(var i = 0, item; item = children[i]; i++ ) { %>\\n\" +\n        \"        <li data-node-id=\\\"<%= item.id %>\\\" class=\\\"tree-node <%= item.children && item.children.length ? '': 'tree-leaf' %>\\\">\\n\" +\n        \"            <div class=\\\"tree-node-control clearfix\\\">\\n\" +\n        \"                <div class=\\\"tree-node-toggle\\\" bx-click=\\\"toggle('<%= item.id %>')\\\">\\n\" +\n        \"                    <span class=\\\"brixfont plus-sign\\\">&#xe61f;</span>\\n\" +\n        \"                    <span class=\\\"brixfont minus-sign\\\">&#xe620;</span>\\n\" +\n        \"                </div>\\n\" +\n        \"                <div data-node-id=\\\"<%= item.id %>\\\" class=\\\"tree-node-content\\\" bx-click=\\\"forward('<%= item.id %>')\\\" bx-mouseenter=\\\"forward('<%= item.id %>')\\\" bx-mouseleave=\\\"forward('<%= item.id %>')\\\">\\n\" +\n        \"                    <%= contentFn(item) %>\\n\" +\n        \"                </div>\\n\" +\n        \"            </div>\\n\" +\n        \"            <%= item.childrenFn() %>\\n\" +\n        \"        </li>\\n\" +\n        \"    <% } %>\\n\" +\n        \"</ul>\"\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/tree/tree.tpl.js\n ** module id = 6\n ** module chunks = 0\n **/","/* global define */\ndefine(function() {\n    return \"<span class=\\\"tree-node-content-name\\\"><%= name %></span>\"\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/tree/tree.node.tpl.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}
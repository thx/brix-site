{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///components/uploader.js","webpack:///webpack/bootstrap 0950937df33084021f77","webpack:///./src/uploader/index.js","webpack:///./src/uploader/uploader.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"brix/loader\"","webpack:///external \"components/base\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","$","_","Loader","Brix","tokon","Math","random","replace","Uploader","TEMPLATE","TOKEN","TOKEN_SELECTOR","NAMESPACE","burn","input","$input","replaceWith","clone","attr","prop","transports","iframe","options","form","defer","Deferred","IFRAME_ID","IFRAME_HTML","target","uniqueId","action","method","enctype","html","template","insertAfter","on","event","$iframeBody","contentWindow","contentDocument","document","body","$iframeResult","find","response","trim","length","text","parseJSONResponse","error","reject","resolve","remove","submit","promise","xhr","data","FormData","each","files","item","append","name","XMLHttpRequest","overrideMimeType","open","upload","onprogress","percent","round","total","notify","onload","responseText","onerror","onabort","ontimeout","send","callback","undefined","JSON","parse","parseError","Function","parseErrorByFunction","readFileAsDataURL","file","reader","FileReader","result","readAsDataURL","extend","prototype","transport","multiple","accept","render","$element","element","parent","css","$relatedElement","clientId","width","outerWidth","height","outerHeight","offset","off","currentTarget","uploader","query","validate","Event","trigger","isDefaultPrevented","then","reason","always","apply"],"mappings":"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","file":"components/uploader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"brix/loader\", \"components/base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/uploader\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"));\n\telse\n\t\troot[\"components/uploader\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"brix/loader\"], root[\"components/base\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"underscore\", \"brix/loader\", \"components/base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"components/uploader\"] = factory(require(\"jquery\"), require(\"underscore\"), require(\"brix/loader\"), require(\"components/base\"));\n\telse\n\t\troot[\"components/uploader\"] = factory(root[\"jquery\"], root[\"underscore\"], root[\"brix/loader\"], root[\"components/base\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1) \n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global define, console, FileReader, FormData, XMLHttpRequest */\n\t/*\n\t    http://jasny.github.io/bootstrap/javascript/#inputmask\n\t */\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(2), __webpack_require__(3),\n\t        __webpack_require__(4), __webpack_require__(5)\n\t    ], __WEBPACK_AMD_DEFINE_RESULT__ = function(\n\t        $, _,\n\t        Loader, Brix\n\t    ) {\n\t        var TEMPLATE = '<input name=\"<%= name %>\" type=\"file\" class=\"uploader-ghost\">'\n\t        var TOKEN = 'data-token'\n\t        var TOKEN_SELECTOR = '[' + TOKEN + ']'\n\t        var NAMESPACE = '.uploader'\n\t\n\t        function tokon() {\n\t            return ('token' + Math.random()).replace(/\\D/g, '')\n\t        }\n\t\n\t        function Uploader() {}\n\t\n\t        // [阅后即焚 Burn After Reading](http://movie.douban.com/subject/2054933/)\n\t        Uploader.burn = function(input) {\n\t            var $input = $(input)\n\t            $input.replaceWith(\n\t                $input.clone(true, true)\n\t                .attr(TOKEN, tokon())\n\t                .prop('clientId', $input.prop('clientId'))\n\t            )\n\t        }\n\t\n\t        // 发送器\n\t        Uploader.transports = {\n\t            iframe: function(options, form /*, input*/ ) {\n\t                var defer = $.Deferred()\n\t\n\t                var IFRAME_ID = 'FILE_UPLOAD_IFRAME_'\n\t                var IFRAME_HTML = '<iframe id=\"<%= id %>\" name=\"<%= id %>\" style=\"display: none;\"></iframe>'\n\t\n\t                form.target = IFRAME_ID + _.uniqueId()\n\t                form.action = options.action\n\t                form.method = 'POST'\n\t                form.enctype = \"multipart/form-data\"\n\t\n\t                var html = _.template(IFRAME_HTML)({\n\t                    id: form.target\n\t                })\n\t                $(html).insertAfter(form)\n\t                    .on('load', function(event) {\n\t                        var iframe = event.target\n\t                        var $iframeBody = $((iframe.contentWindow || iframe.contentDocument).document.body)\n\t                        var $iframeResult = $iframeBody.find('#result')\n\t                        var response = $.trim(\n\t                            $iframeResult.length ? $iframeResult.text() : $iframeBody.text()\n\t                        )\n\t                        Uploader.parseJSONResponse(response, function(error, response) {\n\t                            if (error) defer.reject(error)\n\t                            else defer.resolve(response)\n\t                        })\n\t                        $(iframe).remove()\n\t                    })\n\t                    .on('error', function(event) {\n\t                        defer.reject(event)\n\t                    })\n\t\n\t                form.submit()\n\t\n\t                return defer.promise()\n\t            },\n\t            /* jshint unused:true */\n\t            xhr: function(options, form, input) {\n\t                var defer = $.Deferred()\n\t\n\t                // http://caniuse.com/#search=FormData\n\t                var data = new FormData()\n\t                _.each(input.files, function(item /*, index*/ ) {\n\t                    data.append(options.name, item)\n\t                })\n\t\n\t                var xhr = new XMLHttpRequest()\n\t                xhr.overrideMimeType('application/json')\n\t                xhr.open('post', options.action, true)\n\t                xhr.upload.onprogress = function(event) {\n\t                    event.percent = Math.round((event.loaded / event.total) * 100)\n\t                    defer.notify(event)\n\t                }\n\t                xhr.onload = function( /*event*/ ) {\n\t                    var response = xhr.responseText\n\t                    Uploader.parseJSONResponse(response, function(error, response) {\n\t                        if (error) defer.reject(error)\n\t                        else defer.resolve(response)\n\t                    })\n\t                }\n\t                xhr.onerror = function(event) {\n\t                    defer.reject(event)\n\t                }\n\t                xhr.onabort = function( /*event*/ ) {\n\t                    defer.reject('canceled')\n\t                }\n\t                xhr.ontimeout = function( /*event*/ ) {\n\t                    defer.reject('timeout')\n\t                }\n\t                xhr.send(data)\n\t\n\t                return defer.promise()\n\t            }\n\t        }\n\t\n\t        // 解析响应内容为 JSON 对象\n\t        Uploader.parseJSONResponse = function(response, callback) {\n\t            try {\n\t                callback(undefined, JSON.parse(response))\n\t            } catch (parseError) {\n\t                // 再次尝试解析返回的数据\n\t                /* jshint evil:true */\n\t                try {\n\t                    callback(undefined, (new Function(\"return \" + response))())\n\t                } catch (parseErrorByFunction) {\n\t                    console.log(response)\n\t                    console.error(parseError.stack || parseError)\n\t                    console.error(parseErrorByFunction.stack || parseErrorByFunction)\n\t                    callback(parseErrorByFunction, response)\n\t                }\n\t            } finally {}\n\t        }\n\t\n\t        // 简单封装 [FileReader](https://developer.mozilla.org/en-US/docs/Web/API/FileReader)\n\t        Uploader.readFileAsDataURL = function(file, callback) {\n\t            var reader = new FileReader()\n\t            reader.onload = function(event) {\n\t                callback(event.target.result)\n\t            }\n\t            reader.readAsDataURL(file)\n\t        }\n\t\n\t        _.extend(Uploader.prototype, Brix.prototype, {\n\t            options: {\n\t                action: '',\n\t                name: 'file',\n\t                transport: 'iframe',\n\t                multiple: true,\n\t                accept: ''\n\t            },\n\t            render: function() {\n\t                this.$element = $(this.element)\n\t                this.$element.parent().css('position', 'relative')\n\t\n\t                // 用隐藏的文件域覆盖组件节点\n\t                var $relatedElement = $(_.template(TEMPLATE)(this.options))\n\t                    .attr(TOKEN, tokon())\n\t                    .prop('clientId', this.options.clientId)\n\t                    .prop('disabled', this.$element.prop('disabled'))\n\t                    .insertAfter(this.$element)\n\t                    .width(this.$element.outerWidth())\n\t                    .height(this.$element.outerHeight())\n\t                    .offset(this.$element.offset())\n\t\n\t                if (this.options.multiple) $relatedElement.attr('multiple', 'multiple')\n\t                if (this.options.accept) $relatedElement.prop('accept', this.options.accept)\n\t\n\t                var form = $relatedElement[0].form\n\t                $(form).off('change' + NAMESPACE)\n\t                    .on('change' + NAMESPACE, 'input[type=file]' + TOKEN_SELECTOR, function(event) {\n\t                        var input = event.currentTarget\n\t                        var uploader = Loader.query(input)[0]\n\t\n\t                        var validate = $.Event('start' + NAMESPACE)\n\t                        uploader.trigger(validate, [input.files])\n\t                        if (validate.isDefaultPrevented()) {\n\t                            // #72 阻止上传后再次选择同一文件不触发上传\n\t                            Uploader.burn(input)\n\t                            return\n\t                        }\n\t\n\t                        uploader.send(form, input).then(\n\t                            function(response) {\n\t                                uploader.trigger('success' + NAMESPACE, [input.files, response])\n\t                            },\n\t                            function(reason) {\n\t                                uploader.trigger('error' + NAMESPACE, [input.files, reason])\n\t                            },\n\t                            function(event) {\n\t                                uploader.trigger('progress' + NAMESPACE, [input.files, event])\n\t                            }\n\t                        ).always(function() {\n\t                            try {\n\t                                uploader.trigger('complete' + NAMESPACE, [input.files])\n\t                            } finally {\n\t                                // 先执行回调，再销毁文件域，否则事件不会触发！\n\t                                Uploader.burn(input)\n\t                            }\n\t                        })\n\t                    })\n\t            },\n\t            send: function(form, input) {\n\t                return Uploader.transports[this.options.transport](this.options, form, input)\n\t            }\n\t        })\n\t\n\t        return Uploader\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** components/uploader.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0950937df33084021f77\n **/","module.exports = require('./uploader') \n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/uploader/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/* global define, console, FileReader, FormData, XMLHttpRequest */\n/*\n    http://jasny.github.io/bootstrap/javascript/#inputmask\n */\ndefine(\n    [\n        'jquery', 'underscore',\n        'brix/loader', 'components/base'\n    ],\n    function(\n        $, _,\n        Loader, Brix\n    ) {\n        var TEMPLATE = '<input name=\"<%= name %>\" type=\"file\" class=\"uploader-ghost\">'\n        var TOKEN = 'data-token'\n        var TOKEN_SELECTOR = '[' + TOKEN + ']'\n        var NAMESPACE = '.uploader'\n\n        function tokon() {\n            return ('token' + Math.random()).replace(/\\D/g, '')\n        }\n\n        function Uploader() {}\n\n        // [阅后即焚 Burn After Reading](http://movie.douban.com/subject/2054933/)\n        Uploader.burn = function(input) {\n            var $input = $(input)\n            $input.replaceWith(\n                $input.clone(true, true)\n                .attr(TOKEN, tokon())\n                .prop('clientId', $input.prop('clientId'))\n            )\n        }\n\n        // 发送器\n        Uploader.transports = {\n            iframe: function(options, form /*, input*/ ) {\n                var defer = $.Deferred()\n\n                var IFRAME_ID = 'FILE_UPLOAD_IFRAME_'\n                var IFRAME_HTML = '<iframe id=\"<%= id %>\" name=\"<%= id %>\" style=\"display: none;\"></iframe>'\n\n                form.target = IFRAME_ID + _.uniqueId()\n                form.action = options.action\n                form.method = 'POST'\n                form.enctype = \"multipart/form-data\"\n\n                var html = _.template(IFRAME_HTML)({\n                    id: form.target\n                })\n                $(html).insertAfter(form)\n                    .on('load', function(event) {\n                        var iframe = event.target\n                        var $iframeBody = $((iframe.contentWindow || iframe.contentDocument).document.body)\n                        var $iframeResult = $iframeBody.find('#result')\n                        var response = $.trim(\n                            $iframeResult.length ? $iframeResult.text() : $iframeBody.text()\n                        )\n                        Uploader.parseJSONResponse(response, function(error, response) {\n                            if (error) defer.reject(error)\n                            else defer.resolve(response)\n                        })\n                        $(iframe).remove()\n                    })\n                    .on('error', function(event) {\n                        defer.reject(event)\n                    })\n\n                form.submit()\n\n                return defer.promise()\n            },\n            /* jshint unused:true */\n            xhr: function(options, form, input) {\n                var defer = $.Deferred()\n\n                // http://caniuse.com/#search=FormData\n                var data = new FormData()\n                _.each(input.files, function(item /*, index*/ ) {\n                    data.append(options.name, item)\n                })\n\n                var xhr = new XMLHttpRequest()\n                xhr.overrideMimeType('application/json')\n                xhr.open('post', options.action, true)\n                xhr.upload.onprogress = function(event) {\n                    event.percent = Math.round((event.loaded / event.total) * 100)\n                    defer.notify(event)\n                }\n                xhr.onload = function( /*event*/ ) {\n                    var response = xhr.responseText\n                    Uploader.parseJSONResponse(response, function(error, response) {\n                        if (error) defer.reject(error)\n                        else defer.resolve(response)\n                    })\n                }\n                xhr.onerror = function(event) {\n                    defer.reject(event)\n                }\n                xhr.onabort = function( /*event*/ ) {\n                    defer.reject('canceled')\n                }\n                xhr.ontimeout = function( /*event*/ ) {\n                    defer.reject('timeout')\n                }\n                xhr.send(data)\n\n                return defer.promise()\n            }\n        }\n\n        // 解析响应内容为 JSON 对象\n        Uploader.parseJSONResponse = function(response, callback) {\n            try {\n                callback(undefined, JSON.parse(response))\n            } catch (parseError) {\n                // 再次尝试解析返回的数据\n                /* jshint evil:true */\n                try {\n                    callback(undefined, (new Function(\"return \" + response))())\n                } catch (parseErrorByFunction) {\n                    console.log(response)\n                    console.error(parseError.stack || parseError)\n                    console.error(parseErrorByFunction.stack || parseErrorByFunction)\n                    callback(parseErrorByFunction, response)\n                }\n            } finally {}\n        }\n\n        // 简单封装 [FileReader](https://developer.mozilla.org/en-US/docs/Web/API/FileReader)\n        Uploader.readFileAsDataURL = function(file, callback) {\n            var reader = new FileReader()\n            reader.onload = function(event) {\n                callback(event.target.result)\n            }\n            reader.readAsDataURL(file)\n        }\n\n        _.extend(Uploader.prototype, Brix.prototype, {\n            options: {\n                action: '',\n                name: 'file',\n                transport: 'iframe',\n                multiple: true,\n                accept: ''\n            },\n            render: function() {\n                this.$element = $(this.element)\n                this.$element.parent().css('position', 'relative')\n\n                // 用隐藏的文件域覆盖组件节点\n                var $relatedElement = $(_.template(TEMPLATE)(this.options))\n                    .attr(TOKEN, tokon())\n                    .prop('clientId', this.options.clientId)\n                    .prop('disabled', this.$element.prop('disabled'))\n                    .insertAfter(this.$element)\n                    .width(this.$element.outerWidth())\n                    .height(this.$element.outerHeight())\n                    .offset(this.$element.offset())\n\n                if (this.options.multiple) $relatedElement.attr('multiple', 'multiple')\n                if (this.options.accept) $relatedElement.prop('accept', this.options.accept)\n\n                var form = $relatedElement[0].form\n                $(form).off('change' + NAMESPACE)\n                    .on('change' + NAMESPACE, 'input[type=file]' + TOKEN_SELECTOR, function(event) {\n                        var input = event.currentTarget\n                        var uploader = Loader.query(input)[0]\n\n                        var validate = $.Event('start' + NAMESPACE)\n                        uploader.trigger(validate, [input.files])\n                        if (validate.isDefaultPrevented()) {\n                            // #72 阻止上传后再次选择同一文件不触发上传\n                            Uploader.burn(input)\n                            return\n                        }\n\n                        uploader.send(form, input).then(\n                            function(response) {\n                                uploader.trigger('success' + NAMESPACE, [input.files, response])\n                            },\n                            function(reason) {\n                                uploader.trigger('error' + NAMESPACE, [input.files, reason])\n                            },\n                            function(event) {\n                                uploader.trigger('progress' + NAMESPACE, [input.files, event])\n                            }\n                        ).always(function() {\n                            try {\n                                uploader.trigger('complete' + NAMESPACE, [input.files])\n                            } finally {\n                                // 先执行回调，再销毁文件域，否则事件不会触发！\n                                Uploader.burn(input)\n                            }\n                        })\n                    })\n            },\n            send: function(form, input) {\n                return Uploader.transports[this.options.transport](this.options, form, input)\n            }\n        })\n\n        return Uploader\n    }\n)\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/uploader/uploader.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"brix/loader\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"components/base\"\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}